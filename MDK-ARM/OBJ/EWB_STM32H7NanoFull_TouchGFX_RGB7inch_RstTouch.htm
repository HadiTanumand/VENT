<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\OBJ\EWB_STM32H7NanoFull_TouchGFX_RGB7inch_RstTouch.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\OBJ\EWB_STM32H7NanoFull_TouchGFX_RGB7inch_RstTouch.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6130100: Last Updated: Thu Apr  4 10:02:06 2024
<BR><P>
<H3>Maximum Stack Usage =       5520 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
FrontendApplicationBase::gotoscreenScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; screenView::screenView() &rArr; screenViewBase::screenViewBase__sub_object()
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[4ea]">__user_initial_stackheap</a>
 <LI><a href="#[68f]">operator delete (void*)</a>
 <LI><a href="#[5ad]">__cxa_guard_acquire</a>
 <LI><a href="#[5af]">__cxa_guard_release</a>
 <LI><a href="#[307]">__cxa_pure_virtual</a>
 <LI><a href="#[888]">abort_message</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[81]">ADC3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[81]">ADC3_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[789]">touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[789]">touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)</a><BR>
 <LI><a href="#[729]">touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[729]">touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</a><BR>
 <LI><a href="#[769]">T1 touchgfx::gcd&lang;int&rang;(T1, T1)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[769]">T1 touchgfx::gcd&lang;int&rang;(T1, T1)</a><BR>
 <LI><a href="#[77c]">touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[77c]">touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</a><BR>
 <LI><a href="#[78d]">touchgfx::CWRUtil::arcsine(touchgfx::CWRUtil::Q10)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[78d]">touchgfx::CWRUtil::arcsine(touchgfx::CWRUtil::Q10)</a><BR>
 <LI><a href="#[78c]">touchgfx::CWRUtil::_angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[78c]">touchgfx::CWRUtil::_angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&)</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[81]">ADC3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[83]">BDMA_Channel0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[84]">BDMA_Channel1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[85]">BDMA_Channel2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[86]">BDMA_Channel3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[87]">BDMA_Channel4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[88]">BDMA_Channel5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[89]">BDMA_Channel6_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8a]">BDMA_Channel7_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32h7xx_it.o(.text.BusFault_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[62]">CEC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8b]">COMP1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[91]">CRS_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[53]">DCMI_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[72]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[73]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[74]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[75]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[16]">DMA1_Stream1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream6_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[38]">DMA1_Stream7_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5e]">DMA2D_IRQHandler</a> from stm32h7xx_it.o(.text.DMA2D_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[41]">DMA2_Stream0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[42]">DMA2_Stream1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[43]">DMA2_Stream2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[49]">DMA2_Stream5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4a]">DMA2_Stream6_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4b]">DMA2_Stream7_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[6a]">DMAMUX1_OVR_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[82]">DMAMUX2_OVR_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32h7xx_it.o(.text.DebugMon_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[92]">ECC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[46]">ETH_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[47]">ETH_WKUP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from stm32h7xx_it.o(.text.EXTI0_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from stm32h7xx_it.o(.text.EXTI3_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from stm32h7xx_it.o(.text.EXTI4_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from stm32h7xx_it.o(.text.EXTI9_5_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1d]">FDCAN1_IT0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1f]">FDCAN1_IT1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1e]">FDCAN2_IT0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[20]">FDCAN2_IT1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[48]">FDCAN_CAL_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[39]">FMC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[55]">FPU_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[99]">HAL_GPIO_Init</a> from stm32h7xx_hal_gpio.o(.text.HAL_GPIO_Init) referenced from ltdc.o(.text.HAL_LTDC_MspInit)
 <LI><a href="#[99]">HAL_GPIO_Init</a> from stm32h7xx_hal_gpio.o(.text.HAL_GPIO_Init) referenced from quadspi.o(.text.HAL_QSPI_MspInit)
 <LI><a href="#[99]">HAL_GPIO_Init</a> from stm32h7xx_hal_gpio.o(.text.HAL_GPIO_Init) referenced from fmc.o(.text.HAL_SDRAM_MspInit)
 <LI><a href="#[99]">HAL_GPIO_Init</a> from stm32h7xx_hal_gpio.o(.text.HAL_GPIO_Init) referenced from gpio.o(.text.MX_GPIO_Init)
 <LI><a href="#[99]">HAL_GPIO_Init</a> from stm32h7xx_hal_gpio.o(.text.HAL_GPIO_Init) referenced from touch_iic.o(.text.Touch_IIC_GPIO_Config)
 <LI><a href="#[97]">HAL_GPIO_WritePin</a> from stm32h7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) referenced from touch_800x480.o(.text.GT9XX_Reset)
 <LI><a href="#[97]">HAL_GPIO_WritePin</a> from stm32h7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) referenced from stm32h7xx_it.o(.text.TIM2_IRQHandler)
 <LI><a href="#[97]">HAL_GPIO_WritePin</a> from stm32h7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) referenced from touch_iic.o(.text.Touch_IIC_WriteByte)
 <LI><a href="#[97]">HAL_GPIO_WritePin</a> from stm32h7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) referenced from main.o(.text.main)
 <LI><a href="#[a1]">HAL_NVIC_EnableIRQ</a> from stm32h7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) referenced from gpio.o(.text.MX_GPIO_Init)
 <LI><a href="#[a0]">HAL_NVIC_SetPriority</a> from stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) referenced from gpio.o(.text.MX_GPIO_Init)
 <LI><a href="#[9f]">HAL_SDRAM_SendCommand</a> from stm32h7xx_hal_sdram.o(.text.HAL_SDRAM_SendCommand) referenced from fmc.o(.text.MX_FMC_Init)
 <LI><a href="#[71]">HRTIM1_FLT_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[6b]">HRTIM1_Master_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[6c]">HRTIM1_TIMA_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[6d]">HRTIM1_TIMB_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[6e]">HRTIM1_TIMC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[6f]">HRTIM1_TIMD_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[70]">HRTIM1_TIME_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[80]">HSEM1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32h7xx_it.o(.text.HardFault_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4e]">I2C3_ER_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4d]">I2C3_EV_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[64]">I2C4_ER_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[63]">I2C4_EV_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7d]">JPEG_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[61]">LPTIM1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8c]">LPTIM2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8d]">LPTIM3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8e]">LPTIM4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8f]">LPTIM5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[90]">LPUART1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5d]">LTDC_ER_IRQHandler</a> from stm32h7xx_it.o(.text.LTDC_ER_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5c]">LTDC_IRQHandler</a> from stm32h7xx_it.o(.text.LTDC_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7c]">MDIOS_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7b]">MDIOS_WKUP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7e]">MDMA_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32h7xx_it.o(.text.MemManage_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32h7xx_it.o(.text.NMI_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[67]">OTG_FS_EP1_IN_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[66]">OTG_FS_EP1_OUT_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[69]">OTG_FS_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[68]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[50]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4f]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[52]">OTG_HS_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[51]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[b]">PVD_AVD_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32h7xx_it.o(.text.PendSV_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[60]">QUADSPI_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[54]">RNG_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[9a]">RTC_ByteToBcd2</a> from stm32h7xx_hal_rtc.o(.text.RTC_ByteToBcd2) referenced from stm32h7xx_hal_rtc.o(.text.HAL_RTC_SetTime)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5b]">SAI1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5f]">SAI2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[76]">SAI3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[93]">SAI4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3a]">SDMMC1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7f]">SDMMC2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[65]">SPDIF_RX_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from stm32h7xx_it.o(.text.SPI1_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3c]">SPI3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[58]">SPI4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[59]">SPI5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5a]">SPI6_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[9b]">SPI_DMAAbortOnError</a> from stm32h7xx_hal_spi.o(.text.SPI_DMAAbortOnError) referenced from stm32h7xx_hal_spi.o(.text.HAL_SPI_IRQHandler)
 <LI><a href="#[9d]">SPI_RxISR_16BIT</a> from stm32h7xx_hal_spi.o(.text.SPI_RxISR_16BIT) referenced from stm32h7xx_hal_spi.o(.text.HAL_SPI_Receive_IT)
 <LI><a href="#[9e]">SPI_RxISR_32BIT</a> from stm32h7xx_hal_spi.o(.text.SPI_RxISR_32BIT) referenced from stm32h7xx_hal_spi.o(.text.HAL_SPI_Receive_IT)
 <LI><a href="#[9c]">SPI_RxISR_8BIT</a> from stm32h7xx_hal_spi.o(.text.SPI_RxISR_8BIT) referenced from stm32h7xx_hal_spi.o(.text.HAL_SPI_Receive_IT)
 <LI><a href="#[6]">SVC_Handler</a> from stm32h7xx_it.o(.text.SVC_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[77]">SWPMI1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32h7xx_it.o(.text.SysTick_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[95]">SystemInit</a> from system_stm32h7xx.o(.text.SystemInit) referenced from startup_stm32h743xx.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[78]">TIM15_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[79]">TIM16_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7a]">TIM17_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from stm32h7xx_it.o(.text.TIM2_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from stm32h7xx_it.o(.text.TIM3_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3b]">TIM5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3f]">TIM6_DAC_IRQHandler</a> from stm32h7xx_it.o(.text.TIM6_DAC_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[40]">TIM7_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[34]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[37]">TIM8_CC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[36]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[35]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[98]">Touch_IIC_Delay</a> from touch_iic.o(.text.Touch_IIC_Delay) referenced from touch_800x480.o(.text.GT9XX_Reset)
 <LI><a href="#[98]">Touch_IIC_Delay</a> from touch_iic.o(.text.Touch_IIC_Delay) referenced from touch_iic.o(.text.Touch_IIC_WaitACK)
 <LI><a href="#[3d]">UART4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3e]">UART5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[56]">UART7_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[57]">UART8_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4c]">USART6_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32h7xx_it.o(.text.UsageFault_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[94]">WAKEUP_PIN_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4bb]">_GLOBAL__sub_I_TouchGFXConfiguration.cpp</a> from touchgfxconfiguration.o(.text._GLOBAL__sub_I_TouchGFXConfiguration.cpp) referenced from touchgfxconfiguration.o(.init_array)
 <LI><a href="#[4bc]">_GLOBAL__sub_I_typedtextdatabase.cpp</a> from typedtextdatabase.o(.text._GLOBAL__sub_I_typedtextdatabase.cpp) referenced from typedtextdatabase.o(.init_array)
 <LI><a href="#[10e]">_ZL22DMA2D_XferCpltCallbackP21__DMA2D_HandleTypeDef</a> from stm32dma.o(.text._ZL22DMA2D_XferCpltCallbackP21__DMA2D_HandleTypeDef) referenced from stm32dma.o(.text._ZN8STM32DMA10initializeEv)
 <LI><a href="#[181]">screenView::click_CPAP()</a> from screenview.o(.text._ZN10screenView10click_CPAPEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[136]">screenView::click_FiO2()</a> from screenview.o(.text._ZN10screenView10click_FiO2Ev) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[128]">screenView::click_PEEP()</a> from screenview.o(.text._ZN10screenView10click_PEEPEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[171]">screenView::click_date()</a> from screenview.o(.text._ZN10screenView10click_dateEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[16d]">screenView::click_flow()</a> from screenview.o(.text._ZN10screenView10click_flowEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[162]">screenView::click_mask()</a> from screenview.o(.text._ZN10screenView10click_maskEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[12c]">screenView::click_mode()</a> from screenview.o(.text._ZN10screenView10click_modeEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[15b]">screenView::click_next()</a> from screenview.o(.text._ZN10screenView10click_nextEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[13c]">screenView::click_time()</a> from screenview.o(.text._ZN10screenView10click_timeEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[168]">screenView::click_Psupp()</a> from screenview.o(.text._ZN10screenView11click_PsuppEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[132]">screenView::click_adult()</a> from screenview.o(.text._ZN10screenView11click_adultEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[139]">screenView::click_alarm()</a> from screenview.o(.text._ZN10screenView11click_alarmEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[13e]">screenView::click_audio()</a> from screenview.o(.text._ZN10screenView11click_audioEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[11c]">screenView::setupScreen()</a> from screenview.o(.text._ZN10screenView11setupScreenEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[144]">screenView::click_arabic()</a> from screenview.o(.text._ZN10screenView12click_arabicEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[138]">screenView::click_device()</a> from screenview.o(.text._ZN10screenView12click_deviceEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[15c]">screenView::click_next2x()</a> from screenview.o(.text._ZN10screenView12click_next2xEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[155]">screenView::click_trends()</a> from screenview.o(.text._ZN10screenView12click_trendsEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[148]">screenView::click_RR_conf()</a> from screenview.o(.text._ZN10screenView13click_RR_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[166]">screenView::click_Ti_conf()</a> from screenview.o(.text._ZN10screenView13click_Ti_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[14a]">screenView::click_VT_conf()</a> from screenview.o(.text._ZN10screenView13click_VT_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[137]">screenView::click_confirm()</a> from screenview.o(.text._ZN10screenView13click_confirmEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[16b]">screenView::click_cycling()</a> from screenview.o(.text._ZN10screenView13click_cyclingEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[145]">screenView::click_english()</a> from screenview.o(.text._ZN10screenView13click_englishEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[182]">screenView::click_lowPEEP()</a> from screenview.o(.text._ZN10screenView13click_lowPEEPEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[126]">screenView::click_setting()</a> from screenview.o(.text._ZN10screenView13click_settingEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[16a]">screenView::click_trigger()</a> from screenview.o(.text._ZN10screenView13click_triggerEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[129]">screenView::click_PControl()</a> from screenview.o(.text._ZN10screenView14click_PControlEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[163]">screenView::click_invasive()</a> from screenview.o(.text._ZN10screenView14click_invasiveEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[13f]">screenView::click_language()</a> from screenview.o(.text._ZN10screenView14click_languageEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[159]">screenView::click_previous()</a> from screenview.o(.text._ZN10screenView14click_previousEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[169]">screenView::click_riseTime()</a> from screenview.o(.text._ZN10screenView14click_riseTimeEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1a3]">screenView::click_yesAlert()</a> from screenview.o(.text._ZN10screenView14click_yesAlertEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1b5]">screenView::save_ventHours()</a> from screenview.o(.text._ZN10screenView14save_ventHoursEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[11e]">screenView::tearDownScreen()</a> from screenview.o(.text._ZN10screenView14tearDownScreenEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[17b]">screenView::click_CPAP_conf()</a> from screenview.o(.text._ZN10screenView15click_CPAP_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[19f]">screenView::click_EPAP_conf()</a> from screenview.o(.text._ZN10screenView15click_EPAP_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[15d]">screenView::click_FiO2Alarm()</a> from screenview.o(.text._ZN10screenView15click_FiO2AlarmEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[149]">screenView::click_FiO2_conf()</a> from screenview.o(.text._ZN10screenView15click_FiO2_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1a0]">screenView::click_IPAP_conf()</a> from screenview.o(.text._ZN10screenView15click_IPAP_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[141]">screenView::click_PAlarmbtn()</a> from screenview.o(.text._ZN10screenView15click_PAlarmbtnEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[147]">screenView::click_PEEP_conf()</a> from screenview.o(.text._ZN10screenView15click_PEEP_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[19a]">screenView::click_SPO2Alarm()</a> from screenview.o(.text._ZN10screenView15click_SPO2AlarmEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[183]">screenView::click_leakAlarm()</a> from screenview.o(.text._ZN10screenView15click_leakAlarmEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[133]">screenView::click_pediatric()</a> from screenview.o(.text._ZN10screenView15click_pediatricEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[122]">screenView::handleTickEvent()</a> from screenview.o(.text._ZN10screenView15handleTickEventEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[127]">screenView::click_Monitoring()</a> from screenview.o(.text._ZN10screenView16click_MonitoringEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[195]">screenView::click_PSMax_conf()</a> from screenview.o(.text._ZN10screenView16click_PSMax_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[151]">screenView::click_Psupp_conf()</a> from screenview.o(.text._ZN10screenView16click_Psupp_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[140]">screenView::click_RRAlarmbtn()</a> from screenview.o(.text._ZN10screenView16click_RRAlarmbtnEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[16f]">screenView::click_brightness()</a> from screenview.o(.text._ZN10screenView16click_brightnessEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[172]">screenView::click_deviceInfo()</a> from screenview.o(.text._ZN10screenView16click_deviceInfoEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[15a]">screenView::click_previous2x()</a> from screenview.o(.text._ZN10screenView16click_previous2xEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[164]">screenView::click_ventedMask()</a> from screenview.o(.text._ZN10screenView16click_ventedMaskEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1b6]">screenView::save_ventMinutes()</a> from screenview.o(.text._ZN10screenView16save_ventMinutesEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[175]">screenView::click_MVeAlarmbtn()</a> from screenview.o(.text._ZN10screenView17click_MVeAlarmbtnEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[143]">screenView::click_MViAlarmbtn()</a> from screenview.o(.text._ZN10screenView17click_MViAlarmbtnEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[174]">screenView::click_VteAlarmbtn()</a> from screenview.o(.text._ZN10screenView17click_VteAlarmbtnEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[142]">screenView::click_VtiAlarmbtn()</a> from screenview.o(.text._ZN10screenView17click_VtiAlarmbtnEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[13a]">screenView::click_audioSlider(int)</a> from screenview.o(.text._ZN10screenView17click_audioSliderEi) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[13d]">screenView::click_backAlarmSc()</a> from screenview.o(.text._ZN10screenView17click_backAlarmScEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[13b]">screenView::click_backDeviceS()</a> from screenview.o(.text._ZN10screenView17click_backDeviceSEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[12b]">screenView::click_backSetting()</a> from screenview.o(.text._ZN10screenView17click_backSettingEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[187]">screenView::click_backupApnea()</a> from screenview.o(.text._ZN10screenView17click_backupApneaEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[186]">screenView::click_backupModes()</a> from screenview.o(.text._ZN10screenView17click_backupModesEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1a4]">screenView::click_cancelAlert()</a> from screenview.o(.text._ZN10screenView17click_cancelAlertEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[17c]">screenView::click_dataButton1()</a> from screenview.o(.text._ZN10screenView17click_dataButton1Ev) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[17d]">screenView::click_dataButton2()</a> from screenview.o(.text._ZN10screenView17click_dataButton2Ev) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[17e]">screenView::click_dataButton3()</a> from screenview.o(.text._ZN10screenView17click_dataButton3Ev) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[17f]">screenView::click_dataButton4()</a> from screenview.o(.text._ZN10screenView17click_dataButton4Ev) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[157]">screenView::click_dataRecords()</a> from screenview.o(.text._ZN10screenView17click_dataRecordsEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[14c]">screenView::click_patientInfo()</a> from screenview.o(.text._ZN10screenView17click_patientInfoEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[16c]">screenView::click_sensitivity()</a> from screenview.o(.text._ZN10screenView17click_sensitivityEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[15e]">screenView::click_skip_button()</a> from screenview.o(.text._ZN10screenView17click_skip_buttonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[179]">screenView::click_toggleApnea()</a> from screenview.o(.text._ZN10screenView17click_toggleApneaEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[146]">screenView::click_ventSetting()</a> from screenview.o(.text._ZN10screenView17click_ventSettingEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1a1]">screenView::click_IPAPMax_conf()</a> from screenview.o(.text._ZN10screenView18click_IPAPMax_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[196]">screenView::click_activeAlarms()</a> from screenview.o(.text._ZN10screenView18click_activeAlarmsEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[158]">screenView::click_alarmRecords()</a> from screenview.o(.text._ZN10screenView18click_alarmRecordsEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[14f]">screenView::click_cycling_conf()</a> from screenview.o(.text._ZN10screenView18click_cycling_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[14e]">screenView::click_heightButton()</a> from screenview.o(.text._ZN10screenView18click_heightButtonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[153]">screenView::click_trigger_conf()</a> from screenview.o(.text._ZN10screenView18click_trigger_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1a5]">screenView::click_FiO2FakeAlarm()</a> from screenview.o(.text._ZN10screenView19click_FiO2FakeAlarmEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1a9]">screenView::click_O2Cell_button()</a> from screenview.o(.text._ZN10screenView19click_O2Cell_buttonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[167]">screenView::click_PControl_conf()</a> from screenview.o(.text._ZN10screenView19click_PControl_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[189]">screenView::click_backupConfigs()</a> from screenview.o(.text._ZN10screenView19click_backupConfigsEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[184]">screenView::click_backupSetting()</a> from screenview.o(.text._ZN10screenView19click_backupSettingEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[198]">screenView::click_nextPageAlarm()</a> from screenview.o(.text._ZN10screenView19click_nextPageAlarmEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[165]">screenView::click_nonVentedMask()</a> from screenview.o(.text._ZN10screenView19click_nonVentedMaskEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[19c]">screenView::click_pulsRateAlarm()</a> from screenview.o(.text._ZN10screenView19click_pulsRateAlarmEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[150]">screenView::click_riseTime_conf()</a> from screenview.o(.text._ZN10screenView19click_riseTime_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[17a]">screenView::click_safetyVT_conf()</a> from screenview.o(.text._ZN10screenView19click_safetyVT_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1af]">screenView::click_O2Check_button()</a> from screenview.o(.text._ZN10screenView20click_O2Check_buttonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[18d]">screenView::click_RRBackupScreen()</a> from screenview.o(.text._ZN10screenView20click_RRBackupScreenEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[18c]">screenView::click_TiBackupScreen()</a> from screenview.o(.text._ZN10screenView20click_TiBackupScreenEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[18e]">screenView::click_VTBackupScreen()</a> from screenview.o(.text._ZN10screenView20click_VTBackupScreenEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1a2]">screenView::click_apneaDetection()</a> from screenview.o(.text._ZN10screenView20click_apneaDetectionEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[188]">screenView::click_backApneaAlarm()</a> from screenview.o(.text._ZN10screenView20click_backApneaAlarmEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[180]">screenView::click_backDataGraphs()</a> from screenview.o(.text._ZN10screenView20click_backDataGraphsEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[173]">screenView::click_backDeviceInfo()</a> from screenview.o(.text._ZN10screenView20click_backDeviceInfoEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[177]">screenView::click_backInitialize()</a> from screenview.o(.text._ZN10screenView20click_backInitializeEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[176]">screenView::click_circuitSetting()</a> from screenview.o(.text._ZN10screenView20click_circuitSettingEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[178]">screenView::click_flowShape_conf()</a> from screenview.o(.text._ZN10screenView20click_flowShape_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1ae]">screenView::click_sensors_button()</a> from screenview.o(.text._ZN10screenView20click_sensors_buttonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1b0]">screenView::click_CO2Check_button()</a> from screenview.o(.text._ZN10screenView21click_CO2Check_buttonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1b7]">screenView::click_autoscaleButton()</a> from screenview.o(.text._ZN10screenView21click_autoscaleButtonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[14d]">screenView::click_backPatientInfo()</a> from screenview.o(.text._ZN10screenView21click_backPatientInfoEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[14b]">screenView::click_backVentSetting()</a> from screenview.o(.text._ZN10screenView21click_backVentSettingEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[19b]">screenView::click_circuitDisAlarm()</a> from screenview.o(.text._ZN10screenView21click_circuitDisAlarmEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[19d]">screenView::click_ventStopedAlarm()</a> from screenview.o(.text._ZN10screenView21click_ventStopedAlarmEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1aa]">screenView::click_CO2Sensor_button()</a> from screenview.o(.text._ZN10screenView22click_CO2Sensor_buttonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[194]">screenView::click_PControlMax_conf()</a> from screenview.o(.text._ZN10screenView22click_PControlMax_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[18b]">screenView::click_PEEPBackupScreen()</a> from screenview.o(.text._ZN10screenView22click_PEEPBackupScreenEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1b1]">screenView::click_SPO2Check_button()</a> from screenview.o(.text._ZN10screenView22click_SPO2Check_buttonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[154]">screenView::click_TiInspPause_conf()</a> from screenview.o(.text._ZN10screenView22click_TiInspPause_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[197]">screenView::click_backActiveAlarms()</a> from screenview.o(.text._ZN10screenView22click_backActiveAlarmsEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[185]">screenView::click_backBackupScreen()</a> from screenview.o(.text._ZN10screenView22click_backBackupScreenEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[156]">screenView::click_backTrendsScreen()</a> from screenview.o(.text._ZN10screenView22click_backTrendsScreenEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[170]">screenView::click_brightnessSlider(int)</a> from screenview.o(.text._ZN10screenView22click_brightnessSliderEi) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[19e]">screenView::click_obstructionAlarm()</a> from screenview.o(.text._ZN10screenView22click_obstructionAlarmEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[152]">screenView::click_sensitivity_conf()</a> from screenview.o(.text._ZN10screenView22click_sensitivity_confEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1a7]">screenView::click_tightness_button()</a> from screenview.o(.text._ZN10screenView22click_tightness_buttonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[192]">screenView::click_TiMax_ventSetting()</a> from screenview.o(.text._ZN10screenView23click_TiMax_ventSettingEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[193]">screenView::click_TiMin_ventSetting()</a> from screenview.o(.text._ZN10screenView23click_TiMin_ventSettingEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1a8]">screenView::click_flowSensor_button()</a> from screenview.o(.text._ZN10screenView23click_flowSensor_buttonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[199]">screenView::click_previousPageAlarm()</a> from screenview.o(.text._ZN10screenView23click_previousPageAlarmEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[130]">screenView::click_singleLeak_button()</a> from screenview.o(.text._ZN10screenView23click_singleLeak_buttonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1a6]">screenView::click_configurationButton()</a> from screenview.o(.text._ZN10screenView25click_configurationButtonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[18f]">screenView::click_PControlBackupScreen()</a> from screenview.o(.text._ZN10screenView26click_PControlBackupScreenEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[18a]">screenView::click_backBackupModeScreen()</a> from screenview.o(.text._ZN10screenView26click_backBackupModeScreenEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1b2]">screenView::click_back_tightnessScreen()</a> from screenview.o(.text._ZN10screenView26click_back_tightnessScreenEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[190]">screenView::click_riseTimeBackupScreen()</a> from screenview.o(.text._ZN10screenView26click_riseTimeBackupScreenEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[131]">screenView::click_singleCircuit_button()</a> from screenview.o(.text._ZN10screenView26click_singleCircuit_buttonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1b3]">screenView::click_back_flowSensorScreen()</a> from screenview.o(.text._ZN10screenView27click_back_flowSensorScreenEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[191]">screenView::click_flowShapeBackupScreen()</a> from screenview.o(.text._ZN10screenView27click_flowShapeBackupScreenEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1ad]">screenView::click_testCalibration_button()</a> from screenview.o(.text._ZN10screenView28click_testCalibration_buttonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[12e]">screenView::click_adult_initScreen_button()</a> from screenview.o(.text._ZN10screenView29click_adult_initScreen_buttonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1ab]">screenView::click_tightness_continue_button()</a> from screenview.o(.text._ZN10screenView31click_tightness_continue_buttonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1ac]">screenView::click_flowSensor_continue_button()</a> from screenview.o(.text._ZN10screenView32click_flowSensor_continue_buttonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[12f]">screenView::click_pediatric_initScreen_button()</a> from screenview.o(.text._ZN10screenView33click_pediatric_initScreen_buttonEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[135]">screenView::click_IE()</a> from screenview.o(.text._ZN10screenView8click_IEEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[12a]">screenView::click_RR()</a> from screenview.o(.text._ZN10screenView8click_RREv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[16e]">screenView::click_Ti()</a> from screenview.o(.text._ZN10screenView8click_TiEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[134]">screenView::click_VT()</a> from screenview.o(.text._ZN10screenView8click_VTEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[12d]">screenView::click_age()</a> from screenview.o(.text._ZN10screenView9click_ageEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1b4]">screenView::load_data()</a> from screenview.o(.text._ZN10screenView9load_dataEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[125]">screenView::pauseVent()</a> from screenview.o(.text._ZN10screenView9pauseVentEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[124]">screenView::startVent()</a> from screenview.o(.text._ZN10screenView9startVentEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[11a]">screenView::~screenView__deallocating()</a> from screenview.o(.text._ZN10screenViewD0Ev) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[1e4]">TouchGFXHAL::beginFrame()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL10beginFrameEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1bc]">TouchGFXHAL::initialize()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL10initializeEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1d6]">TouchGFXHAL::enableInterrupts()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL16enableInterruptsEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1bf]">TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1be]">TouchGFXHAL::flushFrameBuffer()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL16flushFrameBufferEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1d7]">TouchGFXHAL::disableInterrupts()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL17disableInterruptsEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1e6]">TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL17setTFTFrameBufferEPt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1d5]">TouchGFXHAL::configureInterrupts()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL19configureInterruptsEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1d8]">TouchGFXHAL::enableLCDControllerInterrupt()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL28enableLCDControllerInterruptEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1e5]">TouchGFXHAL::endFrame()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL8endFrameEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1c5]">TouchGFXHAL::blockCopy(void*, const void*, unsigned)</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL9blockCopyEPvPKvj) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1b9]">TouchGFXHAL::~TouchGFXHAL__deallocating()</a> from touchgfxhal.o(.text._ZN11TouchGFXHALD0Ev) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1ec]">FrontendHeap::~FrontendHeap__deallocating()</a> from touchgfxconfiguration.o(.text._ZN12FrontendHeapD0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
 <LI><a href="#[ae]">FrontendHeap::~FrontendHeap__sub_object()</a> from touchgfxconfiguration.o(.text._ZN12FrontendHeapD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
 <LI><a href="#[ae]">FrontendHeap::~FrontendHeap__sub_object()</a> from touchgfxconfiguration.o(.text._ZN12FrontendHeapD2Ev) referenced from touchgfxconfiguration.o(.text._ZN12FrontendHeap11getInstanceEv)
 <LI><a href="#[24c]">screenViewBase::click_CPAP()</a> from screenviewbase.o(.text._ZN14screenViewBase10click_CPAPEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[204]">screenViewBase::click_FiO2()</a> from screenviewbase.o(.text._ZN14screenViewBase10click_FiO2Ev) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1f6]">screenViewBase::click_PEEP()</a> from screenviewbase.o(.text._ZN14screenViewBase10click_PEEPEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[23c]">screenViewBase::click_date()</a> from screenviewbase.o(.text._ZN14screenViewBase10click_dateEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[238]">screenViewBase::click_flow()</a> from screenviewbase.o(.text._ZN14screenViewBase10click_flowEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[22d]">screenViewBase::click_mask()</a> from screenviewbase.o(.text._ZN14screenViewBase10click_maskEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1fa]">screenViewBase::click_mode()</a> from screenviewbase.o(.text._ZN14screenViewBase10click_modeEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[229]">screenViewBase::click_next()</a> from screenviewbase.o(.text._ZN14screenViewBase10click_nextEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[20a]">screenViewBase::click_time()</a> from screenviewbase.o(.text._ZN14screenViewBase10click_timeEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[233]">screenViewBase::click_Psupp()</a> from screenviewbase.o(.text._ZN14screenViewBase11click_PsuppEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[200]">screenViewBase::click_adult()</a> from screenviewbase.o(.text._ZN14screenViewBase11click_adultEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[207]">screenViewBase::click_alarm()</a> from screenviewbase.o(.text._ZN14screenViewBase11click_alarmEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[20c]">screenViewBase::click_audio()</a> from screenviewbase.o(.text._ZN14screenViewBase11click_audioEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1ef]">screenViewBase::setupScreen()</a> from screenviewbase.o(.text._ZN14screenViewBase11setupScreenEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[212]">screenViewBase::click_arabic()</a> from screenviewbase.o(.text._ZN14screenViewBase12click_arabicEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[206]">screenViewBase::click_device()</a> from screenviewbase.o(.text._ZN14screenViewBase12click_deviceEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[22a]">screenViewBase::click_next2x()</a> from screenviewbase.o(.text._ZN14screenViewBase12click_next2xEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[223]">screenViewBase::click_trends()</a> from screenviewbase.o(.text._ZN14screenViewBase12click_trendsEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[216]">screenViewBase::click_RR_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase13click_RR_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[231]">screenViewBase::click_Ti_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase13click_Ti_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[218]">screenViewBase::click_VT_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase13click_VT_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[205]">screenViewBase::click_confirm()</a> from screenviewbase.o(.text._ZN14screenViewBase13click_confirmEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[236]">screenViewBase::click_cycling()</a> from screenviewbase.o(.text._ZN14screenViewBase13click_cyclingEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[213]">screenViewBase::click_english()</a> from screenviewbase.o(.text._ZN14screenViewBase13click_englishEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[24d]">screenViewBase::click_lowPEEP()</a> from screenviewbase.o(.text._ZN14screenViewBase13click_lowPEEPEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1f4]">screenViewBase::click_setting()</a> from screenviewbase.o(.text._ZN14screenViewBase13click_settingEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[235]">screenViewBase::click_trigger()</a> from screenviewbase.o(.text._ZN14screenViewBase13click_triggerEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1f7]">screenViewBase::click_PControl()</a> from screenviewbase.o(.text._ZN14screenViewBase14click_PControlEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[22e]">screenViewBase::click_invasive()</a> from screenviewbase.o(.text._ZN14screenViewBase14click_invasiveEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[20d]">screenViewBase::click_language()</a> from screenviewbase.o(.text._ZN14screenViewBase14click_languageEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[227]">screenViewBase::click_previous()</a> from screenviewbase.o(.text._ZN14screenViewBase14click_previousEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[234]">screenViewBase::click_riseTime()</a> from screenviewbase.o(.text._ZN14screenViewBase14click_riseTimeEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[26e]">screenViewBase::click_yesAlert()</a> from screenviewbase.o(.text._ZN14screenViewBase14click_yesAlertEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[246]">screenViewBase::click_CPAP_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase15click_CPAP_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[26a]">screenViewBase::click_EPAP_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase15click_EPAP_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[22b]">screenViewBase::click_FiO2Alarm()</a> from screenviewbase.o(.text._ZN14screenViewBase15click_FiO2AlarmEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[217]">screenViewBase::click_FiO2_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase15click_FiO2_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[26b]">screenViewBase::click_IPAP_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase15click_IPAP_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[20f]">screenViewBase::click_PAlarmbtn()</a> from screenviewbase.o(.text._ZN14screenViewBase15click_PAlarmbtnEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[215]">screenViewBase::click_PEEP_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase15click_PEEP_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[265]">screenViewBase::click_SPO2Alarm()</a> from screenviewbase.o(.text._ZN14screenViewBase15click_SPO2AlarmEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[15f]">screenViewBase::click_continue2()</a> from screenview.o(.text._ZN14screenViewBase15click_continue2Ev) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[15f]">screenViewBase::click_continue2()</a> from screenview.o(.text._ZN14screenViewBase15click_continue2Ev) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[160]">screenViewBase::click_continue3()</a> from screenview.o(.text._ZN14screenViewBase15click_continue3Ev) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[160]">screenViewBase::click_continue3()</a> from screenview.o(.text._ZN14screenViewBase15click_continue3Ev) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[24e]">screenViewBase::click_leakAlarm()</a> from screenviewbase.o(.text._ZN14screenViewBase15click_leakAlarmEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[201]">screenViewBase::click_pediatric()</a> from screenviewbase.o(.text._ZN14screenViewBase15click_pediatricEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1f5]">screenViewBase::click_Monitoring()</a> from screenviewbase.o(.text._ZN14screenViewBase16click_MonitoringEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[260]">screenViewBase::click_PSMax_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase16click_PSMax_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[21f]">screenViewBase::click_Psupp_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase16click_Psupp_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[20e]">screenViewBase::click_RRAlarmbtn()</a> from screenviewbase.o(.text._ZN14screenViewBase16click_RRAlarmbtnEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[23a]">screenViewBase::click_brightness()</a> from screenviewbase.o(.text._ZN14screenViewBase16click_brightnessEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[23d]">screenViewBase::click_deviceInfo()</a> from screenviewbase.o(.text._ZN14screenViewBase16click_deviceInfoEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[228]">screenViewBase::click_previous2x()</a> from screenviewbase.o(.text._ZN14screenViewBase16click_previous2xEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[22f]">screenViewBase::click_ventedMask()</a> from screenviewbase.o(.text._ZN14screenViewBase16click_ventedMaskEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[240]">screenViewBase::click_MVeAlarmbtn()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_MVeAlarmbtnEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[211]">screenViewBase::click_MViAlarmbtn()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_MViAlarmbtnEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[23f]">screenViewBase::click_VteAlarmbtn()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_VteAlarmbtnEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[210]">screenViewBase::click_VtiAlarmbtn()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_VtiAlarmbtnEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[208]">screenViewBase::click_audioSlider(int)</a> from screenviewbase.o(.text._ZN14screenViewBase17click_audioSliderEi) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[20b]">screenViewBase::click_backAlarmSc()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_backAlarmScEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[209]">screenViewBase::click_backDeviceS()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_backDeviceSEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1f9]">screenViewBase::click_backSetting()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_backSettingEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[252]">screenViewBase::click_backupApnea()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_backupApneaEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[251]">screenViewBase::click_backupModes()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_backupModesEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[26f]">screenViewBase::click_cancelAlert()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_cancelAlertEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[161]">screenViewBase::click_continueEnd()</a> from screenview.o(.text._ZN14screenViewBase17click_continueEndEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[161]">screenViewBase::click_continueEnd()</a> from screenview.o(.text._ZN14screenViewBase17click_continueEndEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[247]">screenViewBase::click_dataButton1()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_dataButton1Ev) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[248]">screenViewBase::click_dataButton2()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_dataButton2Ev) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[249]">screenViewBase::click_dataButton3()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_dataButton3Ev) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[24a]">screenViewBase::click_dataButton4()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_dataButton4Ev) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[225]">screenViewBase::click_dataRecords()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_dataRecordsEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[21a]">screenViewBase::click_patientInfo()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_patientInfoEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[237]">screenViewBase::click_sensitivity()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_sensitivityEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[22c]">screenViewBase::click_skip_button()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_skip_buttonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[244]">screenViewBase::click_toggleApnea()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_toggleApneaEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[214]">screenViewBase::click_ventSetting()</a> from screenviewbase.o(.text._ZN14screenViewBase17click_ventSettingEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[26c]">screenViewBase::click_IPAPMax_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase18click_IPAPMax_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[261]">screenViewBase::click_activeAlarms()</a> from screenviewbase.o(.text._ZN14screenViewBase18click_activeAlarmsEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[226]">screenViewBase::click_alarmRecords()</a> from screenviewbase.o(.text._ZN14screenViewBase18click_alarmRecordsEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[21d]">screenViewBase::click_cycling_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase18click_cycling_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[21c]">screenViewBase::click_heightButton()</a> from screenviewbase.o(.text._ZN14screenViewBase18click_heightButtonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[221]">screenViewBase::click_trigger_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase18click_trigger_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[270]">screenViewBase::click_FiO2FakeAlarm()</a> from screenviewbase.o(.text._ZN14screenViewBase19click_FiO2FakeAlarmEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[274]">screenViewBase::click_O2Cell_button()</a> from screenviewbase.o(.text._ZN14screenViewBase19click_O2Cell_buttonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[232]">screenViewBase::click_PControl_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase19click_PControl_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[254]">screenViewBase::click_backupConfigs()</a> from screenviewbase.o(.text._ZN14screenViewBase19click_backupConfigsEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[24f]">screenViewBase::click_backupSetting()</a> from screenviewbase.o(.text._ZN14screenViewBase19click_backupSettingEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[263]">screenViewBase::click_nextPageAlarm()</a> from screenviewbase.o(.text._ZN14screenViewBase19click_nextPageAlarmEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[230]">screenViewBase::click_nonVentedMask()</a> from screenviewbase.o(.text._ZN14screenViewBase19click_nonVentedMaskEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[267]">screenViewBase::click_pulsRateAlarm()</a> from screenviewbase.o(.text._ZN14screenViewBase19click_pulsRateAlarmEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[21e]">screenViewBase::click_riseTime_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase19click_riseTime_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[245]">screenViewBase::click_safetyVT_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase19click_safetyVT_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[27a]">screenViewBase::click_O2Check_button()</a> from screenviewbase.o(.text._ZN14screenViewBase20click_O2Check_buttonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[258]">screenViewBase::click_RRBackupScreen()</a> from screenviewbase.o(.text._ZN14screenViewBase20click_RRBackupScreenEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[257]">screenViewBase::click_TiBackupScreen()</a> from screenviewbase.o(.text._ZN14screenViewBase20click_TiBackupScreenEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[259]">screenViewBase::click_VTBackupScreen()</a> from screenviewbase.o(.text._ZN14screenViewBase20click_VTBackupScreenEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[26d]">screenViewBase::click_apneaDetection()</a> from screenviewbase.o(.text._ZN14screenViewBase20click_apneaDetectionEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[253]">screenViewBase::click_backApneaAlarm()</a> from screenviewbase.o(.text._ZN14screenViewBase20click_backApneaAlarmEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[24b]">screenViewBase::click_backDataGraphs()</a> from screenviewbase.o(.text._ZN14screenViewBase20click_backDataGraphsEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[23e]">screenViewBase::click_backDeviceInfo()</a> from screenviewbase.o(.text._ZN14screenViewBase20click_backDeviceInfoEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[242]">screenViewBase::click_backInitialize()</a> from screenviewbase.o(.text._ZN14screenViewBase20click_backInitializeEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[241]">screenViewBase::click_circuitSetting()</a> from screenviewbase.o(.text._ZN14screenViewBase20click_circuitSettingEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[243]">screenViewBase::click_flowShape_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase20click_flowShape_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[279]">screenViewBase::click_sensors_button()</a> from screenviewbase.o(.text._ZN14screenViewBase20click_sensors_buttonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[ea]">screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from screenviewbase.o(.text._ZN14screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[27b]">screenViewBase::click_CO2Check_button()</a> from screenviewbase.o(.text._ZN14screenViewBase21click_CO2Check_buttonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[21b]">screenViewBase::click_backPatientInfo()</a> from screenviewbase.o(.text._ZN14screenViewBase21click_backPatientInfoEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[219]">screenViewBase::click_backVentSetting()</a> from screenviewbase.o(.text._ZN14screenViewBase21click_backVentSettingEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[266]">screenViewBase::click_circuitDisAlarm()</a> from screenviewbase.o(.text._ZN14screenViewBase21click_circuitDisAlarmEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[268]">screenViewBase::click_ventStopedAlarm()</a> from screenviewbase.o(.text._ZN14screenViewBase21click_ventStopedAlarmEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[275]">screenViewBase::click_CO2Sensor_button()</a> from screenviewbase.o(.text._ZN14screenViewBase22click_CO2Sensor_buttonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[25f]">screenViewBase::click_PControlMax_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase22click_PControlMax_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[256]">screenViewBase::click_PEEPBackupScreen()</a> from screenviewbase.o(.text._ZN14screenViewBase22click_PEEPBackupScreenEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[27c]">screenViewBase::click_SPO2Check_button()</a> from screenviewbase.o(.text._ZN14screenViewBase22click_SPO2Check_buttonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[222]">screenViewBase::click_TiInspPause_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase22click_TiInspPause_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[262]">screenViewBase::click_backActiveAlarms()</a> from screenviewbase.o(.text._ZN14screenViewBase22click_backActiveAlarmsEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[250]">screenViewBase::click_backBackupScreen()</a> from screenviewbase.o(.text._ZN14screenViewBase22click_backBackupScreenEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[224]">screenViewBase::click_backTrendsScreen()</a> from screenviewbase.o(.text._ZN14screenViewBase22click_backTrendsScreenEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[23b]">screenViewBase::click_brightnessSlider(int)</a> from screenviewbase.o(.text._ZN14screenViewBase22click_brightnessSliderEi) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[269]">screenViewBase::click_obstructionAlarm()</a> from screenviewbase.o(.text._ZN14screenViewBase22click_obstructionAlarmEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[220]">screenViewBase::click_sensitivity_conf()</a> from screenviewbase.o(.text._ZN14screenViewBase22click_sensitivity_confEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[272]">screenViewBase::click_tightness_button()</a> from screenviewbase.o(.text._ZN14screenViewBase22click_tightness_buttonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[25d]">screenViewBase::click_TiMax_ventSetting()</a> from screenviewbase.o(.text._ZN14screenViewBase23click_TiMax_ventSettingEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[25e]">screenViewBase::click_TiMin_ventSetting()</a> from screenviewbase.o(.text._ZN14screenViewBase23click_TiMin_ventSettingEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[273]">screenViewBase::click_flowSensor_button()</a> from screenviewbase.o(.text._ZN14screenViewBase23click_flowSensor_buttonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[264]">screenViewBase::click_previousPageAlarm()</a> from screenviewbase.o(.text._ZN14screenViewBase23click_previousPageAlarmEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1fe]">screenViewBase::click_singleLeak_button()</a> from screenviewbase.o(.text._ZN14screenViewBase23click_singleLeak_buttonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[271]">screenViewBase::click_configurationButton()</a> from screenviewbase.o(.text._ZN14screenViewBase25click_configurationButtonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[25a]">screenViewBase::click_PControlBackupScreen()</a> from screenviewbase.o(.text._ZN14screenViewBase26click_PControlBackupScreenEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[255]">screenViewBase::click_backBackupModeScreen()</a> from screenviewbase.o(.text._ZN14screenViewBase26click_backBackupModeScreenEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[27d]">screenViewBase::click_back_tightnessScreen()</a> from screenviewbase.o(.text._ZN14screenViewBase26click_back_tightnessScreenEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[25b]">screenViewBase::click_riseTimeBackupScreen()</a> from screenviewbase.o(.text._ZN14screenViewBase26click_riseTimeBackupScreenEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1ff]">screenViewBase::click_singleCircuit_button()</a> from screenviewbase.o(.text._ZN14screenViewBase26click_singleCircuit_buttonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[27e]">screenViewBase::click_back_flowSensorScreen()</a> from screenviewbase.o(.text._ZN14screenViewBase27click_back_flowSensorScreenEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[25c]">screenViewBase::click_flowShapeBackupScreen()</a> from screenviewbase.o(.text._ZN14screenViewBase27click_flowShapeBackupScreenEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[278]">screenViewBase::click_testCalibration_button()</a> from screenviewbase.o(.text._ZN14screenViewBase28click_testCalibration_buttonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1fc]">screenViewBase::click_adult_initScreen_button()</a> from screenviewbase.o(.text._ZN14screenViewBase29click_adult_initScreen_buttonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[e6]">screenViewBase::logo_fadeEndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase29logo_fadeEndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_5ImageEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[e7]">screenViewBase::logo_showEndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase29logo_showEndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_5ImageEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[c9]">screenViewBase::wait_logosEndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase30wait_logosEndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[276]">screenViewBase::click_tightness_continue_button()</a> from screenviewbase.o(.text._ZN14screenViewBase31click_tightness_continue_buttonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[277]">screenViewBase::click_flowSensor_continue_button()</a> from screenviewbase.o(.text._ZN14screenViewBase32click_flowSensor_continue_buttonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1fd]">screenViewBase::click_pediatric_initScreen_button()</a> from screenviewbase.o(.text._ZN14screenViewBase33click_pediatric_initScreen_buttonEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[e9]">screenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider&, int)</a> from screenviewbase.o(.text._ZN14screenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[e8]">screenViewBase::radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton&)</a> from screenviewbase.o(.text._ZN14screenViewBase34radioButtonSelectedCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[e5]">screenViewBase::ventInfo_show1EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show1EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[e4]">screenViewBase::ventInfo_show2EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show2EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[e3]">screenViewBase::ventInfo_show3EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show3EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[e1]">screenViewBase::ventInfo_show4EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show4EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[e2]">screenViewBase::ventInfo_show5EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show5EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[df]">screenViewBase::ventInfo_show6EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show6EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[e0]">screenViewBase::ventInfo_show7EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show7EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[dd]">screenViewBase::ventInfo_show8EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show8EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[de]">screenViewBase::ventInfo_show9EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show9EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[db]">screenViewBase::ventInfo_show10EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show10EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[dc]">screenViewBase::ventInfo_show11EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show11EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[d9]">screenViewBase::ventInfo_show12EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show12EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[da]">screenViewBase::ventInfo_show13EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show13EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[d7]">screenViewBase::ventInfo_show14EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show14EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[d8]">screenViewBase::ventInfo_show15EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show15EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[d5]">screenViewBase::ventInfo_show18EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show18EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[d6]">screenViewBase::ventInfo_show19EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show19EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[d3]">screenViewBase::ventInfo_show20EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show20EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[d4]">screenViewBase::ventInfo_show21EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show21EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[d1]">screenViewBase::ventInfo_show22EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show22EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[d2]">screenViewBase::ventInfo_show23EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show23EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[cf]">screenViewBase::ventInfo_show24EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show24EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[d0]">screenViewBase::ventInfo_show25EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show25EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[cd]">screenViewBase::ventInfo_show26EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show26EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[ce]">screenViewBase::ventInfo_show27EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show27EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[cb]">screenViewBase::ventInfo_show28EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show28EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[cc]">screenViewBase::ventInfo_show29EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show29EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[ca]">screenViewBase::ventInfo_show30EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show30EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[203]">screenViewBase::click_IE()</a> from screenviewbase.o(.text._ZN14screenViewBase8click_IEEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1f8]">screenViewBase::click_RR()</a> from screenviewbase.o(.text._ZN14screenViewBase8click_RREv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[239]">screenViewBase::click_Ti()</a> from screenviewbase.o(.text._ZN14screenViewBase8click_TiEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[202]">screenViewBase::click_VT()</a> from screenviewbase.o(.text._ZN14screenViewBase8click_VTEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1fb]">screenViewBase::click_age()</a> from screenviewbase.o(.text._ZN14screenViewBase9click_ageEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1f3]">screenViewBase::pauseVent()</a> from screenviewbase.o(.text._ZN14screenViewBase9pauseVentEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1f2]">screenViewBase::startVent()</a> from screenviewbase.o(.text._ZN14screenViewBase9startVentEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1ee]">screenViewBase::~screenViewBase__deallocating()</a> from screenviewbase.o(.text._ZN14screenViewBaseD0Ev) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[119]">screenViewBase::~screenViewBase__sub_object()</a> from screenview.o(.text._ZN14screenViewBaseD2Ev) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[119]">screenViewBase::~screenViewBase__sub_object()</a> from screenview.o(.text._ZN14screenViewBaseD2Ev) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[280]">screenPresenter::deactivate()</a> from screenpresenter.o(.text._ZN15screenPresenter10deactivateEv) referenced from screenpresenter.o(.rodata._ZTV15screenPresenter)
 <LI><a href="#[27f]">screenPresenter::activate()</a> from screenpresenter.o(.text._ZN15screenPresenter8activateEv) referenced from screenpresenter.o(.rodata._ZTV15screenPresenter)
 <LI><a href="#[282]">screenPresenter::~screenPresenter__deallocating()</a> from screenpresenter.o(.text._ZN15screenPresenterD0Ev) referenced from screenpresenter.o(.rodata._ZTV15screenPresenter)
 <LI><a href="#[281]">screenPresenter::~screenPresenter__sub_object()</a> from screenpresenter.o(.text._ZN15screenPresenterD2Ev) referenced from screenpresenter.o(.rodata._ZTV15screenPresenter)
 <LI><a href="#[1ed]">FrontendHeapBase::gotoStartScreen(FrontendApplication&)</a> from touchgfxconfiguration.o(.text._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication) referenced from touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
 <LI><a href="#[289]">FrontendApplication::handleTickEvent()</a> from frontendapplication.o(.text._ZN19FrontendApplication15handleTickEventEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[28c]">FrontendApplication::~FrontendApplication__deallocating()</a> from frontendapplication.o(.text._ZN19FrontendApplicationD0Ev) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[299]">STM32TouchController::sampleTouch(int&, int&)</a> from stm32touchcontroller.o(.text._ZN20STM32TouchController11sampleTouchERiS0_) referenced from stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
 <LI><a href="#[298]">STM32TouchController::init()</a> from stm32touchcontroller.o(.text._ZN20STM32TouchController4initEv) referenced from stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
 <LI><a href="#[297]">STM32TouchController::~STM32TouchController__deallocating()</a> from stm32touchcontroller.o(.text._ZN20STM32TouchControllerD0Ev) referenced from stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
 <LI><a href="#[1eb]">TouchGFXGeneratedHAL::FlushCache()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL10FlushCacheEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1eb]">TouchGFXGeneratedHAL::FlushCache()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL10FlushCacheEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[2a4]">TouchGFXGeneratedHAL::beginFrame()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL10beginFrameEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[29b]">TouchGFXGeneratedHAL::initialize()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL10initializeEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1ea]">TouchGFXGeneratedHAL::InvalidateCache()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL15InvalidateCacheEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1ea]">TouchGFXGeneratedHAL::InvalidateCache()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL15InvalidateCacheEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[2a1]">TouchGFXGeneratedHAL::enableInterrupts()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL16enableInterruptsEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[29d]">TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[29c]">TouchGFXGeneratedHAL::flushFrameBuffer()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL16flushFrameBufferEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[2a2]">TouchGFXGeneratedHAL::disableInterrupts()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL17disableInterruptsEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[2a6]">TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[2a0]">TouchGFXGeneratedHAL::configureInterrupts()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL19configureInterruptsEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[2a3]">TouchGFXGeneratedHAL::enableLCDControllerInterrupt()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[2a5]">TouchGFXGeneratedHAL::endFrame()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL8endFrameEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[29f]">TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned)</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvj) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[29a]">TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__deallocating()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHALD0Ev) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[2a7]">ApplicationFontProvider::getFont(unsigned short)</a> from applicationfontprovider.o(.text._ZN23ApplicationFontProvider7getFontEt) referenced from applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
 <LI><a href="#[2a9]">ApplicationFontProvider::~ApplicationFontProvider__deallocating()</a> from applicationfontprovider.o(.text._ZN23ApplicationFontProviderD0Ev) referenced from applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
 <LI><a href="#[28d]">FrontendApplicationBase::changeToStartScreen()</a> from frontendapplication.o(.text._ZN23FrontendApplicationBase19changeToStartScreenEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[28d]">FrontendApplicationBase::changeToStartScreen()</a> from frontendapplication.o(.text._ZN23FrontendApplicationBase19changeToStartScreenEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[10d]">FrontendApplicationBase::gotoscreenScreenNoTransitionImpl()</a> from frontendapplicationbase.o(.text._ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.text._ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv)
 <LI><a href="#[2ab]">FrontendApplicationBase::~FrontendApplicationBase__deallocating()</a> from frontendapplicationbase.o(.text._ZN23FrontendApplicationBaseD0Ev) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[28b]">FrontendApplicationBase::~FrontendApplicationBase__sub_object()</a> from frontendapplication.o(.text._ZN23FrontendApplicationBaseD2Ev) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[28b]">FrontendApplicationBase::~FrontendApplicationBase__sub_object()</a> from frontendapplication.o(.text._ZN23FrontendApplicationBaseD2Ev) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[2b2]">STM32DMA::getDMAType()</a> from stm32dma.o(.text._ZN8STM32DMA10getDMATypeEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[2af]">STM32DMA::initialize()</a> from stm32dma.o(.text._ZN8STM32DMA10initializeEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[2ac]">STM32DMA::getBlitCaps()</a> from stm32dma.o(.text._ZN8STM32DMA11getBlitCapsEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[2b8]">STM32DMA::setupDataCopy(const touchgfx::BlitOp&)</a> from stm32dma.o(.text._ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[2b9]">STM32DMA::setupDataFill(const touchgfx::BlitOp&)</a> from stm32dma.o(.text._ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[2b1]">STM32DMA::signalDMAInterrupt()</a> from stm32dma.o(.text._ZN8STM32DMA18signalDMAInterruptEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[2b4]">STM32DMA::~STM32DMA__deallocating()</a> from stm32dma.o(.text._ZN8STM32DMAD0Ev) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[a2]">STM32DMA::~STM32DMA()</a> from stm32dma.o(.text._ZN8STM32DMAD2Ev) referenced from touchgfxconfiguration.o(.text._GLOBAL__sub_I_TouchGFXConfiguration.cpp)
 <LI><a href="#[2b3]">STM32DMA::~STM32DMA__sub_object()</a> from stm32dma.o(.text._ZN8STM32DMAD2Ev) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[2bf]">touchgfx::ClickEvent::~ClickEvent__deallocating()</a> from screen.o(.text._ZN8touchgfx10ClickEventD0Ev) referenced from screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
 <LI><a href="#[34e]">touchgfx::Transition::invalidate()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition10invalidateEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[34f]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[34d]">touchgfx::Transition::init()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition4initEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[34c]">touchgfx::Transition::tearDown()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition8tearDownEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[349]">touchgfx::Transition::~Transition__sub_object()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10TransitionD2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[28e]">touchgfx::Application::switchScreen(touchgfx::Screen*)</a> from application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[28e]">touchgfx::Application::switchScreen(touchgfx::Screen*)</a> from application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[28e]">touchgfx::Application::switchScreen(touchgfx::Screen*)</a> from application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[28e]">touchgfx::Application::switchScreen(touchgfx::Screen*)</a> from application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[291]">touchgfx::Application::requestRedraw(touchgfx::Rect&)</a> from frontendapplication.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[291]">touchgfx::Application::requestRedraw(touchgfx::Rect&)</a> from frontendapplication.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[291]">touchgfx::Application::requestRedraw(touchgfx::Rect&)</a> from frontendapplication.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[291]">touchgfx::Application::requestRedraw(touchgfx::Rect&)</a> from frontendapplication.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[290]">touchgfx::Application::requestRedraw()</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[290]">touchgfx::Application::requestRedraw()</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[290]">touchgfx::Application::requestRedraw()</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[290]">touchgfx::Application::requestRedraw()</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[288]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[288]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[288]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application14handleKeyEventEh) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[288]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[28f]">touchgfx::Application::appSwitchScreen(unsigned char)</a> from frontendapplication.o(.text._ZN8touchgfx11Application15appSwitchScreenEh) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[28f]">touchgfx::Application::appSwitchScreen(unsigned char)</a> from frontendapplication.o(.text._ZN8touchgfx11Application15appSwitchScreenEh) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[28f]">touchgfx::Application::appSwitchScreen(unsigned char)</a> from frontendapplication.o(.text._ZN8touchgfx11Application15appSwitchScreenEh) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[28f]">touchgfx::Application::appSwitchScreen(unsigned char)</a> from frontendapplication.o(.text._ZN8touchgfx11Application15appSwitchScreenEh) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[293]">touchgfx::Application::drawCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application15drawCachedAreasEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[293]">touchgfx::Application::drawCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application15drawCachedAreasEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[293]">touchgfx::Application::drawCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application15drawCachedAreasEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[293]">touchgfx::Application::drawCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application15drawCachedAreasEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[286]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[286]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[286]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[286]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[2aa]">touchgfx::Application::handleTickEvent()</a> from application.o(.text._ZN8touchgfx11Application15handleTickEventEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[2aa]">touchgfx::Application::handleTickEvent()</a> from application.o(.text._ZN8touchgfx11Application15handleTickEventEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[2aa]">touchgfx::Application::handleTickEvent()</a> from application.o(.text._ZN8touchgfx11Application15handleTickEventEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[292]">touchgfx::Application::clearCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application16clearCachedAreasEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[292]">touchgfx::Application::clearCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application16clearCachedAreasEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[292]">touchgfx::Application::clearCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application16clearCachedAreasEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[292]">touchgfx::Application::clearCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application16clearCachedAreasEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[285]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[285]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[285]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[285]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[287]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[287]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[287]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[287]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[2c4]">touchgfx::Application::changeToStartScreen()</a> from frontendapplicationbase.o(.text._ZN8touchgfx11Application19changeToStartScreenEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[2c4]">touchgfx::Application::changeToStartScreen()</a> from frontendapplicationbase.o(.text._ZN8touchgfx11Application19changeToStartScreenEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[2c1]">touchgfx::Application::handlePendingScreenTransition()</a> from application.o(.text._ZN8touchgfx11Application29handlePendingScreenTransitionEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[295]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[295]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[295]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[295]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[294]">touchgfx::Application::draw()</a> from application.o(.text._ZN8touchgfx11Application4drawEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[294]">touchgfx::Application::draw()</a> from application.o(.text._ZN8touchgfx11Application4drawEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[294]">touchgfx::Application::draw()</a> from application.o(.text._ZN8touchgfx11Application4drawEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[294]">touchgfx::Application::draw()</a> from application.o(.text._ZN8touchgfx11Application4drawEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[2c3]">touchgfx::Application::~Application__deallocating()</a> from application.o(.text._ZN8touchgfx11ApplicationD0Ev) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[fa]">touchgfx::BoxProgress::setProgressIndicatorPosition(short, short, short, short)</a> from boxprogress.o(.text._ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[fa]">touchgfx::BoxProgress::setProgressIndicatorPosition(short, short, short, short)</a> from boxprogress.o(.text._ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss) referenced 4 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[2f0]">touchgfx::BoxProgress::setAlpha(unsigned char)</a> from boxprogress.o(.text._ZN8touchgfx11BoxProgress8setAlphaEh) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[fe]">touchgfx::BoxProgress::setColor(touchgfx::colortype)</a> from boxprogress.o(.text._ZN8touchgfx11BoxProgress8setColorENS_9colortypeE) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[fe]">touchgfx::BoxProgress::setColor(touchgfx::colortype)</a> from boxprogress.o(.text._ZN8touchgfx11BoxProgress8setColorENS_9colortypeE) referenced 4 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[ff]">touchgfx::BoxProgress::setValue(int)</a> from boxprogress.o(.text._ZN8touchgfx11BoxProgress8setValueEi) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[ff]">touchgfx::BoxProgress::setValue(int)</a> from boxprogress.o(.text._ZN8touchgfx11BoxProgress8setValueEi) referenced 4 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[bd]">touchgfx::BoxProgress::BoxProgress()</a> from boxprogress.o(.text._ZN8touchgfx11BoxProgressC2Ev) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[2c6]">touchgfx::BoxProgress::~BoxProgress__deallocating()</a> from boxprogress.o(.text._ZN8touchgfx11BoxProgressD0Ev) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2c5]">touchgfx::BoxProgress::~BoxProgress__sub_object()</a> from boxprogress.o(.text._ZN8touchgfx11BoxProgressD2Ev) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[101]">touchgfx::RadioButton::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from radiobutton.o(.text._ZN8touchgfx11RadioButton10setBitmapsERKNS_6BitmapES3_S3_S3_) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[101]">touchgfx::RadioButton::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from radiobutton.o(.text._ZN8touchgfx11RadioButton10setBitmapsERKNS_6BitmapES3_S3_S3_) referenced 3 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[102]">touchgfx::RadioButton::setSelected(bool)</a> from radiobutton.o(.text._ZN8touchgfx11RadioButton11setSelectedEb) referenced 3 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[2fb]">touchgfx::RadioButton::handleClickEvent(const touchgfx::ClickEvent&)</a> from radiobutton.o(.text._ZN8touchgfx11RadioButton16handleClickEventERKNS_10ClickEventE) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[c0]">touchgfx::RadioButton::RadioButton__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx11RadioButtonC2Ev) referenced 2 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[2f5]">touchgfx::RadioButton::~RadioButton__deallocating()</a> from radiobutton.o(.text._ZN8touchgfx11RadioButtonD0Ev) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[304]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[304]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[304]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[304]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[304]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[304]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[304]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[304]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[304]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[304]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[304]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[300]">touchgfx::CanvasWidget::~CanvasWidget__deallocating()</a> from canvaswidget.o(.text._ZN8touchgfx12CanvasWidgetD0Ev) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[30f]">touchgfx::DigitalClock::updateClock()</a> from digitalclock.o(.text._ZN8touchgfx12DigitalClock11updateClockEv) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[310]">touchgfx::DigitalClock::setBaselineY(short)</a> from digitalclock.o(.text._ZN8touchgfx12DigitalClock12setBaselineYEs) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[311]">touchgfx::DigitalClock::setTypedText(touchgfx::TypedText)</a> from digitalclock.o(.text._ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[314]">touchgfx::DigitalClock::setDisplayMode(touchgfx::DigitalClock::DisplayMode)</a> from digitalclock.o(.text._ZN8touchgfx12DigitalClock14setDisplayModeENS0_11DisplayModeE) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[316]">touchgfx::DigitalClock::setAlpha(unsigned char)</a> from digitalclock.o(.text._ZN8touchgfx12DigitalClock8setAlphaEh) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[312]">touchgfx::DigitalClock::setColor(touchgfx::colortype)</a> from digitalclock.o(.text._ZN8touchgfx12DigitalClock8setColorENS_9colortypeE) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[30b]">touchgfx::DigitalClock::setWidth(short)</a> from digitalclock.o(.text._ZN8touchgfx12DigitalClock8setWidthEs) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[30c]">touchgfx::DigitalClock::setHeight(short)</a> from digitalclock.o(.text._ZN8touchgfx12DigitalClock9setHeightEs) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[309]">touchgfx::DigitalClock::~DigitalClock__deallocating()</a> from digitalclock.o(.text._ZN8touchgfx12DigitalClockD0Ev) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[308]">touchgfx::DigitalClock::~DigitalClock__sub_object()</a> from digitalclock.o(.text._ZN8touchgfx12DigitalClockD2Ev) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[31d]">touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_5ImageEE15handleTickEventEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[31e]">touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::setFadeAnimationDelay(unsigned short)</a> from screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_5ImageEE21setFadeAnimationDelayEt) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[319]">touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::~FadeAnimator__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_5ImageEED0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[327]">touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_8TextAreaEE15handleTickEventEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[b2]">touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))</a> from screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_8TextAreaEE18startFadeAnimationEhtPFstsstE) referenced from screenviewbase.o(.text._ZN14screenViewBase30wait_logosEndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
 <LI><a href="#[332]">touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::setFadeAnimationDelay(unsigned short)</a> from screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_8TextAreaEE21setFadeAnimationDelayEt) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[b5]">touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::FadeAnimator__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_8TextAreaEEC2Ev) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[321]">touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::~FadeAnimator__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_8TextAreaEED0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[2a8]">touchgfx::FontProvider::~FontProvider__sub_object()</a> from applicationfontprovider.o(.text._ZN8touchgfx12FontProviderD2Ev) referenced from applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
 <LI><a href="#[334]">touchgfx::GestureEvent::~GestureEvent__deallocating()</a> from screen.o(.text._ZN8touchgfx12GestureEventD0Ev) referenced from screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
 <LI><a href="#[c4]">touchgfx::GraphLabelsY::GraphLabelsY__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx12GraphLabelsYC2Ev) referenced 2 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[337]">touchgfx::GraphLabelsY::~GraphLabelsY__deallocating()</a> from graphlabels.o(.text._ZN8touchgfx12GraphLabelsYD0Ev) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[346]">touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx12MoveAnimatorINS_9ContainerEE15handleTickEventEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[347]">touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::setMoveAnimationDelay(unsigned short)</a> from screenviewbase.o(.text._ZN8touchgfx12MoveAnimatorINS_9ContainerEE21setMoveAnimationDelayEt) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[344]">touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::~MoveAnimator__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx12MoveAnimatorINS_9ContainerEED0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[34b]">touchgfx::NoTransition::handleTickEvent()</a> from frontendapplicationbase.o(.text._ZN8touchgfx12NoTransition15handleTickEventEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[34a]">touchgfx::NoTransition::~NoTransition__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx12NoTransitionD0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[355]">touchgfx::ToggleButton::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from screenviewbase.o(.text._ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[354]">touchgfx::ToggleButton::handleClickEvent(const touchgfx::ClickEvent&)</a> from togglebutton.o(.text._ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[350]">touchgfx::ToggleButton::~ToggleButton__deallocating()</a> from togglebutton.o(.text._ZN8touchgfx12ToggleButtonD0Ev) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[30e]">touchgfx::AbstractClock::setTime12Hour(unsigned char, unsigned char, unsigned char, bool)</a> from abstractclock.o(.text._ZN8touchgfx13AbstractClock13setTime12HourEhhhb) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[30e]">touchgfx::AbstractClock::setTime12Hour(unsigned char, unsigned char, unsigned char, bool)</a> from abstractclock.o(.text._ZN8touchgfx13AbstractClock13setTime12HourEhhhb) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[30d]">touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)</a> from abstractclock.o(.text._ZN8touchgfx13AbstractClock13setTime24HourEhhh) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[30d]">touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)</a> from abstractclock.o(.text._ZN8touchgfx13AbstractClock13setTime24HourEhhh) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[356]">touchgfx::AbstractClock::~AbstractClock__deallocating()</a> from abstractclock.o(.text._ZN8touchgfx13AbstractClockD0Ev) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[c5]">touchgfx::BoxWithBorder::BoxWithBorder__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx13BoxWithBorderC2Ev) referenced 2 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[357]">touchgfx::BoxWithBorder::~BoxWithBorder__deallocating()</a> from boxwithborder.o(.text._ZN8touchgfx13BoxWithBorderD0Ev) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2ad]">touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[2ba]">touchgfx::DMA_Interface::enableAlpha(unsigned char)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface11enableAlphaEh) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[2bb]">touchgfx::DMA_Interface::disableAlpha()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface12disableAlphaEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[2b7]">touchgfx::DMA_Interface::seedExecution()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface13seedExecutionEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[2b6]">touchgfx::DMA_Interface::executeCompleted()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface16executeCompletedEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[2bd]">touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[2bc]">touchgfx::DMA_Interface::enableCopyWithTransparentPixels(unsigned char)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface31enableCopyWithTransparentPixelsEh) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[2ae]">touchgfx::DMA_Interface::flush()</a> from stm32dma.o(.text._ZN8touchgfx13DMA_Interface5flushEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[2b0]">touchgfx::DMA_Interface::start()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface5startEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[2b5]">touchgfx::DMA_Interface::execute()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface7executeEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[35c]">touchgfx::GeneratedFont::~GeneratedFont__deallocating()</a> from generatedfont.o(.text._ZN8touchgfx13GeneratedFontD0Ev) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[f3]">touchgfx::PainterRGB565::setColor(touchgfx::colortype)</a> from screenviewbase.o(.text._ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[f3]">touchgfx::PainterRGB565::setColor(touchgfx::colortype)</a> from screenviewbase.o(.text._ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE) referenced 7 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[b7]">touchgfx::PainterRGB565::PainterRGB565__sub_object(touchgfx::colortype)</a> from screenviewbase.o(.text._ZN8touchgfx13PainterRGB565C2ENS_9colortypeE) referenced 2 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[370]">touchgfx::PainterRGB565::~PainterRGB565__deallocating()</a> from painterrgb565.o(.text._ZN8touchgfx13PainterRGB565D0Ev) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[36f]">touchgfx::PainterRGB565::~PainterRGB565__sub_object()</a> from painterrgb565.o(.text._ZN8touchgfx13PainterRGB565D2Ev) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[2fe]">touchgfx::AbstractButton::executeAction()</a> from screenview.o(.text._ZN8touchgfx14AbstractButton13executeActionEv) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2fe]">touchgfx::AbstractButton::executeAction()</a> from screenview.o(.text._ZN8touchgfx14AbstractButton13executeActionEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2fe]">touchgfx::AbstractButton::executeAction()</a> from screenview.o(.text._ZN8touchgfx14AbstractButton13executeActionEv) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2fe]">touchgfx::AbstractButton::executeAction()</a> from screenview.o(.text._ZN8touchgfx14AbstractButton13executeActionEv) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[37c]">touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractbutton.o(.text._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[37c]">touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractbutton.o(.text._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[28a]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from frontendapplication.o(.text._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[28a]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from frontendapplication.o(.text._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[28a]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from frontendapplication.o(.text._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[378]">touchgfx::MVPApplication::~MVPApplication__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx14MVPApplicationD0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[3fd]">touchgfx::AbstractPainter::~AbstractPainter__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx15AbstractPainterD2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[f9]">touchgfx::ButtonWithLabel::updateTextPosition()</a> from screenviewbase.o(.text._ZN8touchgfx15ButtonWithLabel18updateTextPositionEv) referenced 4 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[bc]">touchgfx::ButtonWithLabel::ButtonWithLabel()</a> from buttonwithlabel.o(.text._ZN8touchgfx15ButtonWithLabelC2Ev) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[37a]">touchgfx::ButtonWithLabel::~ButtonWithLabel__deallocating()</a> from buttonwithlabel.o(.text._ZN8touchgfx15ButtonWithLabelD0Ev) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[379]">touchgfx::ButtonWithLabel::~ButtonWithLabel__sub_object()</a> from buttonwithlabel.o(.text._ZN8touchgfx15ButtonWithLabelD2Ev) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseIn(unsigned short, short, short, unsigned short)</a> from easingequations.o(.text._ZN8touchgfx15EasingEquations12linearEaseInEtsst) referenced from screenviewbase.o(.text._ZN14screenViewBase29logo_showEndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_5ImageEEE)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseIn(unsigned short, short, short, unsigned short)</a> from easingequations.o(.text._ZN8touchgfx15EasingEquations12linearEaseInEtsst) referenced from screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show7EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseIn(unsigned short, short, short, unsigned short)</a> from easingequations.o(.text._ZN8touchgfx15EasingEquations12linearEaseInEtsst) referenced from screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show8EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseIn(unsigned short, short, short, unsigned short)</a> from easingequations.o(.text._ZN8touchgfx15EasingEquations12linearEaseInEtsst) referenced from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show25EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseIn(unsigned short, short, short, unsigned short)</a> from easingequations.o(.text._ZN8touchgfx15EasingEquations12linearEaseInEtsst) referenced from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show26EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseIn(unsigned short, short, short, unsigned short)</a> from easingequations.o(.text._ZN8touchgfx15EasingEquations12linearEaseInEtsst) referenced from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show27EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseIn(unsigned short, short, short, unsigned short)</a> from easingequations.o(.text._ZN8touchgfx15EasingEquations12linearEaseInEtsst) referenced from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show28EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseIn(unsigned short, short, short, unsigned short)</a> from easingequations.o(.text._ZN8touchgfx15EasingEquations12linearEaseInEtsst) referenced from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show29EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseIn(unsigned short, short, short, unsigned short)</a> from easingequations.o(.text._ZN8touchgfx15EasingEquations12linearEaseInEtsst) referenced from screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show30EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
 <LI><a href="#[b0]">touchgfx::EasingEquations::linearEaseOut(unsigned short, short, short, unsigned short)</a> from easingequations.o(.text._ZN8touchgfx15EasingEquations13linearEaseOutEtsst) referenced from screenviewbase.o(.text._ZN14screenViewBase11setupScreenEv)
 <LI><a href="#[111]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(.text._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicatorC2Ev)
 <LI><a href="#[43f]">touchgfx::GenericCallback&lang;const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::~GenericCallback__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx15GenericCallbackIRKNS_12FadeAnimatorINS_5ImageEEEvvED2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
 <LI><a href="#[443]">touchgfx::GenericCallback&lang;const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&, void, void&rang;::~GenericCallback__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx15GenericCallbackIRKNS_12FadeAnimatorINS_8TextAreaEEEvvED2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_8TextAreaEEEvvEE)
 <LI><a href="#[447]">touchgfx::GenericCallback&lang;const touchgfx::AbstractButton&, void, void&rang;::~GenericCallback__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[447]">touchgfx::GenericCallback&lang;const touchgfx::AbstractButton&, void, void&rang;::~GenericCallback__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackINS_16RadioButtonGroupILt2EEERKNS_14AbstractButtonEvvEE)
 <LI><a href="#[44b]">touchgfx::GenericCallback&lang;const touchgfx::Slider&, int, void&rang;::~GenericCallback__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx15GenericCallbackIRKNS_6SliderEivED2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_6SliderEivEE)
 <LI><a href="#[44f]">touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__sub_object()</a> from frontendapplicationbase.o(.text._ZN8touchgfx15GenericCallbackIvvvED2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[33a]">touchgfx::GraphLabelsBase::invalidateGraphPointAt(short)</a> from graphlabels.o(.text._ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[33a]">touchgfx::GraphLabelsBase::invalidateGraphPointAt(short)</a> from graphlabels.o(.text._ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[108]">touchgfx::GraphLabelsBase::setScale(int)</a> from screenviewbase.o(.text._ZN8touchgfx15GraphLabelsBase8setScaleEi) referenced 2 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[37d]">touchgfx::GraphLabelsBase::~GraphLabelsBase__deallocating()</a> from graphlabels.o(.text._ZN8touchgfx15GraphLabelsBaseD0Ev) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[336]">touchgfx::GraphLabelsBase::~GraphLabelsBase__sub_object()</a> from graphlabels.o(.text._ZN8touchgfx15GraphLabelsBaseD2Ev) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[336]">touchgfx::GraphLabelsBase::~GraphLabelsBase__sub_object()</a> from graphlabels.o(.text._ZN8touchgfx15GraphLabelsBaseD2Ev) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[296]">touchgfx::TouchController::~TouchController__sub_object()</a> from stm32touchcontroller.o(.text._ZN8touchgfx15TouchControllerD2Ev) referenced from stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
 <LI><a href="#[2c2]">touchgfx::UIEventListener::~UIEventListener__sub_object()</a> from frontendapplicationbase.o(.text._ZN8touchgfx15UIEventListenerD2Ev) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[2c2]">touchgfx::UIEventListener::~UIEventListener__sub_object()</a> from frontendapplicationbase.o(.text._ZN8touchgfx15UIEventListenerD2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[aa]">touchgfx::DynamicDataGraph::addDataPoint(int)</a> from screenview.o(.text._ZN8touchgfx16DynamicDataGraph12addDataPointEi) referenced from screenview.o(.text._ZN10screenView11setupScreenEv)
 <LI><a href="#[3b2]">touchgfx::DynamicDataGraph::setXAxisScale(float)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3b2]">touchgfx::DynamicDataGraph::setXAxisScale(float)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3b2]">touchgfx::DynamicDataGraph::setXAxisScale(float)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3b2]">touchgfx::DynamicDataGraph::setXAxisScale(float)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3b0]">touchgfx::DynamicDataGraph::setXAxisScale(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3b0]">touchgfx::DynamicDataGraph::setXAxisScale(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3b0]">touchgfx::DynamicDataGraph::setXAxisScale(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3b0]">touchgfx::DynamicDataGraph::setXAxisScale(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3c0]">touchgfx::DynamicDataGraph::beforeAddValue()</a> from abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph14beforeAddValueEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3b3]">touchgfx::DynamicDataGraph::setXAxisFactor(float)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3b3]">touchgfx::DynamicDataGraph::setXAxisFactor(float)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3b3]">touchgfx::DynamicDataGraph::setXAxisFactor(float)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3b3]">touchgfx::DynamicDataGraph::setXAxisFactor(float)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3b1]">touchgfx::DynamicDataGraph::setXAxisFactor(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3b1]">touchgfx::DynamicDataGraph::setXAxisFactor(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3b1]">touchgfx::DynamicDataGraph::setXAxisFactor(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3b1]">touchgfx::DynamicDataGraph::setXAxisFactor(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3bb]">touchgfx::DynamicDataGraph::setXAxisOffset(float)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3bb]">touchgfx::DynamicDataGraph::setXAxisOffset(float)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3bb]">touchgfx::DynamicDataGraph::setXAxisOffset(float)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3bb]">touchgfx::DynamicDataGraph::setXAxisOffset(float)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3ba]">touchgfx::DynamicDataGraph::setXAxisOffset(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3ba]">touchgfx::DynamicDataGraph::setXAxisOffset(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3ba]">touchgfx::DynamicDataGraph::setXAxisOffset(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3ba]">touchgfx::DynamicDataGraph::setXAxisOffset(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3c3]">touchgfx::DynamicDataGraph::setXAxisScaleScaled(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3c3]">touchgfx::DynamicDataGraph::setXAxisScaleScaled(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3c3]">touchgfx::DynamicDataGraph::setXAxisScaleScaled(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3c3]">touchgfx::DynamicDataGraph::setXAxisScaleScaled(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3b4]">touchgfx::DynamicDataGraph::setXAxisFactorScaled(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3b4]">touchgfx::DynamicDataGraph::setXAxisFactorScaled(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3b4]">touchgfx::DynamicDataGraph::setXAxisFactorScaled(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3b4]">touchgfx::DynamicDataGraph::setXAxisFactorScaled(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3bc]">touchgfx::DynamicDataGraph::setXAxisOffsetScaled(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3bc]">touchgfx::DynamicDataGraph::setXAxisOffsetScaled(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3bc]">touchgfx::DynamicDataGraph::setXAxisOffsetScaled(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3bc]">touchgfx::DynamicDataGraph::setXAxisOffsetScaled(int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[38f]">touchgfx::DynamicDataGraph::setGraphRangeXAutoScaled(bool, int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[38f]">touchgfx::DynamicDataGraph::setGraphRangeXAutoScaled(bool, int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[38f]">touchgfx::DynamicDataGraph::setGraphRangeXAutoScaled(bool, int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[38f]">touchgfx::DynamicDataGraph::setGraphRangeXAutoScaled(bool, int)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[393]">touchgfx::DynamicDataGraph::setGraphRangeYAutoScaled(bool, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[393]">touchgfx::DynamicDataGraph::setGraphRangeYAutoScaled(bool, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[393]">touchgfx::DynamicDataGraph::setGraphRangeYAutoScaled(bool, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[393]">touchgfx::DynamicDataGraph::setGraphRangeYAutoScaled(bool, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[103]">touchgfx::DynamicDataGraph::setScale(int, bool)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph8setScaleEib) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[103]">touchgfx::DynamicDataGraph::setScale(int, bool)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph8setScaleEib) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[103]">touchgfx::DynamicDataGraph::setScale(int, bool)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph8setScaleEib) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[103]">touchgfx::DynamicDataGraph::setScale(int, bool)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph8setScaleEib) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[103]">touchgfx::DynamicDataGraph::setScale(int, bool)</a> from screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph8setScaleEib) referenced 2 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[385]">touchgfx::DynamicDataGraph::setScaleX(int, bool)</a> from abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph9setScaleXEib) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[385]">touchgfx::DynamicDataGraph::setScaleX(int, bool)</a> from abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph9setScaleXEib) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[385]">touchgfx::DynamicDataGraph::setScaleX(int, bool)</a> from abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph9setScaleXEib) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[385]">touchgfx::DynamicDataGraph::setScaleX(int, bool)</a> from abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph9setScaleXEib) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[387]">touchgfx::DynamicDataGraph::setScaleY(int, bool)</a> from abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph9setScaleYEib) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[387]">touchgfx::DynamicDataGraph::setScaleY(int, bool)</a> from abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph9setScaleYEib) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[387]">touchgfx::DynamicDataGraph::setScaleY(int, bool)</a> from abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph9setScaleYEib) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[387]">touchgfx::DynamicDataGraph::setScaleY(int, bool)</a> from abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph9setScaleYEib) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[37f]">touchgfx::DynamicDataGraph::~DynamicDataGraph__deallocating()</a> from abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraphD0Ev) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3c7]">touchgfx::GraphElementArea::invalidateGraphPointAt(short)</a> from graphelements.o(.text._ZN8touchgfx16GraphElementArea22invalidateGraphPointAtEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[10b]">touchgfx::GraphElementArea::setScale(int)</a> from screenviewbase.o(.text._ZN8touchgfx16GraphElementArea8setScaleEi) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[c7]">touchgfx::GraphElementArea::GraphElementArea__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx16GraphElementAreaC2Ev) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[3c5]">touchgfx::GraphElementArea::~GraphElementArea__deallocating()</a> from graphelements.o(.text._ZN8touchgfx16GraphElementAreaD0Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[3ca]">touchgfx::GraphElementLine::invalidateGraphPointAt(short)</a> from graphelements.o(.text._ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[c2]">touchgfx::GraphElementLine::GraphElementLine__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx16GraphElementLineC2Ev) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[3c8]">touchgfx::GraphElementLine::~GraphElementLine__deallocating()</a> from graphelements.o(.text._ZN8touchgfx16GraphElementLineD0Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[3d0]">touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::setSelected(touchgfx::RadioButton&)</a> from screenview.o(.text._ZN8touchgfx16RadioButtonGroupILt2EE11setSelectedERNS_11RadioButtonE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
 <LI><a href="#[3d1]">touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::setDeselectionEnabled(bool)</a> from screenviewbase.o(.text._ZN8touchgfx16RadioButtonGroupILt2EE21setDeselectionEnabledEb) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
 <LI><a href="#[3d3]">touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::radioButtonClickedHandler(const touchgfx::AbstractButton&)</a> from screenviewbase.o(.text._ZN8touchgfx16RadioButtonGroupILt2EE25radioButtonClickedHandlerERKNS_14AbstractButtonE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
 <LI><a href="#[3d4]">touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::radioButtonDeselectedHandler(const touchgfx::AbstractButton&)</a> from screenviewbase.o(.text._ZN8touchgfx16RadioButtonGroupILt2EE28radioButtonDeselectedHandlerERKNS_14AbstractButtonE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
 <LI><a href="#[10c]">touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::add(touchgfx::RadioButton&)</a> from screenviewbase.o(.text._ZN8touchgfx16RadioButtonGroupILt2EE3addERNS_11RadioButtonE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
 <LI><a href="#[10c]">touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::add(touchgfx::RadioButton&)</a> from screenviewbase.o(.text._ZN8touchgfx16RadioButtonGroupILt2EE3addERNS_11RadioButtonE) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[c8]">touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::RadioButtonGroup__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx16RadioButtonGroupILt2EEC2Ev) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[3cc]">touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::~RadioButtonGroup__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx16RadioButtonGroupILt2EED0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
 <LI><a href="#[3cb]">touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::~RadioButtonGroup__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx16RadioButtonGroupILt2EED2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
 <LI><a href="#[110]">touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)</a> from touchcalibration.o(.text._ZN8touchgfx16TouchCalibration6muldivEiiiiRi) referenced from touchcalibration.o(.text._ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE)
 <LI><a href="#[109]">touchgfx::AbstractDataGraph::addLeftElement(touchgfx::AbstractGraphDecoration&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE) referenced 2 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[38b]">touchgfx::AbstractDataGraph::setGraphRangeX(float, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[38b]">touchgfx::AbstractDataGraph::setGraphRangeX(float, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[38b]">touchgfx::AbstractDataGraph::setGraphRangeX(float, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[38b]">touchgfx::AbstractDataGraph::setGraphRangeX(float, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[38b]">touchgfx::AbstractDataGraph::setGraphRangeX(float, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[38a]">touchgfx::AbstractDataGraph::setGraphRangeX(int, int)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[38a]">touchgfx::AbstractDataGraph::setGraphRangeX(int, int)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[38a]">touchgfx::AbstractDataGraph::setGraphRangeX(int, int)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[38a]">touchgfx::AbstractDataGraph::setGraphRangeX(int, int)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[38a]">touchgfx::AbstractDataGraph::setGraphRangeX(int, int)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[391]">touchgfx::AbstractDataGraph::setGraphRangeY(float, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[391]">touchgfx::AbstractDataGraph::setGraphRangeY(float, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[391]">touchgfx::AbstractDataGraph::setGraphRangeY(float, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[391]">touchgfx::AbstractDataGraph::setGraphRangeY(float, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[391]">touchgfx::AbstractDataGraph::setGraphRangeY(float, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[390]">touchgfx::AbstractDataGraph::setGraphRangeY(int, int)</a> from screenview.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[390]">touchgfx::AbstractDataGraph::setGraphRangeY(int, int)</a> from screenview.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[390]">touchgfx::AbstractDataGraph::setGraphRangeY(int, int)</a> from screenview.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[390]">touchgfx::AbstractDataGraph::setGraphRangeY(int, int)</a> from screenview.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[390]">touchgfx::AbstractDataGraph::setGraphRangeY(int, int)</a> from screenview.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[107]">touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE) referenced 2 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[384]">touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[384]">touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[384]">touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[384]">touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[384]">touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[383]">touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[383]">touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[383]">touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[383]">touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[383]">touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[10f]">touchgfx::AbstractDataGraph::convertToNewScale(int, int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii) referenced from abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph9setScaleXEib)
 <LI><a href="#[104]">touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss) referenced 2 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[38e]">touchgfx::AbstractDataGraph::setGraphRangeXAuto(bool, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[38e]">touchgfx::AbstractDataGraph::setGraphRangeXAuto(bool, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[38e]">touchgfx::AbstractDataGraph::setGraphRangeXAuto(bool, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[38e]">touchgfx::AbstractDataGraph::setGraphRangeXAuto(bool, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[38e]">touchgfx::AbstractDataGraph::setGraphRangeXAuto(bool, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[38d]">touchgfx::AbstractDataGraph::setGraphRangeXAuto(bool, int)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[38d]">touchgfx::AbstractDataGraph::setGraphRangeXAuto(bool, int)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[38d]">touchgfx::AbstractDataGraph::setGraphRangeXAuto(bool, int)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[38d]">touchgfx::AbstractDataGraph::setGraphRangeXAuto(bool, int)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[38d]">touchgfx::AbstractDataGraph::setGraphRangeXAuto(bool, int)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[395]">touchgfx::AbstractDataGraph::setGraphRangeYAuto(bool, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[395]">touchgfx::AbstractDataGraph::setGraphRangeYAuto(bool, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[395]">touchgfx::AbstractDataGraph::setGraphRangeYAuto(bool, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[395]">touchgfx::AbstractDataGraph::setGraphRangeYAuto(bool, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[395]">touchgfx::AbstractDataGraph::setGraphRangeYAuto(bool, float)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[394]">touchgfx::AbstractDataGraph::setGraphRangeYAuto(bool, int)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[394]">touchgfx::AbstractDataGraph::setGraphRangeYAuto(bool, int)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[394]">touchgfx::AbstractDataGraph::setGraphRangeYAuto(bool, int)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[394]">touchgfx::AbstractDataGraph::setGraphRangeYAuto(bool, int)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[394]">touchgfx::AbstractDataGraph::setGraphRangeYAuto(bool, int)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[105]">touchgfx::AbstractDataGraph::setGraphAreaPadding(short, short, short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss) referenced 2 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[38c]">touchgfx::AbstractDataGraph::setGraphRangeXScaled(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[38c]">touchgfx::AbstractDataGraph::setGraphRangeXScaled(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[38c]">touchgfx::AbstractDataGraph::setGraphRangeXScaled(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[38c]">touchgfx::AbstractDataGraph::setGraphRangeXScaled(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[38c]">touchgfx::AbstractDataGraph::setGraphRangeXScaled(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[392]">touchgfx::AbstractDataGraph::setGraphRangeYScaled(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[392]">touchgfx::AbstractDataGraph::setGraphRangeYScaled(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[392]">touchgfx::AbstractDataGraph::setGraphRangeYScaled(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[392]">touchgfx::AbstractDataGraph::setGraphRangeYScaled(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[392]">touchgfx::AbstractDataGraph::setGraphRangeYScaled(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3a3]">touchgfx::AbstractDataGraph::getNearestIndexForScreenXY(short, short, short&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3a3]">touchgfx::AbstractDataGraph::getNearestIndexForScreenXY(short, short, short&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[3a3]">touchgfx::AbstractDataGraph::getNearestIndexForScreenXY(short, short, short&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3a3]">touchgfx::AbstractDataGraph::getNearestIndexForScreenXY(short, short, short&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3a3]">touchgfx::AbstractDataGraph::getNearestIndexForScreenXY(short, short, short&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3a2]">touchgfx::AbstractDataGraph::clear()</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph5clearEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3a2]">touchgfx::AbstractDataGraph::clear()</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph5clearEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[389]">touchgfx::AbstractDataGraph::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph8setAlphaEh) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[389]">touchgfx::AbstractDataGraph::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph8setAlphaEh) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[389]">touchgfx::AbstractDataGraph::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph8setAlphaEh) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[389]">touchgfx::AbstractDataGraph::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph8setAlphaEh) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[389]">touchgfx::AbstractDataGraph::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph8setAlphaEh) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[381]">touchgfx::AbstractDataGraph::setWidth(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph8setWidthEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[381]">touchgfx::AbstractDataGraph::setWidth(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph8setWidthEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[381]">touchgfx::AbstractDataGraph::setWidth(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph8setWidthEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[381]">touchgfx::AbstractDataGraph::setWidth(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph8setWidthEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[381]">touchgfx::AbstractDataGraph::setWidth(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph8setWidthEs) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[382]">touchgfx::AbstractDataGraph::setHeight(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph9setHeightEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[382]">touchgfx::AbstractDataGraph::setHeight(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph9setHeightEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[382]">touchgfx::AbstractDataGraph::setHeight(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph9setHeightEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[382]">touchgfx::AbstractDataGraph::setHeight(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph9setHeightEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[382]">touchgfx::AbstractDataGraph::setHeight(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph9setHeightEs) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3d6]">touchgfx::AbstractDataGraph::setScaleX(int, bool)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph9setScaleXEib) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[3d8]">touchgfx::AbstractDataGraph::setScaleY(int, bool)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph9setScaleYEib) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[3d5]">touchgfx::AbstractDataGraph::~AbstractDataGraph__deallocating()</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraphD0Ev) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[37e]">touchgfx::AbstractDataGraph::~AbstractDataGraph__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraphD2Ev) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[37e]">touchgfx::AbstractDataGraph::~AbstractDataGraph__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraphD2Ev) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[37e]">touchgfx::AbstractDataGraph::~AbstractDataGraph__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraphD2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[37e]">touchgfx::AbstractDataGraph::~AbstractDataGraph__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraphD2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[37e]">touchgfx::AbstractDataGraph::~AbstractDataGraph__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraphD2Ev) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3dc]">touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[3dc]">touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[3dc]">touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[3dc]">touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[3df]">touchgfx::AbstractPartition::clear()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[3df]">touchgfx::AbstractPartition::clear()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[3df]">touchgfx::AbstractPartition::clear()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[3df]">touchgfx::AbstractPartition::clear()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[3de]">touchgfx::AbstractPartition::indexOf(const void*)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[3de]">touchgfx::AbstractPartition::indexOf(const void*)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[3de]">touchgfx::AbstractPartition::indexOf(const void*)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[3de]">touchgfx::AbstractPartition::indexOf(const void*)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[3db]">touchgfx::AbstractPartition::allocate(unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[3db]">touchgfx::AbstractPartition::allocate(unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[3db]">touchgfx::AbstractPartition::allocate(unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[3db]">touchgfx::AbstractPartition::allocate(unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[3da]">touchgfx::AbstractPartition::~AbstractPartition__deallocating()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD0Ev) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[af]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[af]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[af]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[af]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[af]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev) referenced from touchgfxconfiguration.o(.text._ZN12FrontendHeapD2Ev)
 <LI><a href="#[c3]">touchgfx::GraphElementGridY::GraphElementGridY__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx17GraphElementGridYC2Ev) referenced 2 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[3e0]">touchgfx::GraphElementGridY::~GraphElementGridY__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx17GraphElementGridYD0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[c6]">touchgfx::GraphWrapAndClear&lang;(short)200&rang;::GraphWrapAndClear__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx17GraphWrapAndClearILs200EEC2Ev) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[3ef]">touchgfx::GraphWrapAndClear&lang;(short)200&rang;::~GraphWrapAndClear__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx17GraphWrapAndClearILs200EED0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[c1]">touchgfx::GraphWrapAndClear&lang;(short)300&rang;::GraphWrapAndClear__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx17GraphWrapAndClearILs300EEC2Ev) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[3f3]">touchgfx::GraphWrapAndClear&lang;(short)300&rang;::~GraphWrapAndClear__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx17GraphWrapAndClearILs300EED0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3f6]">touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[3f9]">touchgfx::LockFreeDMA_Queue::pop()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue3popEv) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[3fa]">touchgfx::LockFreeDMA_Queue::first()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue5firstEv) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[3f5]">touchgfx::LockFreeDMA_Queue::isFull()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue6isFullEv) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[3f4]">touchgfx::LockFreeDMA_Queue::isEmpty()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[3f8]">touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__deallocating()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueD0Ev) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[3fb]">touchgfx::AbstractGraphElement::~AbstractGraphElement__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx20AbstractGraphElementD0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[3e2]">touchgfx::GraphElementGridBase::invalidateGraphPointAt(short)</a> from screenviewbase.o(.text._ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[3e2]">touchgfx::GraphElementGridBase::invalidateGraphPointAt(short)</a> from screenviewbase.o(.text._ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[106]">touchgfx::GraphElementGridBase::setScale(int)</a> from screenviewbase.o(.text._ZN8touchgfx20GraphElementGridBase8setScaleEi) referenced 2 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[3fc]">touchgfx::GraphElementGridBase::~GraphElementGridBase__deallocating()</a> from graphelements.o(.text._ZN8touchgfx20GraphElementGridBaseD0Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[3fe]">touchgfx::AbstractPainterRGB565::~AbstractPainterRGB565__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx21AbstractPainterRGB565D0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[3f0]">touchgfx::GraphWrapAndClearData::beforeAddValue()</a> from graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData14beforeAddValueEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3f0]">touchgfx::GraphWrapAndClearData::beforeAddValue()</a> from graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData14beforeAddValueEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3f0]">touchgfx::GraphWrapAndClearData::beforeAddValue()</a> from graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData14beforeAddValueEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[ac]">touchgfx::GraphWrapAndClearData::clear()</a> from graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData5clearEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[ac]">touchgfx::GraphWrapAndClearData::clear()</a> from graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData5clearEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[ac]">touchgfx::GraphWrapAndClearData::clear()</a> from graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData5clearEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[ac]">touchgfx::GraphWrapAndClearData::clear()</a> from graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData5clearEv) referenced from screenview.o(.text._ZN10screenView16click_MonitoringEv)
 <LI><a href="#[ac]">touchgfx::GraphWrapAndClearData::clear()</a> from graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData5clearEv) referenced from screenview.o(.text._ZN10screenView17click_backSettingEv)
 <LI><a href="#[ac]">touchgfx::GraphWrapAndClearData::clear()</a> from graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData5clearEv) referenced from screenview.o(.text._ZN10screenView17click_dataButton1Ev)
 <LI><a href="#[ac]">touchgfx::GraphWrapAndClearData::clear()</a> from graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData5clearEv) referenced from screenview.o(.text._ZN10screenView17click_dataButton2Ev)
 <LI><a href="#[ac]">touchgfx::GraphWrapAndClearData::clear()</a> from graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData5clearEv) referenced from screenview.o(.text._ZN10screenView17click_dataButton3Ev)
 <LI><a href="#[ac]">touchgfx::GraphWrapAndClearData::clear()</a> from graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData5clearEv) referenced from screenview.o(.text._ZN10screenView17click_dataButton4Ev)
 <LI><a href="#[ac]">touchgfx::GraphWrapAndClearData::clear()</a> from graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData5clearEv) referenced from screenview.o(.text._ZN10screenView9startVentEv)
 <LI><a href="#[3f1]">touchgfx::GraphWrapAndClearData::addValue(int)</a> from graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData8addValueEi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3f1]">touchgfx::GraphWrapAndClearData::addValue(int)</a> from graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData8addValueEi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3f1]">touchgfx::GraphWrapAndClearData::addValue(int)</a> from graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData8addValueEi) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[401]">touchgfx::GraphWrapAndClearData::~GraphWrapAndClearData__deallocating()</a> from graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearDataD0Ev) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[402]">touchgfx::AbstractGraphDecoration::~AbstractGraphDecoration__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx23AbstractGraphDecorationD0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[a9]">touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)</a> from screenview.o(.text._ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt) referenced from screenview.o(.text._ZN10screenView11handleAlarmEv)
 <LI><a href="#[a9]">touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)</a> from screenview.o(.text._ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt) referenced from screenview.o(.text._ZN10screenView11setupScreenEv)
 <LI><a href="#[a9]">touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)</a> from screenview.o(.text._ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt) referenced from screenview.o(.text._ZN10screenView15handleTickEventEv)
 <LI><a href="#[a9]">touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)</a> from screenview.o(.text._ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt) referenced from screenview.o(.text._ZN10screenView16handleMainScreenEv)
 <LI><a href="#[a9]">touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)</a> from screenview.o(.text._ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt) referenced from screenview.o(.text._ZN10screenView19handleAlarmNextPageEv)
 <LI><a href="#[a9]">touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)</a> from screenview.o(.text._ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt) referenced from screenview.o(.text._ZN10screenView22updateConfigsWildCardsEv)
 <LI><a href="#[be]">touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx23TextAreaWithOneWildcardC2Ev) referenced 3 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[403]">touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx23TextAreaWithOneWildcardD0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[bf]">touchgfx::TextAreaWithTwoWildcards::TextAreaWithTwoWildcards__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx24TextAreaWithTwoWildcardsC2Ev) referenced 3 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[408]">touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx24TextAreaWithTwoWildcardsD0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[40b]">touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase__deallocating()</a> from textareawithwildcard.o(.text._ZN8touchgfx24TextAreaWithWildcardBaseD0Ev) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[fc]">touchgfx::AbstractDirectionProgress::setDirection(touchgfx::AbstractDirectionProgress::DirectionType)</a> from abstractdirectionprogress.o(.text._ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[fc]">touchgfx::AbstractDirectionProgress::setDirection(touchgfx::AbstractDirectionProgress::DirectionType)</a> from abstractdirectionprogress.o(.text._ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[fc]">touchgfx::AbstractDirectionProgress::setDirection(touchgfx::AbstractDirectionProgress::DirectionType)</a> from abstractdirectionprogress.o(.text._ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE) referenced 4 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[40d]">touchgfx::AbstractDirectionProgress::~AbstractDirectionProgress__deallocating()</a> from abstractdirectionprogress.o(.text._ZN8touchgfx25AbstractDirectionProgressD0Ev) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[33d]">touchgfx::AbstractGraphElementNoCWR::setPainter(touchgfx::AbstractPainter&)</a> from screenviewbase.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[33d]">touchgfx::AbstractGraphElementNoCWR::setPainter(touchgfx::AbstractPainter&)</a> from screenviewbase.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[33d]">touchgfx::AbstractGraphElementNoCWR::setPainter(touchgfx::AbstractPainter&)</a> from screenviewbase.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[33d]">touchgfx::AbstractGraphElementNoCWR::setPainter(touchgfx::AbstractPainter&)</a> from screenviewbase.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[33d]">touchgfx::AbstractGraphElementNoCWR::setPainter(touchgfx::AbstractPainter&)</a> from screenviewbase.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[33d]">touchgfx::AbstractGraphElementNoCWR::setPainter(touchgfx::AbstractPainter&)</a> from screenviewbase.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[33b]">touchgfx::AbstractGraphElementNoCWR::setColor(touchgfx::colortype)</a> from screenviewbase.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[33b]">touchgfx::AbstractGraphElementNoCWR::setColor(touchgfx::colortype)</a> from screenviewbase.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[33b]">touchgfx::AbstractGraphElementNoCWR::setColor(touchgfx::colortype)</a> from screenviewbase.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[33b]">touchgfx::AbstractGraphElementNoCWR::setColor(touchgfx::colortype)</a> from screenviewbase.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[33b]">touchgfx::AbstractGraphElementNoCWR::setColor(touchgfx::colortype)</a> from screenviewbase.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[33b]">touchgfx::AbstractGraphElementNoCWR::setColor(touchgfx::colortype)</a> from screenviewbase.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[411]">touchgfx::AbstractGraphElementNoCWR::~AbstractGraphElementNoCWR__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx25AbstractGraphElementNoCWRD0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2ed]">touchgfx::AbstractProgressIndicator::updateValue(int, unsigned short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator11updateValueEit) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2ed]">touchgfx::AbstractProgressIndicator::updateValue(int, unsigned short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator11updateValueEit) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2ed]">touchgfx::AbstractProgressIndicator::updateValue(int, unsigned short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator11updateValueEit) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[fd]">touchgfx::AbstractProgressIndicator::setBackground(const touchgfx::Bitmap&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[fd]">touchgfx::AbstractProgressIndicator::setBackground(const touchgfx::Bitmap&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[fd]">touchgfx::AbstractProgressIndicator::setBackground(const touchgfx::Bitmap&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[fd]">touchgfx::AbstractProgressIndicator::setBackground(const touchgfx::Bitmap&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE) referenced 4 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[2d8]">touchgfx::AbstractProgressIndicator::handleTickEvent()</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2d8]">touchgfx::AbstractProgressIndicator::handleTickEvent()</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2d8]">touchgfx::AbstractProgressIndicator::handleTickEvent()</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2ec]">touchgfx::AbstractProgressIndicator::setEasingEquation(short(*)(unsigned short, short, short, unsigned short))</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2ec]">touchgfx::AbstractProgressIndicator::setEasingEquation(short(*)(unsigned short, short, short, unsigned short))</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2ec]">touchgfx::AbstractProgressIndicator::setEasingEquation(short(*)(unsigned short, short, short, unsigned short))</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[40e]">touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[40e]">touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[410]">touchgfx::AbstractProgressIndicator::setAlpha(unsigned char)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator8setAlphaEh) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[410]">touchgfx::AbstractProgressIndicator::setAlpha(unsigned char)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator8setAlphaEh) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[fb]">touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[fb]">touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[fb]">touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[fb]">touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt) referenced 4 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[40f]">touchgfx::AbstractProgressIndicator::setValue(int)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator8setValueEi) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[40f]">touchgfx::AbstractProgressIndicator::setValue(int)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator8setValueEi) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[412]">touchgfx::AbstractProgressIndicator::~AbstractProgressIndicator__deallocating()</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicatorD0Ev) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[40c]">touchgfx::AbstractProgressIndicator::~AbstractProgressIndicator__sub_object()</a> from abstractdirectionprogress.o(.text._ZN8touchgfx25AbstractProgressIndicatorD2Ev) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[40c]">touchgfx::AbstractProgressIndicator::~AbstractProgressIndicator__sub_object()</a> from abstractdirectionprogress.o(.text._ZN8touchgfx25AbstractProgressIndicatorD2Ev) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[b3]">touchgfx::Box::Box__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx3BoxC2Ev) referenced 3 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[413]">touchgfx::Box::~Box__deallocating()</a> from box.o(.text._ZN8touchgfx3BoxD0Ev) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[41d]">touchgfx::HAL::FlushCache()</a> from hal.o(.text._ZN8touchgfx3HAL10FlushCacheEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[41a]">touchgfx::HAL::beginFrame()</a> from hal.o(.text._ZN8touchgfx3HAL10beginFrameEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1e0]">touchgfx::HAL::getDMAType()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL10getDMATypeEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1e0]">touchgfx::HAL::getDMAType()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL10getDMATypeEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1e0]">touchgfx::HAL::getDMAType()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL10getDMATypeEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[416]">touchgfx::HAL::initialize()</a> from hal.o(.text._ZN8touchgfx3HAL10initializeEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1c6]">touchgfx::HAL::getBlitCaps()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL11getBlitCapsEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1c6]">touchgfx::HAL::getBlitCaps()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL11getBlitCapsEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1c6]">touchgfx::HAL::getBlitCaps()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL11getBlitCapsEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1ca]">touchgfx::HAL::blitCopyWord(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL12blitCopyWordEPKttttttt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1ca]">touchgfx::HAL::blitCopyWord(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL12blitCopyWordEPKttttttt) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1ca]">touchgfx::HAL::blitCopyWord(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL12blitCopyWordEPKttttttt) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1cb]">touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL12blitFillWordEtttttt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1cb]">touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL12blitFillWordEtttttt) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1cb]">touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL12blitFillWordEtttttt) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1cd]">touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</a> from hal.o(.text._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1cd]">touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</a> from hal.o(.text._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1cd]">touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</a> from hal.o(.text._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[41c]">touchgfx::HAL::InvalidateCache()</a> from hal.o(.text._ZN8touchgfx3HAL15InvalidateCacheEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1d4]">touchgfx::HAL::backPorchExited()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL15backPorchExitedEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1d4]">touchgfx::HAL::backPorchExited()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL15backPorchExitedEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1d4]">touchgfx::HAL::backPorchExited()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL15backPorchExitedEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1c2]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(.text._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1c2]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(.text._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1c2]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(.text._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1cc]">touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(.text._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1cc]">touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(.text._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1cc]">touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(.text._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[418]">touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)</a> from hal.o(.text._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[417]">touchgfx::HAL::flushFrameBuffer()</a> from hal.o(.text._ZN8touchgfx3HAL16flushFrameBufferEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1c0]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(.text._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1c0]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(.text._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1c0]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(.text._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1df]">touchgfx::HAL::getTFTCurrentLine()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1df]">touchgfx::HAL::getTFTCurrentLine()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1df]">touchgfx::HAL::getTFTCurrentLine()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1c3]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(.text._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1c3]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(.text._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1c3]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(.text._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1bb]">touchgfx::HAL::setFrameBufferSize(unsigned short, unsigned short)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL18setFrameBufferSizeEtt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1bb]">touchgfx::HAL::setFrameBufferSize(unsigned short, unsigned short)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL18setFrameBufferSizeEtt) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1bb]">touchgfx::HAL::setFrameBufferSize(unsigned short, unsigned short)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL18setFrameBufferSizeEtt) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1db]">touchgfx::HAL::setAnimationStorage(void*)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL19setAnimationStorageEPv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1db]">touchgfx::HAL::setAnimationStorage(void*)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL19setAnimationStorageEPv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1db]">touchgfx::HAL::setAnimationStorage(void*)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL19setAnimationStorageEPv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1d2]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1d2]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1d2]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1d3]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtj) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1d3]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtj) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1d3]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtj) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1d1]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(.text._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1d1]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(.text._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1d1]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(.text._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1ba]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1ba]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1ba]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1cf]">touchgfx::HAL::copyFromTFTToClientBuffer(touchgfx::Rect)</a> from hal.o(.text._ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1cf]">touchgfx::HAL::copyFromTFTToClientBuffer(touchgfx::Rect)</a> from hal.o(.text._ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1cf]">touchgfx::HAL::copyFromTFTToClientBuffer(touchgfx::Rect)</a> from hal.o(.text._ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1dc]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1dc]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1dc]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1e1]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1e1]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1e1]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1e2]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, const touchgfx::Rect&)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1e2]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, const touchgfx::Rect&)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1e2]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, const touchgfx::Rect&)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1da]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1da]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1da]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1e9]">touchgfx::HAL::performDisplayOrientationChange()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1e9]">touchgfx::HAL::performDisplayOrientationChange()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1e9]">touchgfx::HAL::performDisplayOrientationChange()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1e3]">touchgfx::HAL::tick()</a> from hal.o(.text._ZN8touchgfx3HAL4tickEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1e3]">touchgfx::HAL::tick()</a> from hal.o(.text._ZN8touchgfx3HAL4tickEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1e3]">touchgfx::HAL::tick()</a> from hal.o(.text._ZN8touchgfx3HAL4tickEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1e7]">touchgfx::HAL::touch(int, int)</a> from hal.o(.text._ZN8touchgfx3HAL5touchEii) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1e7]">touchgfx::HAL::touch(int, int)</a> from hal.o(.text._ZN8touchgfx3HAL5touchEii) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1e7]">touchgfx::HAL::touch(int, int)</a> from hal.o(.text._ZN8touchgfx3HAL5touchEii) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1e8]">touchgfx::HAL::noTouch()</a> from hal.o(.text._ZN8touchgfx3HAL7noTouchEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1e8]">touchgfx::HAL::noTouch()</a> from hal.o(.text._ZN8touchgfx3HAL7noTouchEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1e8]">touchgfx::HAL::noTouch()</a> from hal.o(.text._ZN8touchgfx3HAL7noTouchEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1c7]">touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1c7]">touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1c7]">touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1c9]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbb) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1c9]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbb) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1c9]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbb) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1c8]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1c8]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1c8]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1d0]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1d0]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1d0]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1ce]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1ce]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1ce]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[41b]">touchgfx::HAL::endFrame()</a> from hal.o(.text._ZN8touchgfx3HAL8endFrameEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1c1]">touchgfx::HAL::flushDMA()</a> from hal.o(.text._ZN8touchgfx3HAL8flushDMAEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1c1]">touchgfx::HAL::flushDMA()</a> from hal.o(.text._ZN8touchgfx3HAL8flushDMAEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1c1]">touchgfx::HAL::flushDMA()</a> from hal.o(.text._ZN8touchgfx3HAL8flushDMAEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[419]">touchgfx::HAL::blockCopy(void*, const void*, unsigned)</a> from hal.o(.text._ZN8touchgfx3HAL9blockCopyEPvPKvj) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1d9]">touchgfx::HAL::sampleKey(unsigned char&)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL9sampleKeyERh) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1d9]">touchgfx::HAL::sampleKey(unsigned char&)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL9sampleKeyERh) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1d9]">touchgfx::HAL::sampleKey(unsigned char&)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL9sampleKeyERh) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1de]">touchgfx::HAL::taskDelay(unsigned short)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL9taskDelayEt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1de]">touchgfx::HAL::taskDelay(unsigned short)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL9taskDelayEt) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1de]">touchgfx::HAL::taskDelay(unsigned short)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL9taskDelayEt) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1bd]">touchgfx::HAL::taskEntry()</a> from hal.o(.text._ZN8touchgfx3HAL9taskEntryEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1bd]">touchgfx::HAL::taskEntry()</a> from hal.o(.text._ZN8touchgfx3HAL9taskEntryEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1bd]">touchgfx::HAL::taskEntry()</a> from hal.o(.text._ZN8touchgfx3HAL9taskEntryEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[415]">touchgfx::HAL::~HAL__deallocating()</a> from hal.o(.text._ZN8touchgfx3HALD0Ev) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1b8]">touchgfx::HAL::~HAL__sub_object()</a> from touchgfxhal.o(.text._ZN8touchgfx3HALD2Ev) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1b8]">touchgfx::HAL::~HAL__sub_object()</a> from touchgfxhal.o(.text._ZN8touchgfx3HALD2Ev) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1b8]">touchgfx::HAL::~HAL__sub_object()</a> from touchgfxhal.o(.text._ZN8touchgfx3HALD2Ev) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[49d]">touchgfx::LCD::setDefaultColor(touchgfx::colortype)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[49f]">touchgfx::LCD::drawTextureMapQuad(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</a> from lcd.o(.text._ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[4a1]">touchgfx::LCD::drawTextureMapScanLine(const touchgfx::DrawingSurface&, const touchgfx::Gradients&, const touchgfx::Edge*, const touchgfx::Edge*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</a> from lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[49e]">touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</a> from lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[456]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[49c]">touchgfx::LCD::supportDynamicBitmapDrawing(touchgfx::Bitmap::BitmapFormat)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[113]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh)
 <LI><a href="#[113]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h)
 <LI><a href="#[113]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE)
 <LI><a href="#[113]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA10writePixelEPtPKhS4_siihhh)
 <LI><a href="#[113]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh)
 <LI><a href="#[113]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKtPKhsiihhh)
 <LI><a href="#[113]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh)
 <LI><a href="#[113]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKjsiihhh)
 <LI><a href="#[113]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKjssiihhh)
 <LI><a href="#[113]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKtsiihh)
 <LI><a href="#[113]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh)
 <LI><a href="#[113]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKjsiihh)
 <LI><a href="#[113]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKjssiihh)
 <LI><a href="#[113]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKhPKjsiihhh)
 <LI><a href="#[113]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKjssiihhh)
 <LI><a href="#[113]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKjsiihh)
 <LI><a href="#[113]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKjssiihh)
 <LI><a href="#[48f]">touchgfx::LCD::~LCD__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCDD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[112]">touchgfx::Edge::Edge(const touchgfx::Gradients&, const touchgfx::Point3D*, int, int)</a> from texturemaptypes.o(.text._ZN8touchgfx4EdgeC2ERKNS_9GradientsEPKNS_7Point3DEii) referenced from lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht)
 <LI><a href="#[35b]">touchgfx::Font::~Font__sub_object()</a> from cachedfont.o(.text._ZN8touchgfx4FontD2Ev) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[35b]">touchgfx::Font::~Font__sub_object()</a> from cachedfont.o(.text._ZN8touchgfx4FontD2Ev) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[f6]">touchgfx::Line::setLineWidth(touchgfx::CWRUtil::Q5)</a> from screenviewbase.o(.text._ZN8touchgfx4Line12setLineWidthENS_7CWRUtil2Q5E) referenced 7 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[f7]">touchgfx::Line::setLineEndingStyle(touchgfx::Line::LINE_ENDING_STYLE)</a> from line.o(.text._ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE) referenced 7 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[10a]">touchgfx::Line::setEnd(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</a> from line.o(.text._ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_) referenced 3 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[f5]">void touchgfx::Line::setEnd&lang;int&rang;(T1, T1)</a> from screenviewbase.o(.text._ZN8touchgfx4Line6setEndIiEEvT_S2_) referenced 5 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[f4]">void touchgfx::Line::setStart&lang;int&rang;(T1, T1)</a> from screenviewbase.o(.text._ZN8touchgfx4Line8setStartIiEEvT_S2_) referenced 7 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[b6]">touchgfx::Line::Line()</a> from line.o(.text._ZN8touchgfx4LineC2Ev) referenced 2 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[41e]">touchgfx::Line::~Line__deallocating()</a> from line.o(.text._ZN8touchgfx4LineD0Ev) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[423]">touchgfx::View&lang;screenPresenter&rang;::~View__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx4ViewI15screenPresenterED0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[ec]">touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx5Color15getColorFromRGBEhhh) referenced 24 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[2be]">touchgfx::Event::~Event__sub_object()</a> from screen.o(.text._ZN8touchgfx5EventD2Ev) referenced from screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
 <LI><a href="#[2be]">touchgfx::Event::~Event__sub_object()</a> from screen.o(.text._ZN8touchgfx5EventD2Ev) referenced from screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
 <LI><a href="#[2be]">touchgfx::Event::~Event__sub_object()</a> from screen.o(.text._ZN8touchgfx5EventD2Ev) referenced from screen.o(.rodata._ZTVN8touchgfx9DragEventE)
 <LI><a href="#[ed]">touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</a> from image.o(.text._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[ed]">touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</a> from image.o(.text._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[ed]">touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</a> from image.o(.text._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced 15 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[ed]">touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</a> from image.o(.text._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from slider.o(.text._ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_)
 <LI><a href="#[bb]">touchgfx::Image::Image__sub_object(const touchgfx::Bitmap&)</a> from screenviewbase.o(.text._ZN8touchgfx5ImageC2ERKNS_6BitmapE) referenced 2 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[bb]">touchgfx::Image::Image__sub_object(const touchgfx::Bitmap&)</a> from screenviewbase.o(.text._ZN8touchgfx5ImageC2ERKNS_6BitmapE) referenced from slider.o(.text._ZN8touchgfx6SliderC2Ev)
 <LI><a href="#[425]">touchgfx::Image::~Image__deallocating()</a> from image.o(.text._ZN8touchgfx5ImageD0Ev) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[ba]">touchgfx::Bitmap::Bitmap__sub_object(unsigned short)</a> from screenviewbase.o(.text._ZN8touchgfx6BitmapC2Et) referenced 26 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[ba]">touchgfx::Bitmap::Bitmap__sub_object(unsigned short)</a> from screenviewbase.o(.text._ZN8touchgfx6BitmapC2Et) referenced from screenviewbase.o(.text._ZN8touchgfx11RadioButtonC2Ev)
 <LI><a href="#[f8]">touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from button.o(.text._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[f8]">touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from button.o(.text._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[f8]">touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from button.o(.text._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_) referenced 22 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[b9]">touchgfx::Button::Button__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx6ButtonC2Ev) referenced 3 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[426]">touchgfx::Button::~Button__deallocating()</a> from button.o(.text._ZN8touchgfx6ButtonD0Ev) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[115]">touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</a> from canvas.o(.text._ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_) referenced from line.o(.text._ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE)
 <LI><a href="#[428]">touchgfx::Canvas::~Canvas__deallocating()</a> from graphelements.o(.text._ZN8touchgfx6CanvasD0Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx6CanvasE)
 <LI><a href="#[427]">touchgfx::Canvas::~Canvas__sub_object()</a> from graphelements.o(.text._ZN8touchgfx6CanvasD2Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx6CanvasE)
 <LI><a href="#[424]">touchgfx::Screen::setupScreen()</a> from screenviewbase.o(.text._ZN8touchgfx6Screen11setupScreenEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[424]">touchgfx::Screen::setupScreen()</a> from screenviewbase.o(.text._ZN8touchgfx6Screen11setupScreenEv) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[123]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screenview.o(.text._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[123]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screenview.o(.text._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[123]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screenview.o(.text._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[123]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screenview.o(.text._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[1f0]">touchgfx::Screen::tearDownScreen()</a> from screenviewbase.o(.text._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1f0]">touchgfx::Screen::tearDownScreen()</a> from screenviewbase.o(.text._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[1f0]">touchgfx::Screen::tearDownScreen()</a> from screenviewbase.o(.text._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[11d]">touchgfx::Screen::afterTransition()</a> from screenview.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[11d]">touchgfx::Screen::afterTransition()</a> from screenview.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[11d]">touchgfx::Screen::afterTransition()</a> from screenview.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[11d]">touchgfx::Screen::afterTransition()</a> from screenview.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[120]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[120]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[120]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[120]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[1f1]">touchgfx::Screen::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[1f1]">touchgfx::Screen::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[1f1]">touchgfx::Screen::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[11f]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[11f]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[11f]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[11f]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[121]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[121]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[121]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[121]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[11b]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[11b]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[11b]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[11b]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[429]">touchgfx::Screen::~Screen__deallocating()</a> from screen.o(.text._ZN8touchgfx6ScreenD0Ev) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[422]">touchgfx::Screen::~Screen__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx6ScreenD2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[422]">touchgfx::Screen::~Screen__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx6ScreenD2Ev) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[435]">touchgfx::Slider::setValueRange(int, int)</a> from slider.o(.text._ZN8touchgfx6Slider13setValueRangeEii) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[432]">touchgfx::Slider::setValueRange(int, int, int)</a> from slider.o(.text._ZN8touchgfx6Slider13setValueRangeEiii) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[42d]">touchgfx::Slider::handleDragEvent(const touchgfx::DragEvent&)</a> from slider.o(.text._ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[42c]">touchgfx::Slider::handleClickEvent(const touchgfx::ClickEvent&)</a> from slider.o(.text._ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[42f]">touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from slider.o(.text._ZN8touchgfx6Slider19setupVerticalSliderEttttt) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[42e]">touchgfx::Slider::setupHorizontalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from slider.o(.text._ZN8touchgfx6Slider21setupHorizontalSliderEttttt) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[437]">touchgfx::Slider::updateIndicatorPosition(short)</a> from slider.o(.text._ZN8touchgfx6Slider23updateIndicatorPositionEs) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[436]">touchgfx::Slider::setValue(int)</a> from slider.o(.text._ZN8touchgfx6Slider8setValueEi) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[42b]">touchgfx::Slider::~Slider__deallocating()</a> from slider.o(.text._ZN8touchgfx6SliderD0Ev) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[42a]">touchgfx::Slider::~Slider__sub_object()</a> from slider.o(.text._ZN8touchgfx6SliderD2Ev) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2fa]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[43e]">touchgfx::Outline::~Outline__deallocating()</a> from outline.o(.text._ZN8touchgfx7OutlineD0Ev) referenced from outline.o(.rodata._ZTVN8touchgfx7OutlineE)
 <LI><a href="#[43d]">touchgfx::Outline::~Outline__sub_object()</a> from outline.o(.text._ZN8touchgfx7OutlineD2Ev) referenced from outline.o(.rodata._ZTVN8touchgfx7OutlineE)
 <LI><a href="#[ab]">touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)</a> from screenview.o(.text._ZN8touchgfx7Unicode13snprintfFloatEPttPKcf) referenced from screenview.o(.text._ZN10screenView13handleVT_CONFEv)
 <LI><a href="#[ab]">touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)</a> from screenview.o(.text._ZN8touchgfx7Unicode13snprintfFloatEPttPKcf) referenced from screenview.o(.text._ZN10screenView15handleTickEventEv)
 <LI><a href="#[ab]">touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)</a> from screenview.o(.text._ZN8touchgfx7Unicode13snprintfFloatEPttPKcf) referenced from screenview.o(.text._ZN10screenView16handleMainScreenEv)
 <LI><a href="#[ab]">touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)</a> from screenview.o(.text._ZN8touchgfx7Unicode13snprintfFloatEPttPKcf) referenced from screenview.o(.text._ZN10screenView22updateConfigsWildCardsEv)
 <LI><a href="#[ab]">touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)</a> from screenview.o(.text._ZN8touchgfx7Unicode13snprintfFloatEPttPKcf) referenced from screenview.o(.text._ZN10screenView8handleVTEv)
 <LI><a href="#[a6]">touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)</a> from unicode.o(.text._ZN8touchgfx7Unicode7strncpyEPtPKct) referenced from screenview.o(.text._ZN10screenView10updateDateEv)
 <LI><a href="#[a8]">touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)</a> from unicode.o(.text._ZN8touchgfx7Unicode8snprintfEPttPKcz) referenced from screenview.o(.text._ZN10screenView11handleAlarmEv)
 <LI><a href="#[a8]">touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)</a> from unicode.o(.text._ZN8touchgfx7Unicode8snprintfEPttPKcz) referenced from screenview.o(.text._ZN10screenView11setupScreenEv)
 <LI><a href="#[a8]">touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)</a> from unicode.o(.text._ZN8touchgfx7Unicode8snprintfEPttPKcz) referenced from screenview.o(.text._ZN10screenView15handleTickEventEv)
 <LI><a href="#[a8]">touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)</a> from unicode.o(.text._ZN8touchgfx7Unicode8snprintfEPttPKcz) referenced from screenview.o(.text._ZN10screenView16handleMainScreenEv)
 <LI><a href="#[a8]">touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)</a> from unicode.o(.text._ZN8touchgfx7Unicode8snprintfEPttPKcz) referenced from screenview.o(.text._ZN10screenView19createDataTrendListEv)
 <LI><a href="#[a8]">touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)</a> from unicode.o(.text._ZN8touchgfx7Unicode8snprintfEPttPKcz) referenced from screenview.o(.text._ZN10screenView19handleAlarmNextPageEv)
 <LI><a href="#[a8]">touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)</a> from unicode.o(.text._ZN8touchgfx7Unicode8snprintfEPttPKcz) referenced from screenview.o(.text._ZN10screenView20createAlarmTrendListEv)
 <LI><a href="#[a8]">touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)</a> from unicode.o(.text._ZN8touchgfx7Unicode8snprintfEPttPKcz) referenced from screenview.o(.text._ZN10screenView22updateConfigsWildCardsEv)
 <LI><a href="#[a8]">touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)</a> from unicode.o(.text._ZN8touchgfx7Unicode8snprintfEPttPKcz) referenced 20 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[441]">touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::execute(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)</a> from screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvE7executeES6_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
 <LI><a href="#[440]">touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::~Callback__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvED0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
 <LI><a href="#[445]">touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&, void, void&rang;::execute(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</a> from screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_8TextAreaEEEvvE7executeES6_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_8TextAreaEEEvvEE)
 <LI><a href="#[444]">touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&, void, void&rang;::~Callback__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_8TextAreaEEEvvED0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_8TextAreaEEEvvEE)
 <LI><a href="#[449]">touchgfx::Callback&lang;screenViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</a> from screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[448]">touchgfx::Callback&lang;screenViewBase, const touchgfx::AbstractButton&, void, void&rang;::~Callback__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvED0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[44d]">touchgfx::Callback&lang;screenViewBase, const touchgfx::Slider&, int, void&rang;::execute(const touchgfx::Slider&, int)</a> from screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_6SliderEivE7executeES4_i) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_6SliderEivEE)
 <LI><a href="#[44c]">touchgfx::Callback&lang;screenViewBase, const touchgfx::Slider&, int, void&rang;::~Callback__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_6SliderEivED0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_6SliderEivEE)
 <LI><a href="#[451]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</a> from frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[450]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[454]">touchgfx::Callback&lang;touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</a> from screenviewbase.o(.text._ZN8touchgfx8CallbackINS_16RadioButtonGroupILt2EEERKNS_14AbstractButtonEvvE7executeES5_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackINS_16RadioButtonGroupILt2EEERKNS_14AbstractButtonEvvEE)
 <LI><a href="#[453]">touchgfx::Callback&lang;touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;, const touchgfx::AbstractButton&, void, void&rang;::~Callback__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx8CallbackINS_16RadioButtonGroupILt2EEERKNS_14AbstractButtonEvvED0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackINS_16RadioButtonGroupILt2EEERKNS_14AbstractButtonEvvEE)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView10click_FiO2Ev)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView10click_PEEPEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView10click_dateEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView10click_maskEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView10click_modeEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView10click_timeEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView11click_adultEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView11click_alarmEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView11click_audioEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced 2 times from screenview.o(.text._ZN10screenView11setLanguageEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView11setupScreenEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView13click_cyclingEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView13click_lowPEEPEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView13click_settingEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView13click_triggerEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView14click_languageEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView14click_yesAlertEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView15click_FiO2AlarmEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView15click_PAlarmbtnEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView15click_SPO2AlarmEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView15click_leakAlarmEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView15click_pediatricEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView15handleTickEventEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView16click_PSMax_confEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView16click_Psupp_confEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView16click_RRAlarmbtnEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView16click_brightnessEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView16handleMainScreenEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView17click_MVeAlarmbtnEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView17click_MViAlarmbtnEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView17click_VteAlarmbtnEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView17click_VtiAlarmbtnEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView17click_audioSliderEi)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView17click_backAlarmScEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView17click_backDeviceSEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView17click_backSettingEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView17click_backupApneaEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView17click_backupModesEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView17click_dataButton1Ev)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView17click_dataButton2Ev)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView17click_dataButton3Ev)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView17click_dataButton4Ev)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView17click_ventSettingEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView18click_cycling_confEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView18click_trigger_confEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView19click_O2Cell_buttonEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView19click_pulsRateAlarmEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView19click_riseTime_confEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView19handleDeviceSettingEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView20click_backDataGraphsEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView20click_backInitializeEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView20click_flowShape_confEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView20createAlarmTrendListEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView21click_backVentSettingEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView21click_circuitDisAlarmEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView22click_CO2Sensor_buttonEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView22click_TiInspPause_confEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView22click_brightnessSliderEi)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView22click_obstructionAlarmEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView22click_tightness_buttonEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView22updateConfigsWildCardsEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView23click_singleLeak_buttonEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView24disableVentSettingChooseEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced 2 times from screenview.o(.text._ZN10screenView24handleBackupConfigScreenEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView26click_back_tightnessScreenEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView29click_adult_initScreen_buttonEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced 4 times from screenview.o(.text._ZN10screenView30handleVentilationSettingScreenEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView31click_tightness_continue_buttonEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView31handleInitTestCalibrationScreenEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView32click_flowSensor_continue_buttonEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView33click_pediatric_initScreen_buttonEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView34handleFlowSensor_forwardTestScreenEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView35handleFlowSensor_backwardTestScreenEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView8click_IEEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView8click_RREv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView8click_TiEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView8click_VTEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView9showAlertEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenview.o(.text._ZN10screenView9startVentEv)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced from screenviewbase.o(.text._ZN14screenViewBase29logo_fadeEndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_5ImageEEE)
 <LI><a href="#[a4]">touchgfx::Drawable::setVisible(bool)</a> from screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb) referenced 23 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[eb]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable11setPositionEssss) referenced 23 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[eb]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable11setPositionEssss) referenced from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[2d9]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2f9]">touchgfx::Drawable::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2fd]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[2d7]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[2fc]">touchgfx::Drawable::handleTickEvent()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[2d5]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[2d6]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[2d4]">touchgfx::Drawable::childGeometryChanged()</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[2cc]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[2d0]">touchgfx::Drawable::setX(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[2d1]">touchgfx::Drawable::setY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[ad]">touchgfx::Drawable::setXY(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable5setXYEss) referenced from screenview.o(.text._ZN10screenView16handleMainScreenEv)
 <LI><a href="#[ad]">touchgfx::Drawable::setXY(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable5setXYEss) referenced 24 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[ad]">touchgfx::Drawable::setXY(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable5setXYEss) referenced from slider.o(.text._ZN8touchgfx6Slider21setupHorizontalSliderEttttt)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[2da]">touchgfx::Drawable::moveTo(short, short)</a> from screenview.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2d2]">touchgfx::Drawable::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2d3]">touchgfx::Drawable::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2f4]">touchgfx::Drawable::~Drawable__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[116]">touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp10div255_888Ejh) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKjssiihhh)
 <LI><a href="#[116]">touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp10div255_888Ejh) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKjssiihhh)
 <LI><a href="#[116]">touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp10div255_888Ejh) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKjssiihh)
 <LI><a href="#[498]">touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[491]">touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[118]">touchgfx::LCD16bpp::div255_888_FFcheck(unsigned, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18div255_888_FFcheckEjh) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKjsiihh)
 <LI><a href="#[117]">touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp20bilinearInterpolate8Ehhhhhh) referenced from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh)
 <LI><a href="#[4a0]">touchgfx::LCD16bpp::getTextureMapperDrawScanLine(const touchgfx::TextureSurface&, unsigned short, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[496]">touchgfx::LCD16bpp::copyAreaFromTFTToClientBuffer(const touchgfx::Rect&)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[495]">touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned char*, short, short)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[494]">touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[458]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
 <LI><a href="#[457]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
 <LI><a href="#[45a]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
 <LI><a href="#[459]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
 <LI><a href="#[45c]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
 <LI><a href="#[45b]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
 <LI><a href="#[45e]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
 <LI><a href="#[45d]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
 <LI><a href="#[460]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[45f]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[462]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[461]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[464]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[463]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[466]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[465]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[468]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[467]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[46a]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[469]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[46c]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[46b]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[46e]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[46d]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[470]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[46f]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[472]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[471]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[474]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[473]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[476]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[475]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[478]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[477]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[47a]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[479]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[47c]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[47b]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[47e]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[47d]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[480]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[47f]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[482]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[481]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[484]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[483]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[486]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[485]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[488]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[487]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[48a]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[489]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[48c]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[48b]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[48e]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[48d]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[493]">touchgfx::LCD16bpp::blitCopy(const unsigned char*, touchgfx::Bitmap::BitmapFormat, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[492]">touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[497]">touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[4a2]">touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[490]">touchgfx::LCD16bpp::~LCD16bpp__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bppD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[329]">touchgfx::TextArea::setBaselineY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea12setBaselineYEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[329]">touchgfx::TextArea::setBaselineY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea12setBaselineYEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[329]">touchgfx::TextArea::setBaselineY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea12setBaselineYEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[329]">touchgfx::TextArea::setBaselineY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea12setBaselineYEs) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[329]">touchgfx::TextArea::setBaselineY(short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea12setBaselineYEs) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[f1]">touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)</a> from textarea.o(.text._ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE) referenced 24 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[32a]">touchgfx::TextArea::setXBaselineY(short, short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea13setXBaselineYEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[32a]">touchgfx::TextArea::setXBaselineY(short, short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea13setXBaselineYEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[32a]">touchgfx::TextArea::setXBaselineY(short, short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea13setXBaselineYEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[32a]">touchgfx::TextArea::setXBaselineY(short, short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea13setXBaselineYEss) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[32a]">touchgfx::TextArea::setXBaselineY(short, short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea13setXBaselineYEss) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[ef]">touchgfx::TextArea::setLinespacing(short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea14setLinespacingEs) referenced 25 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[a7]">touchgfx::TextArea::resizeToCurrentText()</a> from textarea.o(.text._ZN8touchgfx8TextArea19resizeToCurrentTextEv) referenced from screenview.o(.text._ZN10screenView10updateDateEv)
 <LI><a href="#[a7]">touchgfx::TextArea::resizeToCurrentText()</a> from textarea.o(.text._ZN8touchgfx8TextArea19resizeToCurrentTextEv) referenced from screenview.o(.text._ZN10screenView11setupScreenEv)
 <LI><a href="#[a7]">touchgfx::TextArea::resizeToCurrentText()</a> from textarea.o(.text._ZN8touchgfx8TextArea19resizeToCurrentTextEv) referenced 20 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[328]">touchgfx::TextArea::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea8setAlphaEh) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[328]">touchgfx::TextArea::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea8setAlphaEh) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[328]">touchgfx::TextArea::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea8setAlphaEh) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[328]">touchgfx::TextArea::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea8setAlphaEh) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[328]">touchgfx::TextArea::setAlpha(unsigned char)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea8setAlphaEh) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[ee]">touchgfx::TextArea::setColor(touchgfx::colortype)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea8setColorENS_9colortypeE) referenced 26 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[325]">touchgfx::TextArea::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea8setWidthEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[325]">touchgfx::TextArea::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea8setWidthEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[325]">touchgfx::TextArea::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea8setWidthEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[325]">touchgfx::TextArea::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea8setWidthEs) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[325]">touchgfx::TextArea::setWidth(short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea8setWidthEs) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[326]">touchgfx::TextArea::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea9setHeightEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[326]">touchgfx::TextArea::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea9setHeightEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[326]">touchgfx::TextArea::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea9setHeightEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[326]">touchgfx::TextArea::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea9setHeightEs) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[326]">touchgfx::TextArea::setHeight(short)</a> from screenviewbase.o(.text._ZN8touchgfx8TextArea9setHeightEs) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[b8]">touchgfx::TextArea::TextArea__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8TextAreaC2Ev) referenced from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[4a3]">touchgfx::TextArea::~TextArea__deallocating()</a> from textarea.o(.text._ZN8touchgfx8TextAreaD0Ev) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[320]">touchgfx::TextArea::~TextArea__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8TextAreaD2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[320]">touchgfx::TextArea::~TextArea__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8TextAreaD2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[320]">touchgfx::TextArea::~TextArea__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8TextAreaD2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[320]">touchgfx::TextArea::~TextArea__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8TextAreaD2Ev) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[320]">touchgfx::TextArea::~TextArea__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx8TextAreaD2Ev) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[4a4]">touchgfx::ConstFont::~ConstFont__deallocating()</a> from constfont.o(.text._ZN8touchgfx9ConstFontD0Ev) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[2e2]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2e2]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2e2]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2e2]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2e2]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2e2]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2e2]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2e2]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2e2]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2e2]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2e2]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2e2]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2e2]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2cd]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2cd]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2cd]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2cd]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2cd]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2cd]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2cd]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2cd]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2cd]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2cd]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2cd]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2cd]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2cd]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2cb]">touchgfx::Container::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2cb]">touchgfx::Container::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2cb]">touchgfx::Container::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2cb]">touchgfx::Container::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2cb]">touchgfx::Container::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2cb]">touchgfx::Container::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2cb]">touchgfx::Container::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2cb]">touchgfx::Container::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2cb]">touchgfx::Container::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2cb]">touchgfx::Container::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2cb]">touchgfx::Container::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2cb]">touchgfx::Container::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2cb]">touchgfx::Container::getFirstChild()</a> from screenviewbase.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2db]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2db]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2db]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2db]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2db]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2db]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2db]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2db]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2db]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2db]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2db]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2db]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2db]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2e1]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2e1]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2e1]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2e1]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2e1]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2e1]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2e1]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2e1]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2e1]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2e1]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2e1]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2e1]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2e1]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2e4]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2e4]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2e4]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2e4]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2e4]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2e4]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2e4]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2e4]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2e4]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2e4]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2e4]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2e4]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2e4]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[f2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[f2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[f2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[f2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[f2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[f2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[f2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[f2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[f2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[f2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[f2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[f2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[f2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[f2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced 26 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[f2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraphC2Es)
 <LI><a href="#[f2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from slider.o(.text._ZN8touchgfx6SliderC2Ev)
 <LI><a href="#[2e0]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2e0]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2e0]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2e0]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2e0]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2e0]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2e0]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2e0]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2e0]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2e0]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2e0]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2e0]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2e0]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2dc]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2dc]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2dc]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2dc]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2dc]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2dc]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2dc]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2dc]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2dc]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2dc]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2dc]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2dc]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2dc]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2de]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2de]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2de]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2de]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2de]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2de]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2de]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2de]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2de]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2de]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2de]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2de]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2de]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2df]">touchgfx::Container::contains(const touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2df]">touchgfx::Container::contains(const touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2df]">touchgfx::Container::contains(const touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2df]">touchgfx::Container::contains(const touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2df]">touchgfx::Container::contains(const touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2df]">touchgfx::Container::contains(const touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2df]">touchgfx::Container::contains(const touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2df]">touchgfx::Container::contains(const touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2df]">touchgfx::Container::contains(const touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2df]">touchgfx::Container::contains(const touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2df]">touchgfx::Container::contains(const touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2df]">touchgfx::Container::contains(const touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2df]">touchgfx::Container::contains(const touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2dd]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2dd]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2dd]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2dd]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2dd]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2dd]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2dd]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2dd]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2dd]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2dd]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2dd]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2dd]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2dd]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[b4]">touchgfx::Container::Container__sub_object()</a> from screenviewbase.o(.text._ZN8touchgfx9ContainerC2Ev) referenced 3 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[4a7]">touchgfx::Container::~Container__deallocating()</a> from container.o(.text._ZN8touchgfx9ContainerD0Ev) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[3f7]">touchgfx::DMA_Queue::~DMA_Queue__sub_object()</a> from dma.o(.text._ZN8touchgfx9DMA_QueueD2Ev) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[4a8]">touchgfx::DragEvent::~DragEvent__deallocating()</a> from screen.o(.text._ZN8touchgfx9DragEventD0Ev) referenced from screen.o(.rodata._ZTVN8touchgfx9DragEventE)
 <LI><a href="#[4ac]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[4ad]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[4aa]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[4b1]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[4b2]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[4af]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[4b6]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[4b7]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[4b4]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[f0]">touchgfx::TypedText::TypedText__sub_object(unsigned short)</a> from screenviewbase.o(.text._ZN8touchgfx9TypedTextC2Et) referenced 24 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[4ba]">touchgfx::TypedText::~TypedText__deallocating()</a> from fontcache.o(.text._ZN8touchgfx9TypedTextD0Ev) referenced from fontcache.o(.rodata._ZTVN8touchgfx9TypedTextE)
 <LI><a href="#[4b9]">touchgfx::TypedText::~TypedText__sub_object()</a> from fontcache.o(.text._ZN8touchgfx9TypedTextD2Ev) referenced from fontcache.o(.rodata._ZTVN8touchgfx9TypedTextE)
 <LI><a href="#[1c4]">TouchGFXHAL::getTFTFrameBuffer() const</a> from touchgfxhal.o(.text._ZNK11TouchGFXHAL17getTFTFrameBufferEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[29e]">TouchGFXGeneratedHAL::getTFTFrameBuffer() const</a> from touchgfxgeneratedhal.o(.text._ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[2c0]">touchgfx::ClickEvent::getEventType() const</a> from screen.o(.text._ZNK8touchgfx10ClickEvent12getEventTypeEv) referenced from screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
 <LI><a href="#[2f3]">touchgfx::BoxProgress::getColor() const</a> from boxprogress.o(.text._ZNK8touchgfx11BoxProgress8getColorEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2f7]">touchgfx::RadioButton::getSolidRect() const</a> from radiobutton.o(.text._ZNK8touchgfx11RadioButton12getSolidRectEv) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2f8]">touchgfx::RadioButton::invalidateContent() const</a> from radiobutton.o(.text._ZNK8touchgfx11RadioButton17invalidateContentEv) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2f6]">touchgfx::RadioButton::draw(const touchgfx::Rect&) const</a> from radiobutton.o(.text._ZNK8touchgfx11RadioButton4drawERKNS_4RectE) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from screenview.o(.text._ZN10screenView10click_timeEv)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from screenview.o(.text._ZN10screenView11click_audioEv)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from screenview.o(.text._ZN10screenView14click_languageEv)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from screenview.o(.text._ZN10screenView15handleTickEventEv)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from screenview.o(.text._ZN10screenView16click_brightnessEv)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_audioSliderEi)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from screenview.o(.text._ZN10screenView19handleDeviceSettingEv)
 <LI><a href="#[a5]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from screenview.o(.text._ZN10screenView22click_brightnessSliderEi)
 <LI><a href="#[302]">touchgfx::CanvasWidget::getSolidRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[302]">touchgfx::CanvasWidget::getSolidRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[302]">touchgfx::CanvasWidget::getSolidRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[302]">touchgfx::CanvasWidget::getSolidRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[302]">touchgfx::CanvasWidget::getSolidRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[302]">touchgfx::CanvasWidget::getSolidRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[302]">touchgfx::CanvasWidget::getSolidRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[302]">touchgfx::CanvasWidget::getSolidRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[302]">touchgfx::CanvasWidget::getSolidRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[302]">touchgfx::CanvasWidget::getSolidRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[302]">touchgfx::CanvasWidget::getSolidRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[306]">touchgfx::CanvasWidget::getMinimalRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[306]">touchgfx::CanvasWidget::getMinimalRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[306]">touchgfx::CanvasWidget::getMinimalRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[306]">touchgfx::CanvasWidget::getMinimalRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[306]">touchgfx::CanvasWidget::getMinimalRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[306]">touchgfx::CanvasWidget::getMinimalRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[306]">touchgfx::CanvasWidget::getMinimalRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[306]">touchgfx::CanvasWidget::getMinimalRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[306]">touchgfx::CanvasWidget::getMinimalRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[306]">touchgfx::CanvasWidget::getMinimalRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[301]">touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[301]">touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[301]">touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[301]">touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[301]">touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[301]">touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[301]">touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[305]">touchgfx::CanvasWidget::getAlpha() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[305]">touchgfx::CanvasWidget::getAlpha() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[305]">touchgfx::CanvasWidget::getAlpha() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[305]">touchgfx::CanvasWidget::getAlpha() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[305]">touchgfx::CanvasWidget::getAlpha() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[305]">touchgfx::CanvasWidget::getAlpha() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[305]">touchgfx::CanvasWidget::getAlpha() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[305]">touchgfx::CanvasWidget::getAlpha() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[305]">touchgfx::CanvasWidget::getAlpha() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[305]">touchgfx::CanvasWidget::getAlpha() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[305]">touchgfx::CanvasWidget::getAlpha() const</a> from screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[318]">touchgfx::DigitalClock::getTextWidth() const</a> from digitalclock.o(.text._ZNK8touchgfx12DigitalClock12getTextWidthEv) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[315]">touchgfx::DigitalClock::getDisplayMode() const</a> from digitalclock.o(.text._ZNK8touchgfx12DigitalClock14getDisplayModeEv) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[30a]">touchgfx::DigitalClock::invalidateContent() const</a> from digitalclock.o(.text._ZNK8touchgfx12DigitalClock17invalidateContentEv) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[317]">touchgfx::DigitalClock::getAlpha() const</a> from digitalclock.o(.text._ZNK8touchgfx12DigitalClock8getAlphaEv) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[313]">touchgfx::DigitalClock::getColor() const</a> from digitalclock.o(.text._ZNK8touchgfx12DigitalClock8getColorEv) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[31f]">touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::getFadeAnimationDelay() const</a> from screenviewbase.o(.text._ZNK8touchgfx12FadeAnimatorINS_5ImageEE21getFadeAnimationDelayEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[333]">touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::getFadeAnimationDelay() const</a> from screenviewbase.o(.text._ZNK8touchgfx12FadeAnimatorINS_8TextAreaEE21getFadeAnimationDelayEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[335]">touchgfx::GestureEvent::getEventType() const</a> from screen.o(.text._ZNK8touchgfx12GestureEvent12getEventTypeEv) referenced from screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
 <LI><a href="#[341]">touchgfx::GraphLabelsY::drawString(const touchgfx::Rect&, const touchgfx::Font*, const touchgfx::AbstractDataGraph*, int, int, unsigned char) const</a> from graphlabels.o(.text._ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[343]">touchgfx::GraphLabelsY::getGraphRangeMaxScaled(const touchgfx::AbstractDataGraph*) const</a> from graphlabels.o(.text._ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[342]">touchgfx::GraphLabelsY::getGraphRangeMinScaled(const touchgfx::AbstractDataGraph*) const</a> from graphlabels.o(.text._ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[33e]">touchgfx::GraphLabelsY::getCorrectlyScaledLabelInterval(const touchgfx::AbstractDataGraph*) const</a> from graphlabels.o(.text._ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[348]">touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::getMoveAnimationDelay() const</a> from screenviewbase.o(.text._ZNK8touchgfx12MoveAnimatorINS_9ContainerEE21getMoveAnimationDelayEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[358]">touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const</a> from boxwithborder.o(.text._ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[36a]">touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const</a> from generatedfont.o(.text._ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[36c]">touchgfx::GeneratedFont::getGSUBTable() const</a> from generatedfont.o(.text._ZNK8touchgfx13GeneratedFont12getGSUBTableEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[36e]">touchgfx::GeneratedFont::getPixelData(const touchgfx::GlyphNode*) const</a> from generatedfont.o(.text._ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[36d]">touchgfx::GeneratedFont::getContextualFormsTable() const</a> from generatedfont.o(.text._ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[371]">touchgfx::PainterRGB565::getRenderingMethod() const</a> from painterrgb565.o(.text._ZNK8touchgfx13PainterRGB56518getRenderingMethodEv) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[374]">touchgfx::PainterRGB565::paint(unsigned char*, short, short, short, short, unsigned char) const</a> from painterrgb565.o(.text._ZNK8touchgfx13PainterRGB5655paintEPhssssh) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[373]">touchgfx::PainterRGB565::tearDown() const</a> from painterrgb565.o(.text._ZNK8touchgfx13PainterRGB5658tearDownEv) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[2ff]">touchgfx::AbstractButton::getPressedState() const</a> from button.o(.text._ZNK8touchgfx14AbstractButton15getPressedStateEv) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2ff]">touchgfx::AbstractButton::getPressedState() const</a> from button.o(.text._ZNK8touchgfx14AbstractButton15getPressedStateEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2ff]">touchgfx::AbstractButton::getPressedState() const</a> from button.o(.text._ZNK8touchgfx14AbstractButton15getPressedStateEv) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2ff]">touchgfx::AbstractButton::getPressedState() const</a> from button.o(.text._ZNK8touchgfx14AbstractButton15getPressedStateEv) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[3ff]">touchgfx::AbstractPainter::getRenderingMethod() const</a> from screenviewbase.o(.text._ZNK8touchgfx15AbstractPainter18getRenderingMethodEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[372]">touchgfx::AbstractPainter::setup(const touchgfx::Rect&) const</a> from screenviewbase.o(.text._ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[372]">touchgfx::AbstractPainter::setup(const touchgfx::Rect&) const</a> from screenviewbase.o(.text._ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[400]">touchgfx::AbstractPainter::tearDown() const</a> from screenviewbase.o(.text._ZNK8touchgfx15AbstractPainter8tearDownEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[37b]">touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const</a> from buttonwithlabel.o(.text._ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[340]">touchgfx::GraphLabelsBase::drawIndexRange(const touchgfx::Rect&, const touchgfx::Font*, const touchgfx::AbstractDataGraph*, int, int, int, int, unsigned char) const</a> from graphlabels.o(.text._ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[340]">touchgfx::GraphLabelsBase::drawIndexRange(const touchgfx::Rect&, const touchgfx::Font*, const touchgfx::AbstractDataGraph*, int, int, int, int, unsigned char) const</a> from graphlabels.o(.text._ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[33f]">touchgfx::GraphLabelsBase::getCorrectlyScaledMajorInterval(const touchgfx::AbstractDataGraph*) const</a> from graphlabels.o(.text._ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[33f]">touchgfx::GraphLabelsBase::getCorrectlyScaledMajorInterval(const touchgfx::AbstractDataGraph*) const</a> from graphlabels.o(.text._ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[338]">touchgfx::GraphLabelsBase::draw(const touchgfx::Rect&) const</a> from graphlabels.o(.text._ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[338]">touchgfx::GraphLabelsBase::draw(const touchgfx::Rect&) const</a> from graphlabels.o(.text._ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[3a7]">touchgfx::DynamicDataGraph::indexToXAxis(int, int) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3a7]">touchgfx::DynamicDataGraph::indexToXAxis(int, int) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3a7]">touchgfx::DynamicDataGraph::indexToXAxis(int, int) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3a7]">touchgfx::DynamicDataGraph::indexToXAxis(int, int) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3aa]">touchgfx::DynamicDataGraph::indexToScreenXQ5(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3aa]">touchgfx::DynamicDataGraph::indexToScreenXQ5(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3aa]">touchgfx::DynamicDataGraph::indexToScreenXQ5(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3aa]">touchgfx::DynamicDataGraph::indexToScreenXQ5(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3ab]">touchgfx::DynamicDataGraph::indexToScreenYQ5(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3ab]">touchgfx::DynamicDataGraph::indexToScreenYQ5(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3ab]">touchgfx::DynamicDataGraph::indexToScreenYQ5(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3ab]">touchgfx::DynamicDataGraph::indexToScreenYQ5(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3af]">touchgfx::DynamicDataGraph::getGraphRangeXMax() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3af]">touchgfx::DynamicDataGraph::getGraphRangeXMax() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3af]">touchgfx::DynamicDataGraph::getGraphRangeXMax() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3af]">touchgfx::DynamicDataGraph::getGraphRangeXMax() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3ae]">touchgfx::DynamicDataGraph::getGraphRangeXMin() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3ae]">touchgfx::DynamicDataGraph::getGraphRangeXMin() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3ae]">touchgfx::DynamicDataGraph::getGraphRangeXMin() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3ae]">touchgfx::DynamicDataGraph::getGraphRangeXMin() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3b5]">touchgfx::DynamicDataGraph::getXAxisScaleAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3b5]">touchgfx::DynamicDataGraph::getXAxisScaleAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3b5]">touchgfx::DynamicDataGraph::getXAxisScaleAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3b5]">touchgfx::DynamicDataGraph::getXAxisScaleAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3c2]">touchgfx::DynamicDataGraph::indexToGlobalIndex(short) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3b6]">touchgfx::DynamicDataGraph::getXAxisFactorAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3b6]">touchgfx::DynamicDataGraph::getXAxisFactorAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3b6]">touchgfx::DynamicDataGraph::getXAxisFactorAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3b6]">touchgfx::DynamicDataGraph::getXAxisFactorAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3bd]">touchgfx::DynamicDataGraph::getXAxisOffsetAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3bd]">touchgfx::DynamicDataGraph::getXAxisOffsetAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3bd]">touchgfx::DynamicDataGraph::getXAxisOffsetAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3bd]">touchgfx::DynamicDataGraph::getXAxisOffsetAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3c4]">touchgfx::DynamicDataGraph::getXAxisScaleScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3c4]">touchgfx::DynamicDataGraph::getXAxisScaleScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3c4]">touchgfx::DynamicDataGraph::getXAxisScaleScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3c4]">touchgfx::DynamicDataGraph::getXAxisScaleScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3b9]">touchgfx::DynamicDataGraph::getXAxisFactorScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3b9]">touchgfx::DynamicDataGraph::getXAxisFactorScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3b9]">touchgfx::DynamicDataGraph::getXAxisFactorScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3b9]">touchgfx::DynamicDataGraph::getXAxisFactorScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3bf]">touchgfx::DynamicDataGraph::getXAxisOffsetScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3bf]">touchgfx::DynamicDataGraph::getXAxisOffsetScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3bf]">touchgfx::DynamicDataGraph::getXAxisOffsetScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3bf]">touchgfx::DynamicDataGraph::getXAxisOffsetScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3b7]">touchgfx::DynamicDataGraph::getXAxisScaleAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3b7]">touchgfx::DynamicDataGraph::getXAxisScaleAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3b7]">touchgfx::DynamicDataGraph::getXAxisScaleAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3b7]">touchgfx::DynamicDataGraph::getXAxisScaleAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3b8]">touchgfx::DynamicDataGraph::getXAxisFactorAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3b8]">touchgfx::DynamicDataGraph::getXAxisFactorAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3b8]">touchgfx::DynamicDataGraph::getXAxisFactorAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3b8]">touchgfx::DynamicDataGraph::getXAxisFactorAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3be]">touchgfx::DynamicDataGraph::getXAxisOffsetAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3be]">touchgfx::DynamicDataGraph::getXAxisOffsetAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3be]">touchgfx::DynamicDataGraph::getXAxisOffsetAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3be]">touchgfx::DynamicDataGraph::getXAxisOffsetAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3a5]">touchgfx::DynamicDataGraph::indexToDataPointXScaled(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3a5]">touchgfx::DynamicDataGraph::indexToDataPointXScaled(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3a5]">touchgfx::DynamicDataGraph::indexToDataPointXScaled(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3a5]">touchgfx::DynamicDataGraph::indexToDataPointXScaled(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3a6]">touchgfx::DynamicDataGraph::indexToDataPointYScaled(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3a6]">touchgfx::DynamicDataGraph::indexToDataPointYScaled(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3a6]">touchgfx::DynamicDataGraph::indexToDataPointYScaled(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3a6]">touchgfx::DynamicDataGraph::indexToDataPointYScaled(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3ac]">touchgfx::DynamicDataGraph::xScreenRangeToIndexRange(short, short, short&, short&) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3ac]">touchgfx::DynamicDataGraph::xScreenRangeToIndexRange(short, short, short&, short&) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3ac]">touchgfx::DynamicDataGraph::xScreenRangeToIndexRange(short, short, short&, short&) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3ac]">touchgfx::DynamicDataGraph::xScreenRangeToIndexRange(short, short, short&, short&) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3ad]">touchgfx::DynamicDataGraph::getScale() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph8getScaleEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3ad]">touchgfx::DynamicDataGraph::getScale() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph8getScaleEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3ad]">touchgfx::DynamicDataGraph::getScale() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph8getScaleEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3ad]">touchgfx::DynamicDataGraph::getScale() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph8getScaleEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3c1]">touchgfx::DynamicDataGraph::dataIndex(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph9dataIndexEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3c1]">touchgfx::DynamicDataGraph::dataIndex(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph9dataIndexEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3c1]">touchgfx::DynamicDataGraph::dataIndex(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph9dataIndexEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3c1]">touchgfx::DynamicDataGraph::dataIndex(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph9dataIndexEs) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[386]">touchgfx::DynamicDataGraph::getScaleX() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph9getScaleXEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[386]">touchgfx::DynamicDataGraph::getScaleX() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph9getScaleXEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[386]">touchgfx::DynamicDataGraph::getScaleX() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph9getScaleXEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[386]">touchgfx::DynamicDataGraph::getScaleX() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph9getScaleXEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[388]">touchgfx::DynamicDataGraph::getScaleY() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph9getScaleYEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[388]">touchgfx::DynamicDataGraph::getScaleY() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph9getScaleYEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[388]">touchgfx::DynamicDataGraph::getScaleY() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph9getScaleYEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[388]">touchgfx::DynamicDataGraph::getScaleY() const</a> from screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph9getScaleYEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3c6]">touchgfx::GraphElementArea::drawCanvasWidget(const touchgfx::Rect&) const</a> from graphelements.o(.text._ZNK8touchgfx16GraphElementArea16drawCanvasWidgetERKNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[3c9]">touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const</a> from graphelements.o(.text._ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[3cd]">touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::getRadioButton(unsigned short) const</a> from screenviewbase.o(.text._ZNK8touchgfx16RadioButtonGroupILt2EE14getRadioButtonEt) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
 <LI><a href="#[3d2]">touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::getDeselectionEnabled() const</a> from screenviewbase.o(.text._ZNK8touchgfx16RadioButtonGroupILt2EE21getDeselectionEnabledEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
 <LI><a href="#[3cf]">touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::getSelectedRadioButton() const</a> from screenviewbase.o(.text._ZNK8touchgfx16RadioButtonGroupILt2EE22getSelectedRadioButtonEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
 <LI><a href="#[3ce]">touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::getSelectedRadioButtonIndex() const</a> from screenviewbase.o(.text._ZNK8touchgfx16RadioButtonGroupILt2EE27getSelectedRadioButtonIndexEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
 <LI><a href="#[114]">touchgfx::AbstractDataGraph::scaled2intX(int) const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph11scaled2intXEi) referenced from abstractdatagraph.o(.text._ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_)
 <LI><a href="#[3a8]">touchgfx::AbstractDataGraph::valueToScreenXQ5(int) const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3a8]">touchgfx::AbstractDataGraph::valueToScreenXQ5(int) const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[3a8]">touchgfx::AbstractDataGraph::valueToScreenXQ5(int) const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3a8]">touchgfx::AbstractDataGraph::valueToScreenXQ5(int) const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3a8]">touchgfx::AbstractDataGraph::valueToScreenXQ5(int) const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3a9]">touchgfx::AbstractDataGraph::valueToScreenYQ5(int) const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3a9]">touchgfx::AbstractDataGraph::valueToScreenYQ5(int) const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[3a9]">touchgfx::AbstractDataGraph::valueToScreenYQ5(int) const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3a9]">touchgfx::AbstractDataGraph::valueToScreenYQ5(int) const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3a9]">touchgfx::AbstractDataGraph::valueToScreenYQ5(int) const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[380]">touchgfx::AbstractDataGraph::invalidateContent() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph17invalidateContentEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[380]">touchgfx::AbstractDataGraph::invalidateContent() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph17invalidateContentEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[380]">touchgfx::AbstractDataGraph::invalidateContent() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph17invalidateContentEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[380]">touchgfx::AbstractDataGraph::invalidateContent() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph17invalidateContentEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[380]">touchgfx::AbstractDataGraph::invalidateContent() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph17invalidateContentEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[399]">touchgfx::AbstractDataGraph::getGraphRangeXMaxAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[399]">touchgfx::AbstractDataGraph::getGraphRangeXMaxAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[399]">touchgfx::AbstractDataGraph::getGraphRangeXMaxAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[399]">touchgfx::AbstractDataGraph::getGraphRangeXMaxAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[399]">touchgfx::AbstractDataGraph::getGraphRangeXMaxAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[396]">touchgfx::AbstractDataGraph::getGraphRangeXMinAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[396]">touchgfx::AbstractDataGraph::getGraphRangeXMinAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[396]">touchgfx::AbstractDataGraph::getGraphRangeXMinAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[396]">touchgfx::AbstractDataGraph::getGraphRangeXMinAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[396]">touchgfx::AbstractDataGraph::getGraphRangeXMinAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[39f]">touchgfx::AbstractDataGraph::getGraphRangeYMaxAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[39f]">touchgfx::AbstractDataGraph::getGraphRangeYMaxAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[39f]">touchgfx::AbstractDataGraph::getGraphRangeYMaxAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[39f]">touchgfx::AbstractDataGraph::getGraphRangeYMaxAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[39f]">touchgfx::AbstractDataGraph::getGraphRangeYMaxAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[39c]">touchgfx::AbstractDataGraph::getGraphRangeYMinAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[39c]">touchgfx::AbstractDataGraph::getGraphRangeYMinAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[39c]">touchgfx::AbstractDataGraph::getGraphRangeYMinAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[39c]">touchgfx::AbstractDataGraph::getGraphRangeYMinAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[39c]">touchgfx::AbstractDataGraph::getGraphRangeYMinAsInt() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[39b]">touchgfx::AbstractDataGraph::getGraphRangeXMaxScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[39b]">touchgfx::AbstractDataGraph::getGraphRangeXMaxScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[39b]">touchgfx::AbstractDataGraph::getGraphRangeXMaxScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[39b]">touchgfx::AbstractDataGraph::getGraphRangeXMaxScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[39b]">touchgfx::AbstractDataGraph::getGraphRangeXMaxScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[398]">touchgfx::AbstractDataGraph::getGraphRangeXMinScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[398]">touchgfx::AbstractDataGraph::getGraphRangeXMinScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[398]">touchgfx::AbstractDataGraph::getGraphRangeXMinScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[398]">touchgfx::AbstractDataGraph::getGraphRangeXMinScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[398]">touchgfx::AbstractDataGraph::getGraphRangeXMinScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3a1]">touchgfx::AbstractDataGraph::getGraphRangeYMaxScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3a1]">touchgfx::AbstractDataGraph::getGraphRangeYMaxScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[3a1]">touchgfx::AbstractDataGraph::getGraphRangeYMaxScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3a1]">touchgfx::AbstractDataGraph::getGraphRangeYMaxScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3a1]">touchgfx::AbstractDataGraph::getGraphRangeYMaxScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[39e]">touchgfx::AbstractDataGraph::getGraphRangeYMinScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[39e]">touchgfx::AbstractDataGraph::getGraphRangeYMinScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[39e]">touchgfx::AbstractDataGraph::getGraphRangeYMinScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[39e]">touchgfx::AbstractDataGraph::getGraphRangeYMinScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[39e]">touchgfx::AbstractDataGraph::getGraphRangeYMinScaled() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[39a]">touchgfx::AbstractDataGraph::getGraphRangeXMaxAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[39a]">touchgfx::AbstractDataGraph::getGraphRangeXMaxAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[39a]">touchgfx::AbstractDataGraph::getGraphRangeXMaxAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[39a]">touchgfx::AbstractDataGraph::getGraphRangeXMaxAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[39a]">touchgfx::AbstractDataGraph::getGraphRangeXMaxAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[397]">touchgfx::AbstractDataGraph::getGraphRangeXMinAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[397]">touchgfx::AbstractDataGraph::getGraphRangeXMinAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[397]">touchgfx::AbstractDataGraph::getGraphRangeXMinAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[397]">touchgfx::AbstractDataGraph::getGraphRangeXMinAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[397]">touchgfx::AbstractDataGraph::getGraphRangeXMinAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3a0]">touchgfx::AbstractDataGraph::getGraphRangeYMaxAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3a0]">touchgfx::AbstractDataGraph::getGraphRangeYMaxAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[3a0]">touchgfx::AbstractDataGraph::getGraphRangeYMaxAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3a0]">touchgfx::AbstractDataGraph::getGraphRangeYMaxAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3a0]">touchgfx::AbstractDataGraph::getGraphRangeYMaxAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[39d]">touchgfx::AbstractDataGraph::getGraphRangeYMinAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[39d]">touchgfx::AbstractDataGraph::getGraphRangeYMinAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[39d]">touchgfx::AbstractDataGraph::getGraphRangeYMinAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[39d]">touchgfx::AbstractDataGraph::getGraphRangeYMinAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[39d]">touchgfx::AbstractDataGraph::getGraphRangeYMinAsFloat() const</a> from screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3a4]">touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[3a4]">touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[3a4]">touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3a4]">touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3a4]">touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[3d7]">touchgfx::AbstractDataGraph::getScaleX() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph9getScaleXEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[3d9]">touchgfx::AbstractDataGraph::getScaleY() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph9getScaleYEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[3dd]">touchgfx::AbstractPartition::getAllocationCount() const</a> from abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[3dd]">touchgfx::AbstractPartition::getAllocationCount() const</a> from abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[3dd]">touchgfx::AbstractPartition::getAllocationCount() const</a> from abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[3dd]">touchgfx::AbstractPartition::getAllocationCount() const</a> from abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[3e6]">touchgfx::GraphElementGridY::enclosingArea(const touchgfx::AbstractDataGraph*) const</a> from screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[3ee]">touchgfx::GraphElementGridY::valueToScreenQ5(const touchgfx::AbstractDataGraph*, int) const</a> from screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[3ea]">touchgfx::GraphElementGridY::getGraphAreaStart(const touchgfx::AbstractDataGraph*) const</a> from screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[3ed]">touchgfx::GraphElementGridY::getGraphAreaEndPos(const touchgfx::AbstractDataGraph*) const</a> from screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[3eb]">touchgfx::GraphElementGridY::getGraphAreaLength(const touchgfx::AbstractDataGraph*) const</a> from screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[3ec]">touchgfx::GraphElementGridY::getGraphAreaStartPos(const touchgfx::AbstractDataGraph*) const</a> from screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[3e9]">touchgfx::GraphElementGridY::getGraphRangeMaxScaled(const touchgfx::AbstractDataGraph*) const</a> from screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[3e8]">touchgfx::GraphElementGridY::getGraphRangeMinScaled(const touchgfx::AbstractDataGraph*) const</a> from screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[3e3]">touchgfx::GraphElementGridY::getCorrectlyScaledGridInterval(const touchgfx::AbstractDataGraph*) const</a> from screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[3e7]">touchgfx::GraphElementGridY::lineRect(short, short, short, short) const</a> from screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY8lineRectEssss) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[3e4]">touchgfx::GraphElementGridBase::getCorrectlyScaledMajorInterval(const touchgfx::AbstractDataGraph*) const</a> from screenviewbase.o(.text._ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[3e4]">touchgfx::GraphElementGridBase::getCorrectlyScaledMajorInterval(const touchgfx::AbstractDataGraph*) const</a> from screenviewbase.o(.text._ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[3e1]">touchgfx::GraphElementGridBase::draw(const touchgfx::Rect&) const</a> from graphelements.o(.text._ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[3e1]">touchgfx::GraphElementGridBase::draw(const touchgfx::Rect&) const</a> from graphelements.o(.text._ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[3e5]">touchgfx::GraphElementGridBase::drawLine(const touchgfx::Rect&, short, short, short, short, unsigned char) const</a> from graphelements.o(.text._ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[3e5]">touchgfx::GraphElementGridBase::drawLine(const touchgfx::Rect&, short, short, short, short, unsigned char) const</a> from graphelements.o(.text._ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[3f2]">touchgfx::GraphWrapAndClearData::indexToGlobalIndex(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx21GraphWrapAndClearData18indexToGlobalIndexEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[3f2]">touchgfx::GraphWrapAndClearData::indexToGlobalIndex(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx21GraphWrapAndClearData18indexToGlobalIndexEs) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[3f2]">touchgfx::GraphWrapAndClearData::indexToGlobalIndex(short) const</a> from screenviewbase.o(.text._ZNK8touchgfx21GraphWrapAndClearData18indexToGlobalIndexEs) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[406]">touchgfx::TextAreaWithOneWildcard::getWildcard1() const</a> from screenviewbase.o(.text._ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[409]">touchgfx::TextAreaWithTwoWildcards::getWildcard1() const</a> from screenviewbase.o(.text._ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard1Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[40a]">touchgfx::TextAreaWithTwoWildcards::getWildcard2() const</a> from screenviewbase.o(.text._ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[405]">touchgfx::TextAreaWithWildcardBase::invalidateContent() const</a> from textareawithwildcard.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[405]">touchgfx::TextAreaWithWildcardBase::invalidateContent() const</a> from textareawithwildcard.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[405]">touchgfx::TextAreaWithWildcardBase::invalidateContent() const</a> from textareawithwildcard.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[407]">touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</a> from screenviewbase.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[407]">touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</a> from screenviewbase.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[407]">touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</a> from screenviewbase.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[404]">touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const</a> from textareawithwildcard.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[404]">touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const</a> from textareawithwildcard.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[404]">touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const</a> from textareawithwildcard.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[2f2]">touchgfx::AbstractDirectionProgress::getDirection() const</a> from abstractdirectionprogress.o(.text._ZNK8touchgfx25AbstractDirectionProgress12getDirectionEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2f2]">touchgfx::AbstractDirectionProgress::getDirection() const</a> from abstractdirectionprogress.o(.text._ZNK8touchgfx25AbstractDirectionProgress12getDirectionEv) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[339]">touchgfx::AbstractGraphElementNoCWR::drawCanvasWidget(const touchgfx::Rect&) const</a> from screenviewbase.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[339]">touchgfx::AbstractGraphElementNoCWR::drawCanvasWidget(const touchgfx::Rect&) const</a> from screenviewbase.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[339]">touchgfx::AbstractGraphElementNoCWR::drawCanvasWidget(const touchgfx::Rect&) const</a> from screenviewbase.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[339]">touchgfx::AbstractGraphElementNoCWR::drawCanvasWidget(const touchgfx::Rect&) const</a> from screenviewbase.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[339]">touchgfx::AbstractGraphElementNoCWR::drawCanvasWidget(const touchgfx::Rect&) const</a> from screenviewbase.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[339]">touchgfx::AbstractGraphElementNoCWR::drawCanvasWidget(const touchgfx::Rect&) const</a> from screenviewbase.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[33c]">touchgfx::AbstractGraphElementNoCWR::getColor() const</a> from screenviewbase.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[33c]">touchgfx::AbstractGraphElementNoCWR::getColor() const</a> from screenviewbase.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[33c]">touchgfx::AbstractGraphElementNoCWR::getColor() const</a> from screenviewbase.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[33c]">touchgfx::AbstractGraphElementNoCWR::getColor() const</a> from screenviewbase.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[33c]">touchgfx::AbstractGraphElementNoCWR::getColor() const</a> from screenviewbase.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[33c]">touchgfx::AbstractGraphElementNoCWR::getColor() const</a> from screenviewbase.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2ef]">touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator11getProgressEt) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2ef]">touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator11getProgressEt) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2ef]">touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator11getProgressEt) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2ca]">touchgfx::AbstractProgressIndicator::invalidateContent() const</a> from abstractdirectionprogress.o(.text._ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2ca]">touchgfx::AbstractProgressIndicator::invalidateContent() const</a> from abstractdirectionprogress.o(.text._ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2ca]">touchgfx::AbstractProgressIndicator::invalidateContent() const</a> from abstractdirectionprogress.o(.text._ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2e5]">touchgfx::AbstractProgressIndicator::getProgressIndicatorX() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2e5]">touchgfx::AbstractProgressIndicator::getProgressIndicatorX() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2e5]">touchgfx::AbstractProgressIndicator::getProgressIndicatorX() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2e6]">touchgfx::AbstractProgressIndicator::getProgressIndicatorY() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2e6]">touchgfx::AbstractProgressIndicator::getProgressIndicatorY() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2e6]">touchgfx::AbstractProgressIndicator::getProgressIndicatorY() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2e7]">touchgfx::AbstractProgressIndicator::getProgressIndicatorWidth() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2e7]">touchgfx::AbstractProgressIndicator::getProgressIndicatorWidth() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2e7]">touchgfx::AbstractProgressIndicator::getProgressIndicatorWidth() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2e8]">touchgfx::AbstractProgressIndicator::getProgressIndicatorHeight() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2e8]">touchgfx::AbstractProgressIndicator::getProgressIndicatorHeight() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2e8]">touchgfx::AbstractProgressIndicator::getProgressIndicatorHeight() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2f1]">touchgfx::AbstractProgressIndicator::getAlpha() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2f1]">touchgfx::AbstractProgressIndicator::getAlpha() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2f1]">touchgfx::AbstractProgressIndicator::getAlpha() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2eb]">touchgfx::AbstractProgressIndicator::getRange(int&, int&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2eb]">touchgfx::AbstractProgressIndicator::getRange(int&, int&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2eb]">touchgfx::AbstractProgressIndicator::getRange(int&, int&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2ea]">touchgfx::AbstractProgressIndicator::getRange(int&, int&, unsigned short&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2ea]">touchgfx::AbstractProgressIndicator::getRange(int&, int&, unsigned short&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2ea]">touchgfx::AbstractProgressIndicator::getRange(int&, int&, unsigned short&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2e9]">touchgfx::AbstractProgressIndicator::getRange(int&, int&, unsigned short&, unsigned short&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2e9]">touchgfx::AbstractProgressIndicator::getRange(int&, int&, unsigned short&, unsigned short&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2e9]">touchgfx::AbstractProgressIndicator::getRange(int&, int&, unsigned short&, unsigned short&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2ee]">touchgfx::AbstractProgressIndicator::getValue() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getValueEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2ee]">touchgfx::AbstractProgressIndicator::getValue() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getValueEv) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2ee]">touchgfx::AbstractProgressIndicator::getValue() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getValueEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[359]">touchgfx::Box::getSolidRect() const</a> from box.o(.text._ZNK8touchgfx3Box12getSolidRectEv) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[359]">touchgfx::Box::getSolidRect() const</a> from box.o(.text._ZNK8touchgfx3Box12getSolidRectEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[35a]">touchgfx::Box::invalidateContent() const</a> from box.o(.text._ZNK8touchgfx3Box17invalidateContentEv) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[35a]">touchgfx::Box::invalidateContent() const</a> from box.o(.text._ZNK8touchgfx3Box17invalidateContentEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[414]">touchgfx::Box::draw(const touchgfx::Rect&) const</a> from box.o(.text._ZNK8touchgfx3Box4drawERKNS_4RectE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[1dd]">touchgfx::HAL::getFlashDataReader() const</a> from touchgfxhal.o(.text._ZNK8touchgfx3HAL18getFlashDataReaderEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1dd]">touchgfx::HAL::getFlashDataReader() const</a> from touchgfxhal.o(.text._ZNK8touchgfx3HAL18getFlashDataReaderEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1dd]">touchgfx::HAL::getFlashDataReader() const</a> from touchgfxhal.o(.text._ZNK8touchgfx3HAL18getFlashDataReaderEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[363]">touchgfx::Font::getCharWidth(unsigned short) const</a> from font.o(.text._ZNK8touchgfx4Font12getCharWidthEt) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[363]">touchgfx::Font::getCharWidth(unsigned short) const</a> from font.o(.text._ZNK8touchgfx4Font12getCharWidthEt) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[4a5]">touchgfx::Font::getGSUBTable() const</a> from texts.o(.text._ZNK8touchgfx4Font12getGSUBTableEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[366]">touchgfx::Font::getFontHeight() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font13getFontHeightEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[366]">touchgfx::Font::getFontHeight() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font13getFontHeightEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[361]">touchgfx::Font::getStringWidth(const unsigned short*, ...) const</a> from texts.o(.text._ZNK8touchgfx4Font14getStringWidthEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[361]">touchgfx::Font::getStringWidth(const unsigned short*, ...) const</a> from texts.o(.text._ZNK8touchgfx4Font14getStringWidthEPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[362]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from texts.o(.text._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[362]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from texts.o(.text._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[368]">touchgfx::Font::getBitsPerPixel() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[368]">touchgfx::Font::getBitsPerPixel() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[369]">touchgfx::Font::getByteAlignRow() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[369]">touchgfx::Font::getByteAlignRow() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[360]">touchgfx::Font::getEllipsisChar() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[360]">touchgfx::Font::getEllipsisChar() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[35f]">touchgfx::Font::getFallbackChar() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font15getFallbackCharEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[35f]">touchgfx::Font::getFallbackChar() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font15getFallbackCharEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[364]">touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font15getSpacingAboveEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[364]">touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font15getSpacingAboveEPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[365]">touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getMaxTextHeightEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[365]">touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getMaxTextHeightEPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[36b]">touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getNumberOfLinesEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[36b]">touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getNumberOfLinesEPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[367]">touchgfx::Font::getMinimumTextHeight() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font20getMinimumTextHeightEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[367]">touchgfx::Font::getMinimumTextHeight() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font20getMinimumTextHeightEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[4a6]">touchgfx::Font::getContextualFormsTable() const</a> from texts.o(.text._ZNK8touchgfx4Font23getContextualFormsTableEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[35e]">touchgfx::Font::getGlyph(unsigned short) const</a> from cachedfont.o(.text._ZNK8touchgfx4Font8getGlyphEt) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[35e]">touchgfx::Font::getGlyph(unsigned short) const</a> from cachedfont.o(.text._ZNK8touchgfx4Font8getGlyphEt) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[420]">touchgfx::Line::getMinimalRect() const</a> from line.o(.text._ZNK8touchgfx4Line14getMinimalRectEv) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[421]">touchgfx::Line::drawCanvasWidget(const touchgfx::Rect&) const</a> from line.o(.text._ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[41f]">touchgfx::Line::invalidateContent() const</a> from line.o(.text._ZNK8touchgfx4Line17invalidateContentEv) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[31b]">touchgfx::Image::getSolidRect() const</a> from image.o(.text._ZNK8touchgfx5Image12getSolidRectEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[31b]">touchgfx::Image::getSolidRect() const</a> from image.o(.text._ZNK8touchgfx5Image12getSolidRectEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[31c]">touchgfx::Image::invalidateContent() const</a> from screenviewbase.o(.text._ZNK8touchgfx5Image17invalidateContentEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[31c]">touchgfx::Image::invalidateContent() const</a> from screenviewbase.o(.text._ZNK8touchgfx5Image17invalidateContentEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[31a]">touchgfx::Image::draw(const touchgfx::Rect&) const</a> from image.o(.text._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[31a]">touchgfx::Image::draw(const touchgfx::Rect&) const</a> from image.o(.text._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[352]">touchgfx::Button::getSolidRect() const</a> from button.o(.text._ZNK8touchgfx6Button12getSolidRectEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[352]">touchgfx::Button::getSolidRect() const</a> from button.o(.text._ZNK8touchgfx6Button12getSolidRectEv) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[352]">touchgfx::Button::getSolidRect() const</a> from button.o(.text._ZNK8touchgfx6Button12getSolidRectEv) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[353]">touchgfx::Button::invalidateContent() const</a> from button.o(.text._ZNK8touchgfx6Button17invalidateContentEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[353]">touchgfx::Button::invalidateContent() const</a> from button.o(.text._ZNK8touchgfx6Button17invalidateContentEv) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[353]">touchgfx::Button::invalidateContent() const</a> from button.o(.text._ZNK8touchgfx6Button17invalidateContentEv) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[351]">touchgfx::Button::draw(const touchgfx::Rect&) const</a> from button.o(.text._ZNK8touchgfx6Button4drawERKNS_4RectE) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[351]">touchgfx::Button::draw(const touchgfx::Rect&) const</a> from button.o(.text._ZNK8touchgfx6Button4drawERKNS_4RectE) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[434]">touchgfx::Slider::getMaxValue() const</a> from slider.o(.text._ZNK8touchgfx6Slider11getMaxValueEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[433]">touchgfx::Slider::getMinValue() const</a> from slider.o(.text._ZNK8touchgfx6Slider11getMinValueEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[431]">touchgfx::Slider::getIndicatorMax() const</a> from slider.o(.text._ZNK8touchgfx6Slider15getIndicatorMaxEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[430]">touchgfx::Slider::getIndicatorMin() const</a> from slider.o(.text._ZNK8touchgfx6Slider15getIndicatorMinEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[439]">touchgfx::Slider::positionToValue(short) const</a> from slider.o(.text._ZNK8touchgfx6Slider15positionToValueEs) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[438]">touchgfx::Slider::valueToPosition(int) const</a> from slider.o(.text._ZNK8touchgfx6Slider15valueToPositionEi) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[43c]">touchgfx::Slider::getValueRangeSize() const</a> from slider.o(.text._ZNK8touchgfx6Slider17getValueRangeSizeEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[43a]">touchgfx::Slider::getIndicatorRadius() const</a> from slider.o(.text._ZNK8touchgfx6Slider18getIndicatorRadiusEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[43b]">touchgfx::Slider::getIndicatorPositionRangeSize() const</a> from slider.o(.text._ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[442]">touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::isValid() const</a> from screenviewbase.o(.text._ZNK8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvE7isValidEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
 <LI><a href="#[446]">touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&, void, void&rang;::isValid() const</a> from screenviewbase.o(.text._ZNK8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_8TextAreaEEEvvE7isValidEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_8TextAreaEEEvvEE)
 <LI><a href="#[44a]">touchgfx::Callback&lang;screenViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</a> from screenviewbase.o(.text._ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[44e]">touchgfx::Callback&lang;screenViewBase, const touchgfx::Slider&, int, void&rang;::isValid() const</a> from screenviewbase.o(.text._ZNK8touchgfx8CallbackI14screenViewBaseRKNS_6SliderEivE7isValidEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_6SliderEivEE)
 <LI><a href="#[452]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</a> from frontendapplicationbase.o(.text._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[455]">touchgfx::Callback&lang;touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</a> from screenviewbase.o(.text._ZNK8touchgfx8CallbackINS_16RadioButtonGroupILt2EEERKNS_14AbstractButtonEvvE7isValidEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackINS_16RadioButtonGroupILt2EEERKNS_14AbstractButtonEvvEE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView10click_CPAPEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView10click_FiO2Ev)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView10click_dateEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView10click_maskEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView10click_modeEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView10click_timeEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView11click_adultEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView11click_alarmEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView11click_audioEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView11handleAlarmEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced 2 times from screenview.o(.text._ZN10screenView11setLanguageEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView12click_arabicEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView12handleTrendsEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView13click_englishEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView13click_lowPEEPEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView13click_triggerEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView14click_languageEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView14click_riseTimeEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView14click_yesAlertEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView14handleLanguageEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView15click_FiO2AlarmEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView15click_FiO2_confEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView15click_PAlarmbtnEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView15click_SPO2AlarmEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView15click_leakAlarmEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView15click_pediatricEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView15handleTickEventEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView16click_PSMax_confEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView16click_Psupp_confEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView16click_deviceInfoEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView16handleMainScreenEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_MVeAlarmbtnEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_MViAlarmbtnEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_VteAlarmbtnEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_VtiAlarmbtnEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_audioSliderEi)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_backAlarmScEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_backDeviceSEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_backSettingEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_backupApneaEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_backupModesEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_dataButton1Ev)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_dataButton2Ev)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_dataButton3Ev)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_dataButton4Ev)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_patientInfoEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_sensitivityEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView17click_ventSettingEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView18click_alarmRecordsEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView18click_cycling_confEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView18click_heightButtonEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView18click_trigger_confEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView19click_PControl_confEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView19click_backupSettingEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView19click_riseTime_confEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView19handleDeviceSettingEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView20click_TiBackupScreenEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView20click_VTBackupScreenEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView20click_apneaDetectionEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView20click_backDataGraphsEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView20click_backInitializeEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView20click_flowShape_confEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView21click_backPatientInfoEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView21click_backVentSettingEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView21click_ventStopedAlarmEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView22click_CO2Sensor_buttonEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView22click_PControlMax_confEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView22click_PEEPBackupScreenEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView22click_TiInspPause_confEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView22click_brightnessSliderEi)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView22click_obstructionAlarmEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView22click_tightness_buttonEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView22updateConfigsWildCardsEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView23click_singleLeak_buttonEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView24disableVentSettingChooseEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced 2 times from screenview.o(.text._ZN10screenView24handleBackupConfigScreenEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView25handleTightnessTestScreenEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView26click_PControlBackupScreenEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView26click_back_tightnessScreenEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView26click_riseTimeBackupScreenEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView26click_singleCircuit_buttonEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView27click_back_flowSensorScreenEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView29click_adult_initScreen_buttonEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced 6 times from screenview.o(.text._ZN10screenView30handleVentilationSettingScreenEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView31click_tightness_continue_buttonEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView31handleInitTestCalibrationScreenEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView32click_flowSensor_continue_buttonEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView33click_pediatric_initScreen_buttonEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView35handleFlowSensor_backwardTestScreenEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView8click_IEEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView8click_RREv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView8click_TiEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView8click_VTEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView8handleRREv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView8handleVTEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView9showAlertEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenview.o(.text._ZN10screenView9startVentEv)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screenviewbase.o(.text._ZN14screenViewBase29logo_fadeEndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_5ImageEEE)
 <LI><a href="#[a3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[2ce]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[2c9]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[303]">touchgfx::Drawable::invalidateContent() const</a> from screenviewbase.o(.text._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[303]">touchgfx::Drawable::invalidateContent() const</a> from screenviewbase.o(.text._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[303]">touchgfx::Drawable::invalidateContent() const</a> from screenviewbase.o(.text._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[303]">touchgfx::Drawable::invalidateContent() const</a> from screenviewbase.o(.text._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[303]">touchgfx::Drawable::invalidateContent() const</a> from screenviewbase.o(.text._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[303]">touchgfx::Drawable::invalidateContent() const</a> from screenviewbase.o(.text._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[303]">touchgfx::Drawable::invalidateContent() const</a> from screenviewbase.o(.text._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[303]">touchgfx::Drawable::invalidateContent() const</a> from screenviewbase.o(.text._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[303]">touchgfx::Drawable::invalidateContent() const</a> from screenviewbase.o(.text._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[303]">touchgfx::Drawable::invalidateContent() const</a> from screenviewbase.o(.text._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from line.o(.rodata._ZTVN8touchgfx4LineE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from button.o(.rodata._ZTVN8touchgfx6ButtonE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[2cf]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[49a]">touchgfx::LCD16bpp::framebufferFormat() const</a> from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp17framebufferFormatEv) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[49b]">touchgfx::LCD16bpp::framebufferStride() const</a> from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp17framebufferStrideEv) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[499]">touchgfx::LCD16bpp::bitDepth() const</a> from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp8bitDepthEv) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[32b]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[32b]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[32b]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[32b]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[32b]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[323]">touchgfx::TextArea::getSolidRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[323]">touchgfx::TextArea::getSolidRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[323]">touchgfx::TextArea::getSolidRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[323]">touchgfx::TextArea::getSolidRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[323]">touchgfx::TextArea::getSolidRect() const</a> from screenviewbase.o(.text._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[32d]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[32d]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[32d]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[32d]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[32d]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[32f]">touchgfx::TextArea::getWildcard1() const</a> from screenviewbase.o(.text._ZNK8touchgfx8TextArea12getWildcard1Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[32f]">touchgfx::TextArea::getWildcard1() const</a> from screenviewbase.o(.text._ZNK8touchgfx8TextArea12getWildcard1Ev) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[32f]">touchgfx::TextArea::getWildcard1() const</a> from screenviewbase.o(.text._ZNK8touchgfx8TextArea12getWildcard1Ev) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[330]">touchgfx::TextArea::getWildcard2() const</a> from screenviewbase.o(.text._ZNK8touchgfx8TextArea12getWildcard2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[330]">touchgfx::TextArea::getWildcard2() const</a> from screenviewbase.o(.text._ZNK8touchgfx8TextArea12getWildcard2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[330]">touchgfx::TextArea::getWildcard2() const</a> from screenviewbase.o(.text._ZNK8touchgfx8TextArea12getWildcard2Ev) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[330]">touchgfx::TextArea::getWildcard2() const</a> from screenviewbase.o(.text._ZNK8touchgfx8TextArea12getWildcard2Ev) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[32c]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[32c]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[32c]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[32c]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[32c]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[324]">touchgfx::TextArea::invalidateContent() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea17invalidateContentEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[324]">touchgfx::TextArea::invalidateContent() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea17invalidateContentEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[32e]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(.text._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[32e]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(.text._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[32e]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(.text._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[32e]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(.text._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[32e]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(.text._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[331]">touchgfx::TextArea::calculateBoundingArea() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea21calculateBoundingAreaEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[331]">touchgfx::TextArea::calculateBoundingArea() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea21calculateBoundingAreaEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[322]">touchgfx::TextArea::draw(const touchgfx::Rect&) const</a> from textarea.o(.text._ZNK8touchgfx8TextArea4drawERKNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[322]">touchgfx::TextArea::draw(const touchgfx::Rect&) const</a> from textarea.o(.text._ZNK8touchgfx8TextArea4drawERKNS_4RectE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[35d]">touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</a> from constfont.o(.text._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[35d]">touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</a> from constfont.o(.text._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[2c8]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2c8]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2c8]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2c8]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2c8]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2c8]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2c8]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2c8]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2c8]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2c8]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2c8]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2c8]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2c8]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2e3]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2e3]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2e3]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2e3]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2e3]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2e3]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2e3]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2e3]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2e3]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2e3]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2e3]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2e3]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2e3]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[345]">touchgfx::Container::invalidateContent() const</a> from container.o(.text._ZNK8touchgfx9Container17invalidateContentEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[345]">touchgfx::Container::invalidateContent() const</a> from container.o(.text._ZNK8touchgfx9Container17invalidateContentEv) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[345]">touchgfx::Container::invalidateContent() const</a> from container.o(.text._ZNK8touchgfx9Container17invalidateContentEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[345]">touchgfx::Container::invalidateContent() const</a> from container.o(.text._ZNK8touchgfx9Container17invalidateContentEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2c7]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
 <LI><a href="#[2c7]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[2c7]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[2c7]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[2c7]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[2c7]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[2c7]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
 <LI><a href="#[2c7]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
 <LI><a href="#[2c7]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
 <LI><a href="#[2c7]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[2c7]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[2c7]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2c7]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[4a9]">touchgfx::DragEvent::getEventType() const</a> from screen.o(.text._ZNK8touchgfx9DragEvent12getEventTypeEv) referenced from screen.o(.rodata._ZTVN8touchgfx9DragEventE)
 <LI><a href="#[4ae]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[4ab]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[4b3]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[4b0]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[4b8]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[4b5]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[100]">touchgfx::TypedText::getText() const</a> from screenviewbase.o(.text._ZNK8touchgfx9TypedText7getTextEv) referenced 24 times from screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
 <LI><a href="#[100]">touchgfx::TypedText::getText() const</a> from screenviewbase.o(.text._ZNK8touchgfx9TypedText7getTextEv) referenced from graphlabels.o(.text._ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih)
 <LI><a href="#[284]">thunk{-4} to screenPresenter::~screenPresenter__deallocating()</a> from screenpresenter.o(.text._ZThn4_N15screenPresenterD0Ev) referenced from screenpresenter.o(.rodata._ZTV15screenPresenter)
 <LI><a href="#[283]">thunk{-4} to screenPresenter::~screenPresenter()</a> from screenpresenter.o(.text._ZThn4_N15screenPresenterD1Ev) referenced from screenpresenter.o(.rodata._ZTV15screenPresenter)
 <LI><a href="#[377]">thunk{-8} to touchgfx::PainterRGB565::setColor(touchgfx::colortype)</a> from painterrgb565.o(.text._ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[376]">thunk{-8} to touchgfx::PainterRGB565::~PainterRGB565__deallocating()</a> from painterrgb565.o(.text._ZThn8_N8touchgfx13PainterRGB565D0Ev) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[375]">thunk{-8} to touchgfx::PainterRGB565::~PainterRGB565()</a> from painterrgb565.o(.text._ZThn8_N8touchgfx13PainterRGB565D1Ev) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[307]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[307]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced from abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[307]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 4 times from graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
 <LI><a href="#[307]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[307]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 8 times from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[307]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 4 times from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[307]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 2 times from screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[307]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 10 times from graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
 <LI><a href="#[307]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[307]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
 <LI><a href="#[307]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[307]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 6 times from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[307]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 2 times from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[96]">__main</a> from __main.o(!!!main) referenced from startup_stm32h743xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[96]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(.text)
</UL>
<P><STRONG><a name="[4be]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[4c0]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[88e]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[88f]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[890]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[891]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[892]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[4cb]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[4c1]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[4c3]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[893]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[894]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[895]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[896]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[897]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[4c5]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[898]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[899]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[89a]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[89b]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[89c]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[89d]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[89e]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[89f]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[8a0]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[8a1]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[8a2]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[8a3]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[8a4]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[8a5]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[8a6]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[4d0]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[4c6]"></a>__rt_lib_shutdown_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __rt_lib_shutdown_cpp_2 &rArr; __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[8a7]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[8a8]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[8a9]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[8aa]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[8ab]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[8ac]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[8ad]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[4bf]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[8ae]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[4c8]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[4ca]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[8af]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[4cc]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; MX_FMC_Init &rArr; HAL_SDRAM_Init &rArr; HAL_SDRAM_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[8b0]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[4eb]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[4cf]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[8b1]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[4d1]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>BDMA_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>BDMA_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>BDMA_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>BDMA_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>BDMA_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>BDMA_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>BDMA_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>BDMA_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>COMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>DMAMUX1_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>DMAMUX2_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>ECC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>FDCAN1_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>FDCAN1_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>FDCAN2_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>FDCAN2_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>FDCAN_CAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>HRTIM1_FLT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>HRTIM1_Master_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>HRTIM1_TIMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>HRTIM1_TIMB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>HRTIM1_TIMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>HRTIM1_TIMD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>HRTIM1_TIME_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>HSEM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>JPEG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>LPTIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>LPTIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>LPTIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>MDIOS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>MDIOS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>MDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>OTG_FS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>OTG_FS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_AVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>SAI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>SAI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>SDMMC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>SPDIF_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>SWPMI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>WAKEUP_PIN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4ea]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32h743xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[5e0]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[8b2]"></a>_ll_udiv</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[4d3]"></a>__cxa_atexit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cxa_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::getInstance()
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_TouchGFXConfiguration.cpp
</UL>

<P><STRONG><a name="[4d5]"></a>__aeabi_assert</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, assert.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_puts
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setFrameBufferSize(unsigned short, unsigned short)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyWord(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::allocate(unsigned short)
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::indexOf(const void*)
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::switchScreen(touchgfx::Screen*)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::execute()
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataCopy(const touchgfx::BlitOp&)
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getId() const
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::replaceAt1(unsigned short)
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::indexToDataPointYScaled(short) const
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::indexToDataPointXScaled(short) const
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setupHorizontalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short)
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridBase::setScale(int)
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::setupBuffer(unsigned char*, unsigned)
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short)
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphRangeYScaled(int, int)
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphRangeXScaled(int, int)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::add(touchgfx::RadioButton&)
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::setScale(int)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsBase::setScale(int)
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pop()
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBuffer()
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getAlignment() const
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::removeAt(unsigned short)
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*)
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setScaleY(int, bool)
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setScaleX(int, bool)
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned char*, touchgfx::Bitmap::BitmapFormat, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned short)
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned char*, short, short)
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getTextureMapperDrawScanLine(const touchgfx::TextureSurface&, unsigned short, unsigned char)
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned char)
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getFramebufferStride()
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char)
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront()
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::peekChar(unsigned short)
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::allocateFront(unsigned short)
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::replaceAt(unsigned short, unsigned short)
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::dropFront(unsigned short)
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short)
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::popFront()
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::popBack()
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::allocateFront(unsigned short)
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValueRange(int, int, int)
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::_angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&)
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::floorDivMod(int, int, int&, int&)
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCellNew(int, int)
</UL>

<P><STRONG><a name="[8b3]"></a>__assert</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, assert.o(.text), UNUSED)

<P><STRONG><a name="[688]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarmShowing()
</UL>

<P><STRONG><a name="[50e]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendAlarm(unsigned char*)
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setupScreen()
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>

<P><STRONG><a name="[4d8]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[8b4]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[4d9]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*)
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[8b5]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[8b6]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[8b7]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[6cb]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::Container__sub_object()
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::Slider()
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short)
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::MoveAnimator__sub_object()
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::AbstractClock__sub_object()
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
</UL>

<P><STRONG><a name="[4da]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[8b8]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[51b]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM15_Init
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI2_Init
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspInit
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspInit
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_MspPostInit
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_MspInit
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::LCD16bpp()
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::findNextEmptyQSPI(unsigned, unsigned, unsigned)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button__sub_object()
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image__sub_object(const touchgfx::Bitmap&)
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::Line()
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box__sub_object()
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short)
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsBase::GraphLabelsBase__sub_object()
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::ButtonWithLabel()
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::CanvasWidget__sub_object()
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::RadioButton__sub_object()
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::BoxProgress()
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::Outline()
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*)
</UL>

<P><STRONG><a name="[51c]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr8
</UL>
<BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphCommonClock_Config
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspInit
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspInit
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[8b9]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[4db]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[8ba]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[8bb]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[8bc]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[4bd]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, init_aeabi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[4dc]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[4df]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[4d7]"></a>abort</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, abort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>

<P><STRONG><a name="[4d4]"></a>__aeabi_atexit</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, aeabi_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>

<P><STRONG><a name="[4d6]"></a>__assert_puts</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, assert_puts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __assert_puts &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>

<P><STRONG><a name="[4e2]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_puts
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[4d2]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[4dd]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[4e1]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_ddtor_pointer_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[8bd]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[8be]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[8bf]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[8c0]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[4de]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[4e4]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[4c4]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[4e6]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[8c1]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[4c7]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_cpp_2
</UL>

<P><STRONG><a name="[4e0]"></a>__rt_SIGABRT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[8c2]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[4e9]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[8c3]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[8c4]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[8c5]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[8c6]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[4c9]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[4e3]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[8c7]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.text), UNUSED)

<P><STRONG><a name="[4ce]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[4e8]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[4e7]"></a>__rt_SIGABRT_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[4e5]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[4ec]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[4ed]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6cc]"></a>CRC_Lock</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32_crc_lock.o(.text.CRC_Lock), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[5e]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA2D_IRQHandler &rArr; HAL_DMA2D_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[889]"></a>DWT_Delay_Init</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, dwt_stm32_delay.o(.text.DWT_Delay_Init))
<BR><BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.EXTI0_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.EXTI3_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.EXTI4_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32h7xx_it.o(.text.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI9_5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[51e]"></a>Error_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM15_Init
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI2_Init
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_QUADSPI_Init
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspInit
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspInit
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_data()
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_startAlarmPointer()
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_startAlarmPointer()
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_startDataPointer()
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendData_last4n()
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_startDataPointer()
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_calibrationDate(unsigned char)
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_calibrationData()
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendAlarms()
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendAlarm(unsigned char*)
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendData()
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMinutes()
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setupScreen()
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_time()
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_date()
</UL>

<P><STRONG><a name="[53f]"></a>FMC_SDRAM_Init</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, stm32h7xx_ll_fmc.o(.text.FMC_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FMC_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[542]"></a>FMC_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_ll_fmc.o(.text.FMC_SDRAM_ProgramRefreshRate))
<BR><BR>[Called By]<UL><LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate
</UL>

<P><STRONG><a name="[543]"></a>FMC_SDRAM_SendCommand</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, stm32h7xx_ll_fmc.o(.text.FMC_SDRAM_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FMC_SDRAM_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SendCommand
</UL>

<P><STRONG><a name="[540]"></a>FMC_SDRAM_Timing_Init</STRONG> (Thumb, 176 bytes, Stack size 20 bytes, stm32h7xx_ll_fmc.o(.text.FMC_SDRAM_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FMC_SDRAM_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[4f0]"></a>GT9XX_ReadReg</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, touch_800x480.o(.text.GT9XX_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GT9XX_ReadReg &rArr; GT9XX_WriteHandle &rArr; Touch_IIC_WriteByte &rArr; Touch_IIC_WaitACK
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_WriteByte
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_Stop
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_Start
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_ReadByte
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_WriteHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Scan
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
</UL>

<P><STRONG><a name="[4f6]"></a>GT9XX_Reset</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, touch_800x480.o(.text.GT9XX_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = GT9XX_Reset &rArr; Touch_INT_Out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_INT_Out
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_INT_In
</UL>
<BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
</UL>

<P><STRONG><a name="[4f9]"></a>GT9XX_WriteData</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, touch_800x480.o(.text.GT9XX_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GT9XX_WriteData &rArr; GT9XX_WriteHandle &rArr; Touch_IIC_WriteByte &rArr; Touch_IIC_WaitACK
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_WriteByte
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_Stop
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_Start
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_WriteHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Scan
</UL>

<P><STRONG><a name="[4f2]"></a>GT9XX_WriteHandle</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, touch_800x480.o(.text.GT9XX_WriteHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GT9XX_WriteHandle &rArr; Touch_IIC_WriteByte &rArr; Touch_IIC_WaitACK
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_WriteByte
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_WriteData
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_ReadReg
</UL>

<P><STRONG><a name="[4fc]"></a>HAL_CRCEx_Polynomial_Set</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32h7xx_hal_crc_ex.o(.text.HAL_CRCEx_Polynomial_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[4fa]"></a>HAL_CRC_Init</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, stm32h7xx_hal_crc.o(.text.HAL_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_CRC_Init &rArr; HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_MspInit
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
</UL>

<P><STRONG><a name="[4fb]"></a>HAL_CRC_MspInit</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, crc.o(.text.HAL_CRC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_CRC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[4fe]"></a>HAL_DMA2D_CLUTLoadingCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(.text.HAL_DMA2D_CLUTLoadingCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[57d]"></a>HAL_DMA2D_ConfigLayer</STRONG> (Thumb, 180 bytes, Stack size 20 bytes, stm32h7xx_hal_dma2d.o(.text.HAL_DMA2D_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_DMA2D_ConfigLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[4ee]"></a>HAL_DMA2D_IRQHandler</STRONG> (Thumb, 318 bytes, Stack size 16 bytes, stm32h7xx_hal_dma2d.o(.text.HAL_DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA2D_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_LineEventCallback
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoadingCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[4ff]"></a>HAL_DMA2D_Init</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32h7xx_hal_dma2d.o(.text.HAL_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[4fd]"></a>HAL_DMA2D_LineEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(.text.HAL_DMA2D_LineEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[500]"></a>HAL_DMA2D_MspInit</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, dma2d.o(.text.HAL_DMA2D_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
</UL>

<P><STRONG><a name="[548]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 468 bytes, Stack size 16 bytes, stm32h7xx_hal_dma.o(.text.HAL_DMA_Abort_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>

<P><STRONG><a name="[501]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32h7xx_hal.o(.text.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
</UL>

<P><STRONG><a name="[52a]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, stm32h7xx_hal_gpio.o(.text.HAL_GPIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspDeInit
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspDeInit
</UL>

<P><STRONG><a name="[503]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[4ef]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[99]"></a>HAL_GPIO_Init</STRONG> (Thumb, 400 bytes, Stack size 44 bytes, stm32h7xx_hal_gpio.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_INT_Out
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_INT_In
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelRecognition
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_MspPostInit
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_MspInit
</UL>
<BR>[Address Reference Count : 5]<UL><LI> fmc.o(.text.HAL_SDRAM_MspInit)
<LI> touch_iic.o(.text.Touch_IIC_GPIO_Config)
<LI> ltdc.o(.text.HAL_LTDC_MspInit)
<LI> gpio.o(.text.MX_GPIO_Init)
<LI> quadspi.o(.text.HAL_QSPI_MspInit)
</UL>
<P><STRONG><a name="[5d3]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(.text.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_WaitACK
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_ReadByte
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelRecognition
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[5eb]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(.text.HAL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Write
</UL>

<P><STRONG><a name="[97]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(.text.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_WriteByte
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_ReadByte
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Write
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touch_iic.o(.text.Touch_IIC_WriteByte)
<LI> touch_800x480.o(.text.GT9XX_Reset)
<LI> main.o(.text.main)
<LI> stm32h7xx_it.o(.text.TIM2_IRQHandler)
</UL>
<P><STRONG><a name="[535]"></a>HAL_GetREVID</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text.HAL_GetREVID))
<BR><BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[502]"></a>HAL_GetTick</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ConfigSupply
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MemoryMapped
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>

<P><STRONG><a name="[52b]"></a>HAL_I2CEx_EnableFastModePlus</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, stm32h7xx_hal_i2c_ex.o(.text.HAL_I2CEx_EnableFastModePlus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_I2CEx_EnableFastModePlus
</UL>
<BR>[Called By]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspInit
</UL>

<P><STRONG><a name="[572]"></a>HAL_IncTick</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[504]"></a>HAL_Init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32h7xx_hal.o(.text.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[507]"></a>HAL_InitTick</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, stm32h7xx_hal_timebase_tim.o(.text.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[50d]"></a>HAL_LTDC_ConfigLayer</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, stm32h7xx_hal_ltdc.o(.text.HAL_LTDC_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[511]"></a>HAL_LTDC_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(.text.HAL_LTDC_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[510]"></a>HAL_LTDC_IRQHandler</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(.text.HAL_LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; touchgfx::HAL::swapFrameBuffers() &rArr; OUTLINED_FUNCTION_4 &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ReloadEventCallback
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ER_IRQHandler
</UL>

<P><STRONG><a name="[514]"></a>HAL_LTDC_Init</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(.text.HAL_LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[512]"></a>HAL_LTDC_LineEventCallback</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(.text.HAL_LTDC_LineEventCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_LTDC_LineEventCallback &rArr; touchgfx::HAL::swapFrameBuffers() &rArr; OUTLINED_FUNCTION_4 &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ProgramLineEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[515]"></a>HAL_LTDC_MspInit</STRONG> (Thumb, 336 bytes, Stack size 256 bytes, ltdc.o(.text.HAL_LTDC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = HAL_LTDC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
</UL>

<P><STRONG><a name="[516]"></a>HAL_LTDC_ProgramLineEvent</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(.text.HAL_LTDC_ProgramLineEvent))
<BR><BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[513]"></a>HAL_LTDC_ReloadEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(.text.HAL_LTDC_ReloadEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[508]"></a>HAL_MspInit</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, stm32h7xx_hal_msp.o(.text.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[550]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_QUADSPI_Init
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspDeInit
</UL>

<P><STRONG><a name="[a1]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_MspInit
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio.o(.text.MX_GPIO_Init)
</UL>
<P><STRONG><a name="[a0]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_MspInit
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio.o(.text.MX_GPIO_Init)
</UL>
<P><STRONG><a name="[505]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[520]"></a>HAL_PWREx_ConfigSupply</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32h7xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigSupply))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_PWREx_ConfigSupply
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[5d6]"></a>HAL_PWR_EnableBkUpAccess</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess))
<BR><BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[521]"></a>HAL_QSPI_AutoPolling</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, stm32h7xx_hal_qspi.o(.text.HAL_QSPI_AutoPolling))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_QSPI_AutoPolling &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_WriteEnable
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_AutoPollingMemReady
</UL>

<P><STRONG><a name="[524]"></a>HAL_QSPI_Command</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, stm32h7xx_hal_qspi.o(.text.HAL_QSPI_Command))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_QSPI_Command &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_WriteEnable
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Write
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_ResetMemory
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Read
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EraseSector
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnterFourBytesAddress
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DummyCyclesCfg
</UL>

<P><STRONG><a name="[525]"></a>HAL_QSPI_DeInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32h7xx_hal_qspi.o(.text.HAL_QSPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_QSPI_DeInit &rArr; HAL_QSPI_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DeInit
</UL>

<P><STRONG><a name="[527]"></a>HAL_QSPI_Init</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, stm32h7xx_hal_qspi.o(.text.HAL_QSPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspInit
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_QUADSPI_Init
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
</UL>

<P><STRONG><a name="[529]"></a>HAL_QSPI_MemoryMapped</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, stm32h7xx_hal_qspi.o(.text.HAL_QSPI_MemoryMapped))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_QSPI_MemoryMapped &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnableMemoryMappedMode
</UL>

<P><STRONG><a name="[526]"></a>HAL_QSPI_MspDeInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, quadspi.o(.text.HAL_QSPI_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_QSPI_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_DeInit
</UL>

<P><STRONG><a name="[528]"></a>HAL_QSPI_MspInit</STRONG> (Thumb, 244 bytes, Stack size 256 bytes, quadspi.o(.text.HAL_QSPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_EnableFastModePlus
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
</UL>

<P><STRONG><a name="[52c]"></a>HAL_QSPI_Receive</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, stm32h7xx_hal_qspi.o(.text.HAL_QSPI_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_QSPI_Receive &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Read
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DummyCyclesCfg
</UL>

<P><STRONG><a name="[52d]"></a>HAL_QSPI_Transmit</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, stm32h7xx_hal_qspi.o(.text.HAL_QSPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_QSPI_Transmit &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Write
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DummyCyclesCfg
</UL>

<P><STRONG><a name="[52e]"></a>HAL_RCCEx_GetD3PCLK1Freq</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetD3PCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCCEx_GetD3PCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[5de]"></a>HAL_RCCEx_GetPLL2ClockFreq</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL2ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCCEx_GetPLL2ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[5df]"></a>HAL_RCCEx_GetPLL3ClockFreq</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL3ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCCEx_GetPLL3ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[51d]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 2416 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphCommonClock_Config
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspInit
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspInit
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[532]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 532 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[509]"></a>HAL_RCC_GetClockConfig</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig))
<BR><BR>[Called By]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[52f]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD3PCLK1Freq
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
</UL>

<P><STRONG><a name="[50a]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCC_GetPCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[533]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCC_GetPCLK2Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[506]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[534]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1278 bytes, Stack size 24 bytes, stm32h7xx_hal_rcc.o(.text.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetREVID
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[60e]"></a>HAL_RTC_GetDate</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32h7xx_hal_rtc.o(.text.HAL_RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_calibrationDate(unsigned char)
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarmShowing()
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendAlarm(unsigned char*)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::updateDate()
</UL>

<P><STRONG><a name="[60d]"></a>HAL_RTC_GetTime</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, stm32h7xx_hal_rtc.o(.text.HAL_RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_calibrationDate(unsigned char)
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarmShowing()
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendAlarm(unsigned char*)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::updateDate()
</UL>

<P><STRONG><a name="[536]"></a>HAL_RTC_Init</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, stm32h7xx_hal_rtc.o(.text.HAL_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = HAL_RTC_Init &rArr; HAL_RTC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[537]"></a>HAL_RTC_MspInit</STRONG> (Thumb, 72 bytes, Stack size 200 bytes, rtc.o(.text.HAL_RTC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = HAL_RTC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
</UL>
<BR>[Called By]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[53a]"></a>HAL_RTC_SetDate</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, stm32h7xx_hal_rtc.o(.text.HAL_RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RTC_SetDate &rArr; RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setupScreen()
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_date()
</UL>

<P><STRONG><a name="[53b]"></a>HAL_RTC_SetTime</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, stm32h7xx_hal_rtc.o(.text.HAL_RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RTC_SetTime &rArr; RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMinutes()
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_time()
</UL>

<P><STRONG><a name="[53c]"></a>HAL_RTC_WaitForSynchro</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32h7xx_hal_rtc.o(.text.HAL_RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
</UL>

<P><STRONG><a name="[53d]"></a>HAL_SDRAM_Init</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32h7xx_hal_sdram.o(.text.HAL_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = HAL_SDRAM_Init &rArr; HAL_SDRAM_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspInit
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Timing_Init
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
</UL>

<P><STRONG><a name="[53e]"></a>HAL_SDRAM_MspInit</STRONG> (Thumb, 256 bytes, Stack size 256 bytes, fmc.o(.text.HAL_SDRAM_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = HAL_SDRAM_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[541]"></a>HAL_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32h7xx_hal_sdram.o(.text.HAL_SDRAM_ProgramRefreshRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_SDRAM_ProgramRefreshRate
</UL>
<BR>[Calls]<UL><LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_ProgramRefreshRate
</UL>
<BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
</UL>

<P><STRONG><a name="[9f]"></a>HAL_SDRAM_SendCommand</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32h7xx_hal_sdram.o(.text.HAL_SDRAM_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_SDRAM_SendCommand &rArr; FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_SendCommand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fmc.o(.text.MX_FMC_Init)
</UL>
<P><STRONG><a name="[544]"></a>HAL_SPI_DeInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32h7xx_hal_spi.o(.text.HAL_SPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_SPI_DeInit &rArr; HAL_SPI_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_RxCpltCallback
</UL>

<P><STRONG><a name="[54b]"></a>HAL_SPI_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_spi.o(.text.HAL_SPI_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAAbortOnError
</UL>

<P><STRONG><a name="[546]"></a>HAL_SPI_IRQHandler</STRONG> (Thumb, 540 bytes, Stack size 24 bytes, stm32h7xx_hal_spi.o(.text.HAL_SPI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = HAL_SPI_IRQHandler &rArr; HAL_SPI_RxCpltCallback &rArr; MX_SPI1_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_RxCpltCallback
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxRxCpltCallback
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_SuspendCallback
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>

<P><STRONG><a name="[54e]"></a>HAL_SPI_Init</STRONG> (Thumb, 392 bytes, Stack size 32 bytes, stm32h7xx_hal_spi.o(.text.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI2_Init
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
</UL>

<P><STRONG><a name="[545]"></a>HAL_SPI_MspDeInit</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, spi.o(.text.HAL_SPI_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_SPI_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
</UL>

<P><STRONG><a name="[54f]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 260 bytes, Stack size 232 bytes, spi.o(.text.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[551]"></a>HAL_SPI_Receive_IT</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, stm32h7xx_hal_spi.o(.text.HAL_SPI_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SPI_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_RxCpltCallback
</UL>

<P><STRONG><a name="[54d]"></a>HAL_SPI_RxCpltCallback</STRONG> (Thumb, 340 bytes, Stack size 24 bytes, main.o(.text.HAL_SPI_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = HAL_SPI_RxCpltCallback &rArr; MX_SPI1_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive_IT
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>

<P><STRONG><a name="[547]"></a>HAL_SPI_SuspendCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_spi.o(.text.HAL_SPI_SuspendCallback))
<BR><BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>

<P><STRONG><a name="[553]"></a>HAL_SPI_Transmit</STRONG> (Thumb, 562 bytes, Stack size 32 bytes, stm32h7xx_hal_spi.o(.text.HAL_SPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::sendConfig()
</UL>

<P><STRONG><a name="[54c]"></a>HAL_SPI_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_spi.o(.text.HAL_SPI_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>

<P><STRONG><a name="[54a]"></a>HAL_SPI_TxRxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>

<P><STRONG><a name="[563]"></a>HAL_TIMEx_Break2Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback))
<BR><BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[562]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[55f]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback))
<BR><BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[588]"></a>HAL_TIMEx_ConfigBreakDeadTime</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIMEx_ConfigBreakDeadTime
</UL>
<BR>[Called By]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM15_Init
</UL>

<P><STRONG><a name="[587]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32h7xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM15_Init
</UL>

<P><STRONG><a name="[50b]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM15_Init
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[555]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, tim.o(.text.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[50c]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[557]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 288 bytes, Stack size 8 bytes, stm32h7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_ConfigClockSource &rArr; TIM_TI1_ConfigInputStage
</UL>
<BR>[Calls]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_ConfigInputStage
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM15_Init
</UL>

<P><STRONG><a name="[55a]"></a>HAL_TIM_Encoder_Init</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HAL_TIM_Encoder_Init &rArr; HAL_TIM_Encoder_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_MspInit
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[55b]"></a>HAL_TIM_Encoder_MspInit</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, tim.o(.text.HAL_TIM_Encoder_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_TIM_Encoder_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_Init
</UL>

<P><STRONG><a name="[55c]"></a>HAL_TIM_Encoder_Start_IT</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_Encoder_Start_IT &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[560]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.text.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[55e]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 394 bytes, Stack size 8 bytes, stm32h7xx_hal_tim.o(.text.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_Break2Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[567]"></a>HAL_TIM_MspPostInit</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, tim.o(.text.HAL_TIM_MspPostInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_TIM_MspPostInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM15_Init
</UL>

<P><STRONG><a name="[565]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[568]"></a>HAL_TIM_PWM_ConfigChannel</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_TIM_PWM_ConfigChannel &rArr; TIM_OC2_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2_SetConfig
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC6_SetConfig
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC5_SetConfig
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4_SetConfig
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3_SetConfig
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM15_Init
</UL>

<P><STRONG><a name="[56f]"></a>HAL_TIM_PWM_Init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_PWM_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM15_Init
</UL>

<P><STRONG><a name="[570]"></a>HAL_TIM_PWM_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
</UL>

<P><STRONG><a name="[566]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[571]"></a>HAL_TIM_PWM_Start</STRONG> (Thumb, 304 bytes, Stack size 8 bytes, stm32h7xx_hal_tim.o(.text.HAL_TIM_PWM_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[561]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(.text.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Calls]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[564]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(.text.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[591]"></a>HAL_UARTEx_DisableFifoMode</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_DisableFifoMode))
<BR><BR>[Called By]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[573]"></a>HAL_UARTEx_SetRxFifoThreshold</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_SetRxFifoThreshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_UARTEx_SetRxFifoThreshold &rArr; UARTEx_SetNbDataToProcess
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEx_SetNbDataToProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[575]"></a>HAL_UARTEx_SetTxFifoThreshold</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, stm32h7xx_hal_uart_ex.o(.text.HAL_UARTEx_SetTxFifoThreshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_UARTEx_SetTxFifoThreshold &rArr; UARTEx_SetNbDataToProcess
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEx_SetNbDataToProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[576]"></a>HAL_UART_Init</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, stm32h7xx_hal_uart.o(.text.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[577]"></a>HAL_UART_MspInit</STRONG> (Thumb, 128 bytes, Stack size 240 bytes, usart.o(.text.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.LTDC_ER_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LTDC_ER_IRQHandler &rArr; HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; touchgfx::HAL::swapFrameBuffers() &rArr; OUTLINED_FUNCTION_4 &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>LTDC_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LTDC_IRQHandler &rArr; HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; touchgfx::HAL::swapFrameBuffers() &rArr; OUTLINED_FUNCTION_4 &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[57b]"></a>MX_CRC_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, crc.o(.text.MX_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MX_CRC_Init &rArr; HAL_CRC_Init &rArr; HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57c]"></a>MX_DMA2D_Init</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, dma2d.o(.text.MX_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MX_DMA2D_Init &rArr; HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_ConfigLayer
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57e]"></a>MX_FMC_Init</STRONG> (Thumb, 240 bytes, Stack size 80 bytes, fmc.o(.text.MX_FMC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = MX_FMC_Init &rArr; HAL_SDRAM_Init &rArr; HAL_SDRAM_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57f]"></a>MX_GPIO_Init</STRONG> (Thumb, 504 bytes, Stack size 64 bytes, gpio.o(.text.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MX_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[580]"></a>MX_LTDC_Init</STRONG> (Thumb, 168 bytes, Stack size 72 bytes, ltdc.o(.text.MX_LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = MX_LTDC_Init &rArr; HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[581]"></a>MX_QUADSPI_Init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, quadspi.o(.text.MX_QUADSPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = MX_QUADSPI_Init &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnableMemoryMappedMode
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[584]"></a>MX_RTC_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, rtc.o(.text.MX_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = MX_RTC_Init &rArr; HAL_RTC_Init &rArr; HAL_RTC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[552]"></a>MX_SPI1_Init</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, spi.o(.text.MX_SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = MX_SPI1_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_RxCpltCallback
</UL>

<P><STRONG><a name="[585]"></a>MX_SPI2_Init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, spi.o(.text.MX_SPI2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = MX_SPI2_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[586]"></a>MX_TIM15_Init</STRONG> (Thumb, 208 bytes, Stack size 120 bytes, tim.o(.text.MX_TIM15_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = MX_TIM15_Init &rArr; HAL_TIM_MspPostInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_MspPostInit
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_ConfigBreakDeadTime
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[589]"></a>MX_TIM2_Init</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, tim.o(.text.MX_TIM2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MX_TIM2_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58a]"></a>MX_TIM3_Init</STRONG> (Thumb, 100 bytes, Stack size 56 bytes, tim.o(.text.MX_TIM3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = MX_TIM3_Init &rArr; HAL_TIM_Encoder_Init &rArr; HAL_TIM_Encoder_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_Init
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58b]"></a>MX_TIM4_Init</STRONG> (Thumb, 156 bytes, Stack size 64 bytes, tim.o(.text.MX_TIM4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = MX_TIM4_Init &rArr; HAL_TIM_MspPostInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_MspPostInit
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58c]"></a>MX_TouchGFX_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_touchgfx.o(.text.MX_TouchGFX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = MX_TouchGFX_Init &rArr; touchgfx_init &rArr; touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned) &rArr; touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58e]"></a>MX_TouchGFX_Process</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_touchgfx.o(.text.MX_TouchGFX_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MX_TouchGFX_Process &rArr; touchgfx_taskEntry &rArr; touchgfx::HAL::backPorchExited() &rArr; touchgfx::HAL::swapFrameBuffers() &rArr; OUTLINED_FUNCTION_4 &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[590]"></a>MX_USART2_UART_Init</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, usart.o(.text.MX_USART2_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = MX_USART2_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetTxFifoThreshold
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetRxFifoThreshold
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_DisableFifoMode
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5d2]"></a>PanelRecognition</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, touch_800x480.o(.text.PanelRecognition))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = PanelRecognition &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_Delay
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5d4]"></a>PeriphCommonClock_Config</STRONG> (Thumb, 48 bytes, Stack size 200 bytes, main.o(.text.PeriphCommonClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = PeriphCommonClock_Config &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32h7xx_hal_rtc.o(.text.RTC_ByteToBcd2))
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_rtc.o(.text.HAL_RTC_SetTime)
</UL>
<P><STRONG><a name="[538]"></a>RTC_EnterInitMode</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, stm32h7xx_hal_rtc.o(.text.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>

<P><STRONG><a name="[539]"></a>RTC_ExitInitMode</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32h7xx_hal_rtc.o(.text.RTC_ExitInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>

<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.SPI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = SPI1_IRQHandler &rArr; HAL_SPI_IRQHandler &rArr; HAL_SPI_RxCpltCallback &rArr; MX_SPI1_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5d5]"></a>SystemClock_Config</STRONG> (Thumb, 240 bytes, Stack size 128 bytes, main.o(.text.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_EnableBkUpAccess
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ConfigSupply
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetREVID
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>SystemInit</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, system_stm32h7xx.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 744 bytes, Stack size 24 bytes, stm32h7xx_it.o(.text.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM2_IRQHandler &rArr; HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM3_IRQHandler &rArr; HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.TIM6_DAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM6_DAC_IRQHandler &rArr; HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[556]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_Init
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[55d]"></a>TIM_CCxChannelCmd</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32h7xx_hal_tim.o(.text.TIM_CCxChannelCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_Start_IT
</UL>

<P><STRONG><a name="[56a]"></a>TIM_OC2_SetConfig</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, stm32h7xx_hal_tim.o(.text.TIM_OC2_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[5d7]"></a>Touch_IIC_ACK</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, touch_iic.o(.text.Touch_IIC_ACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Touch_IIC_ACK
</UL>
<BR>[Called By]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_ReadByte
</UL>

<P><STRONG><a name="[98]"></a>Touch_IIC_Delay</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, touch_iic.o(.text.Touch_IIC_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Touch_IIC_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_WriteByte
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_ReadByte
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelRecognition
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touch_iic.o(.text.Touch_IIC_WaitACK)
<LI> touch_800x480.o(.text.GT9XX_Reset)
</UL>
<P><STRONG><a name="[5db]"></a>Touch_IIC_GPIO_Config</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, touch_iic.o(.text.Touch_IIC_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Touch_IIC_GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
</UL>

<P><STRONG><a name="[5d8]"></a>Touch_IIC_NoACK</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, touch_iic.o(.text.Touch_IIC_NoACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Touch_IIC_NoACK
</UL>
<BR>[Called By]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_ReadByte
</UL>

<P><STRONG><a name="[4f4]"></a>Touch_IIC_ReadByte</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, touch_iic.o(.text.Touch_IIC_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Touch_IIC_ReadByte &rArr; Touch_IIC_ACK
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_NoACK
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_ACK
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_Delay
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_ReadReg
</UL>

<P><STRONG><a name="[4f1]"></a>Touch_IIC_Start</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, touch_iic.o(.text.Touch_IIC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Touch_IIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_WriteHandle
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_WriteData
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_ReadReg
</UL>

<P><STRONG><a name="[4f5]"></a>Touch_IIC_Stop</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, touch_iic.o(.text.Touch_IIC_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Touch_IIC_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_WriteData
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_ReadReg
</UL>

<P><STRONG><a name="[5d9]"></a>Touch_IIC_WaitACK</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, touch_iic.o(.text.Touch_IIC_WaitACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Touch_IIC_WaitACK
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_WriteByte
</UL>

<P><STRONG><a name="[4f3]"></a>Touch_IIC_WriteByte</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, touch_iic.o(.text.Touch_IIC_WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Touch_IIC_WriteByte &rArr; Touch_IIC_WaitACK
</UL>
<BR>[Calls]<UL><LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_WaitACK
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_Delay
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_WriteHandle
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_WriteData
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_ReadReg
</UL>

<P><STRONG><a name="[4f8]"></a>Touch_INT_In</STRONG> (Thumb, 28 bytes, Stack size 32 bytes, touch_iic.o(.text.Touch_INT_In))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Touch_INT_In &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_Reset
</UL>

<P><STRONG><a name="[4f7]"></a>Touch_INT_Out</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, touch_iic.o(.text.Touch_INT_Out))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Touch_INT_Out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_Reset
</UL>

<P><STRONG><a name="[5da]"></a>Touch_Init</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, touch_800x480.o(.text.Touch_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Touch_Init &rArr; GT9XX_Reset &rArr; Touch_INT_Out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_IIC_GPIO_Config
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelRecognition
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_Reset
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5dc]"></a>Touch_Scan</STRONG> (Thumb, 180 bytes, Stack size 64 bytes, touch_800x480.o(.text.Touch_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Touch_Scan &rArr; GT9XX_WriteData &rArr; GT9XX_WriteHandle &rArr; Touch_IIC_WriteByte &rArr; Touch_IIC_WaitACK
</UL>
<BR>[Calls]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_WriteData
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9XX_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::sampleTouch(int&, int&)
</UL>

<P><STRONG><a name="[579]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, stm32h7xx_hal_uart.o(.text.UART_AdvFeatureConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[57a]"></a>UART_CheckIdleState</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, stm32h7xx_hal_uart.o(.text.UART_CheckIdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UART_CheckIdleState &rArr; UART_WaitOnFlagUntilTimeout &rArr; UART_EndRxTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[578]"></a>UART_SetConfig</STRONG> (Thumb, 916 bytes, Stack size 32 bytes, stm32h7xx_hal_uart.o(.text.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL3ClockFreq
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL2ClockFreq
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD3PCLK1Freq
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[5dd]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, stm32h7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_WaitOnFlagUntilTimeout &rArr; UART_EndRxTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5e2]"></a>W25Q256FV_QSPI_AutoPollingMemReady</STRONG> (Thumb, 74 bytes, Stack size 88 bytes, w25q256fv_qspi.o(.text.W25Q256FV_QSPI_AutoPollingMemReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = W25Q256FV_QSPI_AutoPollingMemReady &rArr; HAL_QSPI_AutoPolling &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
</UL>
<BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Write
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_ResetMemory
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EraseSector
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnterFourBytesAddress
</UL>

<P><STRONG><a name="[5e3]"></a>W25Q256FV_QSPI_DeInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, w25q256fv_qspi.o(.text.W25Q256FV_QSPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = W25Q256FV_QSPI_DeInit &rArr; HAL_QSPI_DeInit &rArr; HAL_QSPI_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_data()
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_startAlarmPointer()
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_startAlarmPointer()
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_startDataPointer()
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendData_last4n()
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_startDataPointer()
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_calibrationDate(unsigned char)
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_calibrationData()
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendAlarms()
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendAlarm(unsigned char*)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendData()
</UL>

<P><STRONG><a name="[5e4]"></a>W25Q256FV_QSPI_DummyCyclesCfg</STRONG> (Thumb, 142 bytes, Stack size 80 bytes, w25q256fv_qspi.o(.text.W25Q256FV_QSPI_DummyCyclesCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = W25Q256FV_QSPI_DummyCyclesCfg &rArr; W25Q256FV_QSPI_WriteEnable &rArr; HAL_QSPI_AutoPolling &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_WriteEnable
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
</UL>

<P><STRONG><a name="[583]"></a>W25Q256FV_QSPI_EnableMemoryMappedMode</STRONG> (Thumb, 68 bytes, Stack size 72 bytes, w25q256fv_qspi.o(.text.W25Q256FV_QSPI_EnableMemoryMappedMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = W25Q256FV_QSPI_EnableMemoryMappedMode &rArr; HAL_QSPI_MemoryMapped &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MemoryMapped
</UL>
<BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_QUADSPI_Init
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_data()
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_startAlarmPointer()
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_startAlarmPointer()
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_startDataPointer()
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendData_last4n()
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_startDataPointer()
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_calibrationDate(unsigned char)
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_calibrationData()
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendAlarms()
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendAlarm(unsigned char*)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendData()
</UL>

<P><STRONG><a name="[5e6]"></a>W25Q256FV_QSPI_EnterFourBytesAddress</STRONG> (Thumb, 78 bytes, Stack size 64 bytes, w25q256fv_qspi.o(.text.W25Q256FV_QSPI_EnterFourBytesAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = W25Q256FV_QSPI_EnterFourBytesAddress &rArr; W25Q256FV_QSPI_WriteEnable &rArr; HAL_QSPI_AutoPolling &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_WriteEnable
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_AutoPollingMemReady
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
</UL>

<P><STRONG><a name="[5e7]"></a>W25Q256FV_QSPI_EraseSector</STRONG> (Thumb, 124 bytes, Stack size 80 bytes, w25q256fv_qspi.o(.text.W25Q256FV_QSPI_EraseSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = W25Q256FV_QSPI_EraseSector &rArr; W25Q256FV_QSPI_WriteEnable &rArr; HAL_QSPI_AutoPolling &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_WriteEnable
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_AutoPollingMemReady
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_startAlarmPointer()
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_startDataPointer()
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_calibrationDate(unsigned char)
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendAlarm(unsigned char*)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendData()
</UL>

<P><STRONG><a name="[582]"></a>W25Q256FV_QSPI_Init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, w25q256fv_qspi.o(.text.W25Q256FV_QSPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_WriteEnable
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_ResetMemory
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnterFourBytesAddress
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DummyCyclesCfg
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_AutoPollingMemReady
</UL>
<BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_QUADSPI_Init
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_data()
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_startAlarmPointer()
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_startAlarmPointer()
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_startDataPointer()
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendData_last4n()
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_startDataPointer()
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_calibrationDate(unsigned char)
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_calibrationData()
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendAlarms()
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendAlarm(unsigned char*)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendData()
</UL>

<P><STRONG><a name="[5e9]"></a>W25Q256FV_QSPI_Read</STRONG> (Thumb, 114 bytes, Stack size 72 bytes, w25q256fv_qspi.o(.text.W25Q256FV_QSPI_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = W25Q256FV_QSPI_Read &rArr; HAL_QSPI_Receive &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_data()
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_startAlarmPointer()
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendData_last4n()
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_startDataPointer()
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_calibrationData()
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::findNextEmptyQSPI(unsigned, unsigned, unsigned)
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendAlarms()
</UL>

<P><STRONG><a name="[5e8]"></a>W25Q256FV_QSPI_ResetMemory</STRONG> (Thumb, 88 bytes, Stack size 64 bytes, w25q256fv_qspi.o(.text.W25Q256FV_QSPI_ResetMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = W25Q256FV_QSPI_ResetMemory &rArr; W25Q256FV_QSPI_AutoPollingMemReady &rArr; HAL_QSPI_AutoPolling &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_AutoPollingMemReady
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
</UL>

<P><STRONG><a name="[5ea]"></a>W25Q256FV_QSPI_Write</STRONG> (Thumb, 228 bytes, Stack size 96 bytes, w25q256fv_qspi.o(.text.W25Q256FV_QSPI_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = W25Q256FV_QSPI_Write &rArr; W25Q256FV_QSPI_WriteEnable &rArr; HAL_QSPI_AutoPolling &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_WriteEnable
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_AutoPollingMemReady
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_startAlarmPointer()
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_startDataPointer()
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_calibrationDate(unsigned char)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_ventMinutes()
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendAlarm(unsigned char*)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_ventHours()
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendData()
</UL>

<P><STRONG><a name="[5e5]"></a>W25Q256FV_QSPI_WriteEnable</STRONG> (Thumb, 104 bytes, Stack size 96 bytes, w25q256fv_qspi.o(.text.W25Q256FV_QSPI_WriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = W25Q256FV_QSPI_WriteEnable &rArr; HAL_QSPI_AutoPolling &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
</UL>
<BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Write
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EraseSector
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnterFourBytesAddress
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DummyCyclesCfg
</UL>

<P><STRONG><a name="[5f2]"></a>getFont_verdana_10_4bpp()</STRONG> (Thumb, 108 bytes, Stack size 64 bytes, table_verdana_10_4bpp.o(.text._Z23getFont_verdana_10_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = getFont_verdana_10_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[5f1]"></a>getFont_verdana_40_4bpp()</STRONG> (Thumb, 108 bytes, Stack size 64 bytes, table_verdana_40_4bpp.o(.text._Z23getFont_verdana_40_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = getFont_verdana_40_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[5f9]"></a>getFont_verdanab_12_4bpp()</STRONG> (Thumb, 108 bytes, Stack size 64 bytes, table_verdanab_12_4bpp.o(.text._Z24getFont_verdanab_12_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = getFont_verdanab_12_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[5f3]"></a>getFont_verdanab_16_4bpp()</STRONG> (Thumb, 108 bytes, Stack size 64 bytes, table_verdanab_16_4bpp.o(.text._Z24getFont_verdanab_16_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = getFont_verdanab_16_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[5ef]"></a>getFont_verdanab_20_4bpp()</STRONG> (Thumb, 104 bytes, Stack size 64 bytes, table_verdanab_20_4bpp.o(.text._Z24getFont_verdanab_20_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = getFont_verdanab_20_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[5fc]"></a>getFont_verdanab_25_4bpp()</STRONG> (Thumb, 108 bytes, Stack size 64 bytes, table_verdanab_25_4bpp.o(.text._Z24getFont_verdanab_25_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = getFont_verdanab_25_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[5f6]"></a>getFont_verdanab_30_4bpp()</STRONG> (Thumb, 108 bytes, Stack size 64 bytes, table_verdanab_30_4bpp.o(.text._Z24getFont_verdanab_30_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = getFont_verdanab_30_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[5fb]"></a>getFont_verdanab_34_4bpp()</STRONG> (Thumb, 108 bytes, Stack size 64 bytes, table_verdanab_34_4bpp.o(.text._Z24getFont_verdanab_34_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = getFont_verdanab_34_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[5fa]"></a>getFont_verdanab_36_4bpp()</STRONG> (Thumb, 108 bytes, Stack size 64 bytes, table_verdanab_36_4bpp.o(.text._Z24getFont_verdanab_36_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = getFont_verdanab_36_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[5f7]"></a>getFont_verdanab_40_4bpp()</STRONG> (Thumb, 104 bytes, Stack size 64 bytes, table_verdanab_40_4bpp.o(.text._Z24getFont_verdanab_40_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = getFont_verdanab_40_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[5f5]"></a>getFont_verdanai_20_4bpp()</STRONG> (Thumb, 108 bytes, Stack size 64 bytes, table_verdanai_20_4bpp.o(.text._Z24getFont_verdanai_20_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = getFont_verdanai_20_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[5f4]"></a>getFont_AGENCYR_TTF_16_4bpp()</STRONG> (Thumb, 104 bytes, Stack size 64 bytes, table_agencyr_ttf_16_4bpp.o(.text._Z27getFont_AGENCYR_TTF_16_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = getFont_AGENCYR_TTF_16_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[5f0]"></a>getFont_AGENCYR_TTF_20_4bpp()</STRONG> (Thumb, 104 bytes, Stack size 64 bytes, table_agencyr_ttf_20_4bpp.o(.text._Z27getFont_AGENCYR_TTF_20_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = getFont_AGENCYR_TTF_20_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[5fd]"></a>getFont_DUBAI_BOLD_TTF_20_4bpp()</STRONG> (Thumb, 112 bytes, Stack size 64 bytes, table_dubai_bold_ttf_20_4bpp.o(.text._Z30getFont_DUBAI_BOLD_TTF_20_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = getFont_DUBAI_BOLD_TTF_20_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[5fe]"></a>getFont_DUBAI_BOLD_TTF_26_4bpp()</STRONG> (Thumb, 112 bytes, Stack size 64 bytes, table_dubai_bold_ttf_26_4bpp.o(.text._Z30getFont_DUBAI_BOLD_TTF_26_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = getFont_DUBAI_BOLD_TTF_26_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[5ff]"></a>getFont_DUBAI_BOLD_TTF_30_4bpp()</STRONG> (Thumb, 116 bytes, Stack size 64 bytes, table_dubai_bold_ttf_30_4bpp.o(.text._Z30getFont_DUBAI_BOLD_TTF_30_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = getFont_DUBAI_BOLD_TTF_30_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[5f8]"></a>getFont_DUBAI_LIGHT_TTF_20_4bpp()</STRONG> (Thumb, 112 bytes, Stack size 64 bytes, table_dubai_light_ttf_20_4bpp.o(.text._Z31getFont_DUBAI_LIGHT_TTF_20_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = getFont_DUBAI_LIGHT_TTF_20_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[181]"></a>screenView::click_CPAP()</STRONG> (Thumb, 668 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView10click_CPAPEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_CPAP() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[136]"></a>screenView::click_FiO2()</STRONG> (Thumb, 740 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView10click_FiO2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = screenView::click_FiO2() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[128]"></a>screenView::click_PEEP()</STRONG> (Thumb, 776 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView10click_PEEPEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_PEEP() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[171]"></a>screenView::click_date()</STRONG> (Thumb, 716 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView10click_dateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = screenView::click_date() &rArr; touchgfx::DigitalClock::setColor(touchgfx::colortype) &rArr; touchgfx::TextAreaWithWildcardBase::invalidateContent() const &rArr; touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setColor(touchgfx::colortype)
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[16d]"></a>screenView::click_flow()</STRONG> (Thumb, 660 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView10click_flowEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_flow() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[162]"></a>screenView::click_mask()</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView10click_maskEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = screenView::click_mask()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[12c]"></a>screenView::click_mode()</STRONG> (Thumb, 3384 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView10click_modeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = screenView::click_mode() &rArr; screenView::disableVentSettingChoose() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[15b]"></a>screenView::click_next()</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, screenview.o(.text._ZN10screenView10click_nextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = screenView::click_next()
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[13c]"></a>screenView::click_time()</STRONG> (Thumb, 716 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView10click_timeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = screenView::click_time() &rArr; touchgfx::DigitalClock::setColor(touchgfx::colortype) &rArr; touchgfx::TextAreaWithWildcardBase::invalidateContent() const &rArr; touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentMinute() const
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentHour() const
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setColor(touchgfx::colortype)
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[605]"></a>screenView::handleCPAP()</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView10handleCPAPEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleCPAP() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[606]"></a>screenView::handleFiO2()</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView10handleFiO2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleFiO2() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[607]"></a>screenView::handleFlow()</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView10handleFlowEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleFlow() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[608]"></a>screenView::handlePEEP()</STRONG> (Thumb, 368 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView10handlePEEPEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handlePEEP() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[609]"></a>screenView::handleSens()</STRONG> (Thumb, 416 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView10handleSensEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = screenView::handleSens() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[60a]"></a>screenView::handleYear()</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView10handleYearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = screenView::handleYear() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[60b]"></a>screenView::sendConfig()</STRONG> (Thumb, 1248 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView10sendConfigEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = screenView::sendConfig() &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::startVent()
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_backwardTestScreen()
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_forwardTestScreen()
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowSensor_continue_button()
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_tightness_continue_button()
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_back_flowSensorScreen()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_back_tightnessScreen()
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTightnessTestScreen()
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowSensor_button()
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_tightness_button()
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backVentSetting()
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backSetting()
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backAlarmSc()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_yesAlert()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_confirm()
</UL>

<P><STRONG><a name="[60c]"></a>screenView::updateDate()</STRONG> (Thumb, 436 bytes, Stack size 48 bytes, screenview.o(.text._ZN10screenView10updateDateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = screenView::updateDate() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setupScreen()
</UL>

<P><STRONG><a name="[168]"></a>screenView::click_Psupp()</STRONG> (Thumb, 636 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView11click_PsuppEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_Psupp() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[132]"></a>screenView::click_adult()</STRONG> (Thumb, 388 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView11click_adultEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = screenView::click_adult() &rArr; screenView::updateConfigsWildCards()
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveTo(short, short)
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::updateConfigsWildCards()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[139]"></a>screenView::click_alarm()</STRONG> (Thumb, 700 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView11click_alarmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = screenView::click_alarm() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[13e]"></a>screenView::click_audio()</STRONG> (Thumb, 532 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView11click_audioEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = screenView::click_audio() &rArr; touchgfx::DigitalClock::setColor(touchgfx::colortype) &rArr; touchgfx::TextAreaWithWildcardBase::invalidateContent() const &rArr; touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setColor(touchgfx::colortype)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[610]"></a>screenView::handleAlarm()</STRONG> (Thumb, 7332 bytes, Stack size 48 bytes, screenview.o(.text._ZN10screenView11handleAlarmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = screenView::handleAlarm() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[611]"></a>screenView::handleAlert()</STRONG> (Thumb, 312 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView11handleAlertEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleAlert() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[612]"></a>screenView::handleAudio()</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView11handleAudioEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = screenView::handleAudio() &rArr; touchgfx::CanvasWidget::invalidate() const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValue(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[613]"></a>screenView::handleHours()</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView11handleHoursEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = screenView::handleHours() &rArr; touchgfx::CanvasWidget::invalidate() const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentMinute() const
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentHour24() const
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentHour() const
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[615]"></a>screenView::handleMonth()</STRONG> (Thumb, 324 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView11handleMonthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = screenView::handleMonth() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[616]"></a>screenView::handlePsupp()</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView11handlePsuppEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handlePsupp() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[617]"></a>screenView::handleRRMax()</STRONG> (Thumb, 384 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView11handleRRMaxEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleRRMax() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[618]"></a>screenView::handleRRMin()</STRONG> (Thumb, 392 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView11handleRRMinEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleRRMin() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[619]"></a>screenView::setLanguage()</STRONG> (Thumb, 4312 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView11setLanguageEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = screenView::setLanguage() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_english()
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_arabic()
</UL>

<P><STRONG><a name="[11c]"></a>screenView::setupScreen()</STRONG> (Thumb, 5320 bytes, Stack size 48 bytes, screenview.o(.text._ZN10screenView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = screenView::setupScreen() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::forceState(bool)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::setValue(int)
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::setupScreen()
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::updateConfigsWildCards()
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendData_last4n()
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_calibrationData()
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setCalibrationData()
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendAlarms()
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::updateDate()
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[144]"></a>screenView::click_arabic()</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView12click_arabicEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = screenView::click_arabic() &rArr; screenView::setLanguage() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setLanguage()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[138]"></a>screenView::click_device()</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView12click_deviceEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::click_device() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[15c]"></a>screenView::click_next2x()</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, screenview.o(.text._ZN10screenView12click_next2xEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = screenView::click_next2x()
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[155]"></a>screenView::click_trends()</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView12click_trendsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = screenView::click_trends() &rArr; touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::setSelected(touchgfx::RadioButton&) &rArr; touchgfx::RadioButton::setSelected(bool) &rArr; touchgfx::RadioButton::executeDeselectedAction()
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::setSelected(touchgfx::RadioButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[61f]"></a>screenView::handleBackup()</STRONG> (Thumb, 2032 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView12handleBackupEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = screenView::handleBackup() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[620]"></a>screenView::handleMVeMax()</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView12handleMVeMaxEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleMVeMax() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[621]"></a>screenView::handleMVeMin()</STRONG> (Thumb, 408 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView12handleMVeMinEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleMVeMin() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[622]"></a>screenView::handleMViMax()</STRONG> (Thumb, 412 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView12handleMViMaxEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleMViMax() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[623]"></a>screenView::handleMViMin()</STRONG> (Thumb, 416 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView12handleMViMinEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleMViMin() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[624]"></a>screenView::handleSilent()</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView12handleSilentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = screenView::handleSilent() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[625]"></a>screenView::handleTrends()</STRONG> (Thumb, 3428 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView12handleTrendsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = screenView::handleTrends() &rArr; touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::setSelected(touchgfx::RadioButton&) &rArr; touchgfx::RadioButton::setSelected(bool) &rArr; touchgfx::RadioButton::executeDeselectedAction()
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::setSelected(touchgfx::RadioButton&)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[626]"></a>screenView::handleVteMax()</STRONG> (Thumb, 372 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView12handleVteMaxEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleVteMax() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[627]"></a>screenView::handleVteMin()</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView12handleVteMinEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleVteMin() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[628]"></a>screenView::handleVtiMax()</STRONG> (Thumb, 412 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView12handleVtiMaxEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleVtiMax() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[629]"></a>screenView::handleVtiMin()</STRONG> (Thumb, 408 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView12handleVtiMinEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleVtiMin() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[62a]"></a>screenView::handleWeight()</STRONG> (Thumb, 352 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView12handleWeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleWeight() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[148]"></a>screenView::click_RR_conf()</STRONG> (Thumb, 952 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView13click_RR_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_RR_conf() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[166]"></a>screenView::click_Ti_conf()</STRONG> (Thumb, 920 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView13click_Ti_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = screenView::click_Ti_conf() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[14a]"></a>screenView::click_VT_conf()</STRONG> (Thumb, 872 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView13click_VT_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_VT_conf() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[137]"></a>screenView::click_confirm()</STRONG> (Thumb, 500 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView13click_confirmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = screenView::click_confirm() &rArr; screenView::sendConfig() &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::updateConfigsWildCards()
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::sendConfig()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[16b]"></a>screenView::click_cycling()</STRONG> (Thumb, 644 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView13click_cyclingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_cycling() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[145]"></a>screenView::click_english()</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView13click_englishEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = screenView::click_english() &rArr; screenView::setLanguage() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setLanguage()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[182]"></a>screenView::click_lowPEEP()</STRONG> (Thumb, 2056 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView13click_lowPEEPEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = screenView::click_lowPEEP() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[126]"></a>screenView::click_setting()</STRONG> (Thumb, 664 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView13click_settingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = screenView::click_setting() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[16a]"></a>screenView::click_trigger()</STRONG> (Thumb, 728 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView13click_triggerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = screenView::click_trigger() &rArr; screenView::disableMainChoose() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[62c]"></a>screenView::handleCycling()</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView13handleCyclingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleCycling() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[62d]"></a>screenView::handleFiO2Max()</STRONG> (Thumb, 380 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView13handleFiO2MaxEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleFiO2Max() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[62e]"></a>screenView::handleFiO2Min()</STRONG> (Thumb, 384 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView13handleFiO2MinEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleFiO2Min() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[62f]"></a>screenView::handleLeakMax()</STRONG> (Thumb, 388 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView13handleLeakMaxEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleLeakMax() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[630]"></a>screenView::handleLowPEEP()</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView13handleLowPEEPEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleLowPEEP() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[631]"></a>screenView::handleMinutes()</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView13handleMinutesEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = screenView::handleMinutes() &rArr; touchgfx::DigitalClock::setColor(touchgfx::colortype) &rArr; touchgfx::TextAreaWithWildcardBase::invalidateContent() const &rArr; touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentMinute() const
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentHour24() const
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setColor(touchgfx::colortype)
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[632]"></a>screenView::handleRR_CONF()</STRONG> (Thumb, 968 bytes, Stack size 56 bytes, screenview.o(.text._ZN10screenView13handleRR_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = screenView::handleRR_CONF() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[633]"></a>screenView::handleSPO2Max()</STRONG> (Thumb, 372 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView13handleSPO2MaxEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleSPO2Max() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[634]"></a>screenView::handleSPO2Min()</STRONG> (Thumb, 396 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView13handleSPO2MinEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleSPO2Min() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[635]"></a>screenView::handleTi_CONF()</STRONG> (Thumb, 752 bytes, Stack size 56 bytes, screenview.o(.text._ZN10screenView13handleTi_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = screenView::handleTi_CONF() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[636]"></a>screenView::handleTrigger()</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView13handleTriggerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleTrigger() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[637]"></a>screenView::handleVT_CONF()</STRONG> (Thumb, 644 bytes, Stack size 64 bytes, screenview.o(.text._ZN10screenView13handleVT_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = screenView::handleVT_CONF() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[129]"></a>screenView::click_PControl()</STRONG> (Thumb, 660 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView14click_PControlEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = screenView::click_PControl() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[163]"></a>screenView::click_invasive()</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView14click_invasiveEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = screenView::click_invasive()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[13f]"></a>screenView::click_language()</STRONG> (Thumb, 500 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView14click_languageEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = screenView::click_language() &rArr; touchgfx::DigitalClock::setColor(touchgfx::colortype) &rArr; touchgfx::TextAreaWithWildcardBase::invalidateContent() const &rArr; touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setColor(touchgfx::colortype)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[159]"></a>screenView::click_previous()</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, screenview.o(.text._ZN10screenView14click_previousEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = screenView::click_previous()
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[169]"></a>screenView::click_riseTime()</STRONG> (Thumb, 672 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView14click_riseTimeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_riseTime() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[1a3]"></a>screenView::click_yesAlert()</STRONG> (Thumb, 636 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView14click_yesAlertEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = screenView::click_yesAlert() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::updateIdealWeightParameter()
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::sendConfig()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[639]"></a>screenView::handleLanguage()</STRONG> (Thumb, 444 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView14handleLanguageEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = screenView::handleLanguage() &rArr; touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::setSelected(touchgfx::RadioButton&) &rArr; touchgfx::RadioButton::setSelected(bool) &rArr; touchgfx::RadioButton::executeDeselectedAction()
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::setSelected(touchgfx::RadioButton&)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[63a]"></a>screenView::handleRRBackup()</STRONG> (Thumb, 704 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView14handleRRBackupEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleRRBackup() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[63b]"></a>screenView::handleRisetime()</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView14handleRisetimeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleRisetime() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[63c]"></a>screenView::handleTiBackup()</STRONG> (Thumb, 532 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView14handleTiBackupEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = screenView::handleTiBackup() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[63d]"></a>screenView::handleVTBackup()</STRONG> (Thumb, 368 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView14handleVTBackupEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleVTBackup() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[63e]"></a>screenView::save_trendData()</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView14save_trendDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = screenView::save_trendData() &rArr; screenView::save_startDataPointer() &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnableMemoryMappedMode
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Write
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EraseSector
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DeInit
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_startDataPointer()
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[1b5]"></a>screenView::save_ventHours()</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, screenview.o(.text._ZN10screenView14save_ventHoursEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = screenView::save_ventHours() &rArr; W25Q256FV_QSPI_Write &rArr; W25Q256FV_QSPI_WriteEnable &rArr; HAL_QSPI_AutoPolling &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[11e]"></a>screenView::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenview.o(.text._ZN10screenView14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[17b]"></a>screenView::click_CPAP_conf()</STRONG> (Thumb, 908 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView15click_CPAP_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_CPAP_conf() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[19f]"></a>screenView::click_EPAP_conf()</STRONG> (Thumb, 868 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView15click_EPAP_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_EPAP_conf() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[15d]"></a>screenView::click_FiO2Alarm()</STRONG> (Thumb, 2532 bytes, Stack size 48 bytes, screenview.o(.text._ZN10screenView15click_FiO2AlarmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = screenView::click_FiO2Alarm() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[149]"></a>screenView::click_FiO2_conf()</STRONG> (Thumb, 920 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView15click_FiO2_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_FiO2_conf() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[1a0]"></a>screenView::click_IPAP_conf()</STRONG> (Thumb, 860 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView15click_IPAP_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_IPAP_conf() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[141]"></a>screenView::click_PAlarmbtn()</STRONG> (Thumb, 2432 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView15click_PAlarmbtnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = screenView::click_PAlarmbtn() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[147]"></a>screenView::click_PEEP_conf()</STRONG> (Thumb, 892 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView15click_PEEP_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_PEEP_conf() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[19a]"></a>screenView::click_SPO2Alarm()</STRONG> (Thumb, 2592 bytes, Stack size 48 bytes, screenview.o(.text._ZN10screenView15click_SPO2AlarmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = screenView::click_SPO2Alarm() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[183]"></a>screenView::click_leakAlarm()</STRONG> (Thumb, 2148 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView15click_leakAlarmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = screenView::click_leakAlarm() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[133]"></a>screenView::click_pediatric()</STRONG> (Thumb, 380 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView15click_pediatricEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = screenView::click_pediatric() &rArr; screenView::updateConfigsWildCards()
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveTo(short, short)
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::updateConfigsWildCards()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[689]"></a>screenView::convertIdToMode(unsigned char)</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, screenview.o(.text._ZN10screenView15convertIdToModeEh))
<BR><BR>[Called By]<UL><LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::createDataTrendList()
</UL>

<P><STRONG><a name="[640]"></a>screenView::handleCPAP_CONF()</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView15handleCPAP_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleCPAP_CONF() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[641]"></a>screenView::handleEPAP_CONF()</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView15handleEPAP_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleEPAP_CONF() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[642]"></a>screenView::handleFiO2_CONF()</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView15handleFiO2_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleFiO2_CONF() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[643]"></a>screenView::handleIPAP_CONF()</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView15handleIPAP_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleIPAP_CONF() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[644]"></a>screenView::handlePEEP_CONF()</STRONG> (Thumb, 368 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView15handlePEEP_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handlePEEP_CONF() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[645]"></a>screenView::handleSens_CONF()</STRONG> (Thumb, 428 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView15handleSens_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = screenView::handleSens_CONF() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[122]"></a>screenView::handleTickEvent()</STRONG> (Thumb, 5652 bytes, Stack size 72 bytes, screenview.o(.text._ZN10screenView15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 840 + Unknown Stack Size
<LI>Call Chain = screenView::handleTickEvent() &rArr; screenView::handleAlarmShowing() &rArr; screenView::save_trendAlarm(unsigned char*) &rArr; screenView::save_startAlarmPointer() &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnableMemoryMappedMode
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Write
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EraseSector
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DeInit
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentTextWithAlignment()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphRangeY(int, int)
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(int)
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(float)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::setValue(int)
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::setColor(touchgfx::colortype)
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::showAlert()
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePIP()
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleDay()
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAge()
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVT()
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTi()
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRR()
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleIE()
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_backwardTestScreen()
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_forwardTestScreen()
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleInitTestCalibrationScreen()
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVentilationSettingScreen()
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePatientInfoSettingScreen()
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_forwardScreen()
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTightnessTestScreen()
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBackupConfigScreen()
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleInitCircuitScreen()
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBackupChooseModes()
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTiInspPause_CONF()
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePControlMax_CONF()
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensorScreen()
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendData_last4n()
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVentStopedAlarm()
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTightnessScreen()
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleInterfaceScreen()
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowShapeBackup()
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCircuitDisAlarm()
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBackupApneaTime()
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRiseTimeBackup()
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePControlBackup()
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowShape_CONF()
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleApneaDetection()
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSettingScreen()
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSafetyVT_CONF()
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRisetime_CONF()
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePControl_CONF()
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleInitAgeScreen()
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleDeviceSetting()
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarmNextPage()
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTrigger_CONF()
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleIPAPMax_CONF()
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCycling_CONF()
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarmShowing()
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePressureMin()
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePressureMax()
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMasksScreen()
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleApneaAlaram()
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTiMin_CONF()
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTiMax_CONF()
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePsupp_CONF()
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePSMax_CONF()
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePEEPBackup()
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMainScreen()
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHRMinAlarm()
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHRMaxAlarm()
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleDeviceInfo()
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleChooseMode()
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBrightness()
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSens_CONF()
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePEEP_CONF()
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleIPAP_CONF()
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2_CONF()
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleEPAP_CONF()
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCPAP_CONF()
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendData()
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVTBackup()
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTiBackup()
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRisetime()
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRBackup()
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleLanguage()
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVT_CONF()
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTrigger()
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTi_CONF()
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSPO2Min()
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSPO2Max()
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRR_CONF()
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMinutes()
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleLowPEEP()
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleLeakMax()
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2Min()
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2Max()
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCycling()
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleWeight()
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVtiMin()
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVtiMax()
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVteMin()
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVteMax()
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTrends()
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSilent()
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMViMin()
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMViMax()
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMVeMin()
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMVeMax()
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBackup()
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRMin()
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRMax()
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePsupp()
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMonth()
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHours()
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAudio()
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlert()
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarm()
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::updateDate()
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::sendConfig()
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleYear()
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSens()
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePEEP()
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlow()
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2()
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCPAP()
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[681]"></a>screenView::save_trendAlarm(unsigned char*)</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView15save_trendAlarmEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = screenView::save_trendAlarm(unsigned char*) &rArr; screenView::save_startAlarmPointer() &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnableMemoryMappedMode
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Write
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EraseSector
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DeInit
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_startAlarmPointer()
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarmShowing()
</UL>

<P><STRONG><a name="[127]"></a>screenView::click_Monitoring()</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView16click_MonitoringEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = screenView::click_Monitoring()
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[195]"></a>screenView::click_PSMax_conf()</STRONG> (Thumb, 908 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView16click_PSMax_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_PSMax_conf() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[151]"></a>screenView::click_Psupp_conf()</STRONG> (Thumb, 908 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView16click_Psupp_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_Psupp_conf() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[140]"></a>screenView::click_RRAlarmbtn()</STRONG> (Thumb, 2328 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView16click_RRAlarmbtnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = screenView::click_RRAlarmbtn() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[16f]"></a>screenView::click_brightness()</STRONG> (Thumb, 508 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView16click_brightnessEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = screenView::click_brightness() &rArr; touchgfx::DigitalClock::setColor(touchgfx::colortype) &rArr; touchgfx::TextAreaWithWildcardBase::invalidateContent() const &rArr; touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setColor(touchgfx::colortype)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[172]"></a>screenView::click_deviceInfo()</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView16click_deviceInfoEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_deviceInfo() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[15a]"></a>screenView::click_previous2x()</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, screenview.o(.text._ZN10screenView16click_previous2xEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = screenView::click_previous2x()
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[164]"></a>screenView::click_ventedMask()</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView16click_ventedMaskEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::click_ventedMask() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[64f]"></a>screenView::handleBrightness()</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView16handleBrightnessEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = screenView::handleBrightness() &rArr; touchgfx::CanvasWidget::invalidate() const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValue(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[64b]"></a>screenView::handleChooseMode()</STRONG> (Thumb, 3032 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView16handleChooseModeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleChooseMode() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[651]"></a>screenView::handleDeviceInfo()</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView16handleDeviceInfoEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleDeviceInfo() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[677]"></a>screenView::handleHRMaxAlarm()</STRONG> (Thumb, 372 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView16handleHRMaxAlarmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleHRMaxAlarm() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[678]"></a>screenView::handleHRMinAlarm()</STRONG> (Thumb, 392 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView16handleHRMinAlarmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleHRMinAlarm() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[65d]"></a>screenView::handleMainScreen()</STRONG> (Thumb, 36456 bytes, Stack size 72 bytes, screenview.o(.text._ZN10screenView16handleMainScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = screenView::handleMainScreen() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveTo(short, short)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButton::executeAction()
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[675]"></a>screenView::handlePEEPBackup()</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView16handlePEEPBackupEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handlePEEPBackup() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[66d]"></a>screenView::handlePSMax_CONF()</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView16handlePSMax_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handlePSMax_CONF() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[66c]"></a>screenView::handlePsupp_CONF()</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView16handlePsupp_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handlePsupp_CONF() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[67f]"></a>screenView::handleTiMax_CONF()</STRONG> (Thumb, 504 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView16handleTiMax_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = screenView::handleTiMax_CONF() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[680]"></a>screenView::handleTiMin_CONF()</STRONG> (Thumb, 512 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView16handleTiMin_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = screenView::handleTiMin_CONF() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[61c]"></a>screenView::load_trendAlarms()</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView16load_trendAlarmsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = screenView::load_trendAlarms() &rArr; screenView::load_startAlarmPointer() &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnableMemoryMappedMode
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Read
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DeInit
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_startAlarmPointer()
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::findNextEmptyQSPI(unsigned, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setupScreen()
</UL>

<P><STRONG><a name="[1b6]"></a>screenView::save_ventMinutes()</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, screenview.o(.text._ZN10screenView16save_ventMinutesEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = screenView::save_ventMinutes() &rArr; W25Q256FV_QSPI_Write &rArr; W25Q256FV_QSPI_WriteEnable &rArr; HAL_QSPI_AutoPolling &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[175]"></a>screenView::click_MVeAlarmbtn()</STRONG> (Thumb, 2568 bytes, Stack size 56 bytes, screenview.o(.text._ZN10screenView17click_MVeAlarmbtnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = screenView::click_MVeAlarmbtn() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[143]"></a>screenView::click_MViAlarmbtn()</STRONG> (Thumb, 2684 bytes, Stack size 56 bytes, screenview.o(.text._ZN10screenView17click_MViAlarmbtnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = screenView::click_MViAlarmbtn() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[174]"></a>screenView::click_VteAlarmbtn()</STRONG> (Thumb, 2680 bytes, Stack size 56 bytes, screenview.o(.text._ZN10screenView17click_VteAlarmbtnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = screenView::click_VteAlarmbtn() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[142]"></a>screenView::click_VtiAlarmbtn()</STRONG> (Thumb, 2644 bytes, Stack size 56 bytes, screenview.o(.text._ZN10screenView17click_VtiAlarmbtnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = screenView::click_VtiAlarmbtn() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[13a]"></a>screenView::click_audioSlider(int)</STRONG> (Thumb, 520 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView17click_audioSliderEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = screenView::click_audioSlider(int) &rArr; touchgfx::DigitalClock::setColor(touchgfx::colortype) &rArr; touchgfx::TextAreaWithWildcardBase::invalidateContent() const &rArr; touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValue(int)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setColor(touchgfx::colortype)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[13d]"></a>screenView::click_backAlarmSc()</STRONG> (Thumb, 1060 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView17click_backAlarmScEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = screenView::click_backAlarmSc() &rArr; screenView::sendConfig() &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::sendConfig()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[13b]"></a>screenView::click_backDeviceS()</STRONG> (Thumb, 388 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView17click_backDeviceSEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = screenView::click_backDeviceS() &rArr; touchgfx::DigitalClock::setColor(touchgfx::colortype) &rArr; touchgfx::TextAreaWithWildcardBase::invalidateContent() const &rArr; touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setColor(touchgfx::colortype)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[12b]"></a>screenView::click_backSetting()</STRONG> (Thumb, 484 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView17click_backSettingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = screenView::click_backSetting() &rArr; screenView::sendConfig() &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::updateConfigsWildCards()
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::sendConfig()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[187]"></a>screenView::click_backupApnea()</STRONG> (Thumb, 788 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView17click_backupApneaEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = screenView::click_backupApnea() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[186]"></a>screenView::click_backupModes()</STRONG> (Thumb, 744 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView17click_backupModesEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = screenView::click_backupModes() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[1a4]"></a>screenView::click_cancelAlert()</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView17click_cancelAlertEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_cancelAlert() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[17c]"></a>screenView::click_dataButton1()</STRONG> (Thumb, 800 bytes, Stack size 88 bytes, screenview.o(.text._ZN10screenView17click_dataButton1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = screenView::click_dataButton1() &rArr; touchgfx::DynamicDataGraph::addDataPoint(float) &rArr; touchgfx::DynamicDataGraph::addDataPointScaled(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphRangeY(int, int)
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(int)
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[17d]"></a>screenView::click_dataButton2()</STRONG> (Thumb, 808 bytes, Stack size 88 bytes, screenview.o(.text._ZN10screenView17click_dataButton2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = screenView::click_dataButton2() &rArr; touchgfx::DynamicDataGraph::addDataPoint(float) &rArr; touchgfx::DynamicDataGraph::addDataPointScaled(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphRangeY(int, int)
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(int)
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[17e]"></a>screenView::click_dataButton3()</STRONG> (Thumb, 808 bytes, Stack size 88 bytes, screenview.o(.text._ZN10screenView17click_dataButton3Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = screenView::click_dataButton3() &rArr; touchgfx::DynamicDataGraph::addDataPoint(float) &rArr; touchgfx::DynamicDataGraph::addDataPointScaled(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphRangeY(int, int)
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(int)
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[17f]"></a>screenView::click_dataButton4()</STRONG> (Thumb, 808 bytes, Stack size 88 bytes, screenview.o(.text._ZN10screenView17click_dataButton4Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = screenView::click_dataButton4() &rArr; touchgfx::DynamicDataGraph::addDataPoint(float) &rArr; touchgfx::DynamicDataGraph::addDataPointScaled(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphRangeY(int, int)
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(int)
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[157]"></a>screenView::click_dataRecords()</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView17click_dataRecordsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = screenView::click_dataRecords() &rArr; screenView::load_trendData_last4n() &rArr; screenView::load_startDataPointer() &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendData_last4n()
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::createDataTrendList()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[14c]"></a>screenView::click_patientInfo()</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView17click_patientInfoEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_patientInfo() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[16c]"></a>screenView::click_sensitivity()</STRONG> (Thumb, 776 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView17click_sensitivityEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = screenView::click_sensitivity() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[15e]"></a>screenView::click_skip_button()</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView17click_skip_buttonEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = screenView::click_skip_button()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[179]"></a>screenView::click_toggleApnea()</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView17click_toggleApneaEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = screenView::click_toggleApnea() &rArr; touchgfx::ToggleButton::getState() const &rArr; touchgfx::Bitmap::getId() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::getState() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[146]"></a>screenView::click_ventSetting()</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView17click_ventSettingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = screenView::click_ventSetting()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[601]"></a>screenView::disableMainChoose()</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView17disableMainChooseEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::disableMainChoose() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VT()
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Ti()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RR()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IE()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensitivity()
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTime()
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControl()
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_trigger()
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_cycling()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_confirm()
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Psupp()
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flow()
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEP()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2()
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_CPAP()
</UL>

<P><STRONG><a name="[684]"></a>screenView::findNextEmptyQSPI(unsigned, unsigned, unsigned)</STRONG> (Thumb, 136 bytes, Stack size 144 bytes, screenview.o(.text._ZN10screenView17findNextEmptyQSPIEjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = screenView::findNextEmptyQSPI(unsigned, unsigned, unsigned) &rArr; W25Q256FV_QSPI_Read &rArr; HAL_QSPI_Receive &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Read
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_data()
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_startAlarmPointer()
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_startAlarmPointer()
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_startDataPointer()
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendData_last4n()
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_startDataPointer()
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendAlarms()
</UL>

<P><STRONG><a name="[674]"></a>screenView::handleApneaAlaram()</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView17handleApneaAlaramEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleApneaAlaram() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[654]"></a>screenView::handleMasksScreen()</STRONG> (Thumb, 300 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView17handleMasksScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleMasksScreen() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[672]"></a>screenView::handlePressureMax()</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView17handlePressureMaxEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handlePressureMax() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[673]"></a>screenView::handlePressureMin()</STRONG> (Thumb, 392 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView17handlePressureMinEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handlePressureMin() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[1a1]"></a>screenView::click_IPAPMax_conf()</STRONG> (Thumb, 856 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView18click_IPAPMax_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_IPAPMax_conf() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[196]"></a>screenView::click_activeAlarms()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView18click_activeAlarmsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::click_activeAlarms() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[158]"></a>screenView::click_alarmRecords()</STRONG> (Thumb, 276 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView18click_alarmRecordsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = screenView::click_alarmRecords() &rArr; screenView::createAlarmTrendList() &rArr; touchgfx::TextArea::resizeToCurrentText() &rArr; touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::createAlarmTrendList()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[14f]"></a>screenView::click_cycling_conf()</STRONG> (Thumb, 928 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView18click_cycling_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_cycling_conf() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[14e]"></a>screenView::click_heightButton()</STRONG> (Thumb, 416 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView18click_heightButtonEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = screenView::click_heightButton() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::showAlert()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[153]"></a>screenView::click_trigger_conf()</STRONG> (Thumb, 1228 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView18click_trigger_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = screenView::click_trigger_conf() &rArr; screenView::disableVentSettingChoose2() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[647]"></a>screenView::handleAlarmShowing()</STRONG> (Thumb, 7264 bytes, Stack size 360 bytes, screenview.o(.text._ZN10screenView18handleAlarmShowingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = screenView::handleAlarmShowing() &rArr; screenView::save_trendAlarm(unsigned char*) &rArr; screenView::save_startAlarmPointer() &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendAlarm(unsigned char*)
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[671]"></a>screenView::handleCycling_CONF()</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView18handleCycling_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleCycling_CONF() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[67a]"></a>screenView::handleIPAPMax_CONF()</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView18handleIPAPMax_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleIPAPMax_CONF() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[66f]"></a>screenView::handleTrigger_CONF()</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView18handleTrigger_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleTrigger_CONF() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[61b]"></a>screenView::setCalibrationData()</STRONG> (Thumb, 880 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView18setCalibrationDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = screenView::setCalibrationData() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_backwardTestScreen()
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_forwardTestScreen()
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTightnessTestScreen()
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setupScreen()
</UL>

<P><STRONG><a name="[1a5]"></a>screenView::click_FiO2FakeAlarm()</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView19click_FiO2FakeAlarmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::click_FiO2FakeAlarm() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[1a9]"></a>screenView::click_O2Cell_button()</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView19click_O2Cell_buttonEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = screenView::click_O2Cell_button()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[167]"></a>screenView::click_PControl_conf()</STRONG> (Thumb, 896 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView19click_PControl_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = screenView::click_PControl_conf() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[189]"></a>screenView::click_backupConfigs()</STRONG> (Thumb, 532 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView19click_backupConfigsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = screenView::click_backupConfigs() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[184]"></a>screenView::click_backupSetting()</STRONG> (Thumb, 324 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView19click_backupSettingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = screenView::click_backupSetting() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[198]"></a>screenView::click_nextPageAlarm()</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView19click_nextPageAlarmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = screenView::click_nextPageAlarm() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[165]"></a>screenView::click_nonVentedMask()</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView19click_nonVentedMaskEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::click_nonVentedMask() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[19c]"></a>screenView::click_pulsRateAlarm()</STRONG> (Thumb, 1256 bytes, Stack size 48 bytes, screenview.o(.text._ZN10screenView19click_pulsRateAlarmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = screenView::click_pulsRateAlarm() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[150]"></a>screenView::click_riseTime_conf()</STRONG> (Thumb, 932 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView19click_riseTime_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_riseTime_conf() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[17a]"></a>screenView::click_safetyVT_conf()</STRONG> (Thumb, 828 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView19click_safetyVT_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_safetyVT_conf() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[685]"></a>screenView::createDataTrendList()</STRONG> (Thumb, 580 bytes, Stack size 48 bytes, screenview.o(.text._ZN10screenView19createDataTrendListEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = screenView::createDataTrendList() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::convertIdToMode(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_dataRecords()
</UL>

<P><STRONG><a name="[64c]"></a>screenView::handleAlarmNextPage()</STRONG> (Thumb, 1880 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView19handleAlarmNextPageEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = screenView::handleAlarmNextPage() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[650]"></a>screenView::handleDeviceSetting()</STRONG> (Thumb, 1692 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView19handleDeviceSettingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = screenView::handleDeviceSetting() &rArr; touchgfx::DigitalClock::setColor(touchgfx::colortype) &rArr; touchgfx::TextAreaWithWildcardBase::invalidateContent() const &rArr; touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setColor(touchgfx::colortype)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[64a]"></a>screenView::handleInitAgeScreen()</STRONG> (Thumb, 664 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView19handleInitAgeScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleInitAgeScreen() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[64d]"></a>screenView::handlePControl_CONF()</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView19handlePControl_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handlePControl_CONF() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[66b]"></a>screenView::handleRisetime_CONF()</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView19handleRisetime_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleRisetime_CONF() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[670]"></a>screenView::handleSafetyVT_CONF()</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView19handleSafetyVT_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleSafetyVT_CONF() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[660]"></a>screenView::handleSettingScreen()</STRONG> (Thumb, 2260 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView19handleSettingScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleSettingScreen() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[1af]"></a>screenView::click_O2Check_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenview.o(.text._ZN10screenView20click_O2Check_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[18d]"></a>screenView::click_RRBackupScreen()</STRONG> (Thumb, 440 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView20click_RRBackupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = screenView::click_RRBackupScreen() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableBackupModeChooses()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[18c]"></a>screenView::click_TiBackupScreen()</STRONG> (Thumb, 484 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView20click_TiBackupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = screenView::click_TiBackupScreen() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableBackupModeChooses()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[18e]"></a>screenView::click_VTBackupScreen()</STRONG> (Thumb, 512 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView20click_VTBackupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = screenView::click_VTBackupScreen() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableBackupModeChooses()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[1a2]"></a>screenView::click_apneaDetection()</STRONG> (Thumb, 668 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView20click_apneaDetectionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = screenView::click_apneaDetection() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[188]"></a>screenView::click_backApneaAlarm()</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView20click_backApneaAlarmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::click_backApneaAlarm() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[180]"></a>screenView::click_backDataGraphs()</STRONG> (Thumb, 196 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView20click_backDataGraphsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = screenView::click_backDataGraphs()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[173]"></a>screenView::click_backDeviceInfo()</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView20click_backDeviceInfoEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::click_backDeviceInfo() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[177]"></a>screenView::click_backInitialize()</STRONG> (Thumb, 280 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView20click_backInitializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = screenView::click_backInitialize() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[176]"></a>screenView::click_circuitSetting()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, screenview.o(.text._ZN10screenView20click_circuitSettingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = screenView::click_circuitSetting() &rArr; screenView::showAlert() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::showAlert()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[178]"></a>screenView::click_flowShape_conf()</STRONG> (Thumb, 888 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView20click_flowShape_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_flowShape_conf() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[1ae]"></a>screenView::click_sensors_button()</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView20click_sensors_buttonEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::click_sensors_button() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[687]"></a>screenView::createAlarmTrendList()</STRONG> (Thumb, 756 bytes, Stack size 56 bytes, screenview.o(.text._ZN10screenView20createAlarmTrendListEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = screenView::createAlarmTrendList() &rArr; touchgfx::TextArea::resizeToCurrentText() &rArr; touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_alarmRecords()
</UL>

<P><STRONG><a name="[67b]"></a>screenView::handleApneaDetection()</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView20handleApneaDetectionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleApneaDetection() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[66e]"></a>screenView::handleFlowShape_CONF()</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView20handleFlowShape_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleFlowShape_CONF() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[67d]"></a>screenView::handlePControlBackup()</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView20handlePControlBackupEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handlePControlBackup() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[67e]"></a>screenView::handleRiseTimeBackup()</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView20handleRiseTimeBackupEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleRiseTimeBackup() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[61a]"></a>screenView::load_calibrationData()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView20load_calibrationDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = screenView::load_calibrationData() &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnableMemoryMappedMode
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Read
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setupScreen()
</UL>

<P><STRONG><a name="[68b]"></a>screenView::save_calibrationDate(unsigned char)</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView20save_calibrationDateEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = screenView::save_calibrationDate(unsigned char) &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnableMemoryMappedMode
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Write
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EraseSector
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DeInit
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_backwardTestScreen()
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_forwardTestScreen()
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTightnessTestScreen()
</UL>

<P><STRONG><a name="[1b0]"></a>screenView::click_CO2Check_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenview.o(.text._ZN10screenView21click_CO2Check_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[1b7]"></a>screenView::click_autoscaleButton()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, screenview.o(.text._ZN10screenView21click_autoscaleButtonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[14d]"></a>screenView::click_backPatientInfo()</STRONG> (Thumb, 396 bytes, Stack size 48 bytes, screenview.o(.text._ZN10screenView21click_backPatientInfoEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = screenView::click_backPatientInfo() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[14b]"></a>screenView::click_backVentSetting()</STRONG> (Thumb, 712 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView21click_backVentSettingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = screenView::click_backVentSetting() &rArr; screenView::sendConfig() &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::sendConfig()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[19b]"></a>screenView::click_circuitDisAlarm()</STRONG> (Thumb, 992 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView21click_circuitDisAlarmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = screenView::click_circuitDisAlarm() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[19d]"></a>screenView::click_ventStopedAlarm()</STRONG> (Thumb, 880 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView21click_ventStopedAlarmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = screenView::click_ventStopedAlarm() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[663]"></a>screenView::handleBackupApneaTime()</STRONG> (Thumb, 396 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView21handleBackupApneaTimeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = screenView::handleBackupApneaTime() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[676]"></a>screenView::handleCircuitDisAlarm()</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView21handleCircuitDisAlarmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleCircuitDisAlarm() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[67c]"></a>screenView::handleFlowShapeBackup()</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView21handleFlowShapeBackupEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleFlowShapeBackup() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[653]"></a>screenView::handleInterfaceScreen()</STRONG> (Thumb, 312 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView21handleInterfaceScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleInterfaceScreen() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[657]"></a>screenView::handleTightnessScreen()</STRONG> (Thumb, 280 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView21handleTightnessScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleTightnessScreen() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[679]"></a>screenView::handleVentStopedAlarm()</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView21handleVentStopedAlarmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleVentStopedAlarm() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[68c]"></a>screenView::load_startDataPointer()</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView21load_startDataPointerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = screenView::load_startDataPointer() &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnableMemoryMappedMode
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Read
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DeInit
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::findNextEmptyQSPI(unsigned, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendData_last4n()
</UL>

<P><STRONG><a name="[61d]"></a>screenView::load_trendData_last4n()</STRONG> (Thumb, 300 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView21load_trendData_last4nEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = screenView::load_trendData_last4n() &rArr; screenView::load_startDataPointer() &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnableMemoryMappedMode
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Read
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DeInit
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_startDataPointer()
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::findNextEmptyQSPI(unsigned, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_dataRecords()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setupScreen()
</UL>

<P><STRONG><a name="[63f]"></a>screenView::save_startDataPointer()</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView21save_startDataPointerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = screenView::save_startDataPointer() &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnableMemoryMappedMode
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Write
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EraseSector
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DeInit
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::findNextEmptyQSPI(unsigned, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendData()
</UL>

<P><STRONG><a name="[1aa]"></a>screenView::click_CO2Sensor_button()</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView22click_CO2Sensor_buttonEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = screenView::click_CO2Sensor_button()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[194]"></a>screenView::click_PControlMax_conf()</STRONG> (Thumb, 912 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView22click_PControlMax_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = screenView::click_PControlMax_conf() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[18b]"></a>screenView::click_PEEPBackupScreen()</STRONG> (Thumb, 512 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView22click_PEEPBackupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = screenView::click_PEEPBackupScreen() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableBackupModeChooses()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[1b1]"></a>screenView::click_SPO2Check_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenview.o(.text._ZN10screenView22click_SPO2Check_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[154]"></a>screenView::click_TiInspPause_conf()</STRONG> (Thumb, 884 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView22click_TiInspPause_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = screenView::click_TiInspPause_conf() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[197]"></a>screenView::click_backActiveAlarms()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView22click_backActiveAlarmsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::click_backActiveAlarms() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[185]"></a>screenView::click_backBackupScreen()</STRONG> (Thumb, 288 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView22click_backBackupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::click_backBackupScreen() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[156]"></a>screenView::click_backTrendsScreen()</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView22click_backTrendsScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::click_backTrendsScreen() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[170]"></a>screenView::click_brightnessSlider(int)</STRONG> (Thumb, 512 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView22click_brightnessSliderEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = screenView::click_brightnessSlider(int) &rArr; touchgfx::DigitalClock::setColor(touchgfx::colortype) &rArr; touchgfx::TextAreaWithWildcardBase::invalidateContent() const &rArr; touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValue(int)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setColor(touchgfx::colortype)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[19e]"></a>screenView::click_obstructionAlarm()</STRONG> (Thumb, 996 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView22click_obstructionAlarmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = screenView::click_obstructionAlarm() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[152]"></a>screenView::click_sensitivity_conf()</STRONG> (Thumb, 1016 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView22click_sensitivity_confEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = screenView::click_sensitivity_conf() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[1a7]"></a>screenView::click_tightness_button()</STRONG> (Thumb, 288 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView22click_tightness_buttonEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = screenView::click_tightness_button() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::setValue(int)
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::sendConfig()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[659]"></a>screenView::handleFlowSensorScreen()</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView22handleFlowSensorScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleFlowSensorScreen() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[665]"></a>screenView::handlePControlMax_CONF()</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView22handlePControlMax_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handlePControlMax_CONF() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[66a]"></a>screenView::handleTiInspPause_CONF()</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView22handleTiInspPause_CONFEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = screenView::handleTiInspPause_CONF() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[683]"></a>screenView::load_startAlarmPointer()</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView22load_startAlarmPointerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = screenView::load_startAlarmPointer() &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnableMemoryMappedMode
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Read
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DeInit
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::findNextEmptyQSPI(unsigned, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::load_trendAlarms()
</UL>

<P><STRONG><a name="[682]"></a>screenView::save_startAlarmPointer()</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView22save_startAlarmPointerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = screenView::save_startAlarmPointer() &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnableMemoryMappedMode
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Write
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EraseSector
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DeInit
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::findNextEmptyQSPI(unsigned, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_trendAlarm(unsigned char*)
</UL>

<P><STRONG><a name="[60f]"></a>screenView::updateConfigsWildCards()</STRONG> (Thumb, 2048 bytes, Stack size 56 bytes, screenview.o(.text._ZN10screenView22updateConfigsWildCardsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = screenView::updateConfigsWildCards()
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::updateIdealWeightParameter()
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backSetting()
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_pediatric()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_confirm()
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setupScreen()
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_adult()
</UL>

<P><STRONG><a name="[192]"></a>screenView::click_TiMax_ventSetting()</STRONG> (Thumb, 860 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView23click_TiMax_ventSettingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = screenView::click_TiMax_ventSetting() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[193]"></a>screenView::click_TiMin_ventSetting()</STRONG> (Thumb, 852 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView23click_TiMin_ventSettingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = screenView::click_TiMin_ventSetting() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[1a8]"></a>screenView::click_flowSensor_button()</STRONG> (Thumb, 324 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView23click_flowSensor_buttonEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = screenView::click_flowSensor_button() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::setValue(int)
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::sendConfig()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[199]"></a>screenView::click_previousPageAlarm()</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView23click_previousPageAlarmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = screenView::click_previousPageAlarm() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[130]"></a>screenView::click_singleLeak_button()</STRONG> (Thumb, 380 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView23click_singleLeak_buttonEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = screenView::click_singleLeak_button() &rArr; touchgfx::RadioButton::setSelected(bool) &rArr; touchgfx::RadioButton::executeDeselectedAction()
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::setSelected(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[661]"></a>screenView::handleBackupChooseModes()</STRONG> (Thumb, 420 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView23handleBackupChooseModesEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleBackupChooseModes() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[655]"></a>screenView::handleInitCircuitScreen()</STRONG> (Thumb, 312 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView23handleInitCircuitScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleInitCircuitScreen() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[68a]"></a>screenView::disableBackupModeChooses()</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView24disableBackupModeChoosesEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::disableBackupModeChooses() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowShapeBackupScreen()
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTimeBackupScreen()
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backBackupModeScreen()
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControlBackupScreen()
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEPBackupScreen()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VTBackupScreen()
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiBackupScreen()
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RRBackupScreen()
</UL>

<P><STRONG><a name="[603]"></a>screenView::disableVentSettingChoose()</STRONG> (Thumb, 1348 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView24disableVentSettingChooseEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = screenView::disableVentSettingChoose() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_mode()
</UL>

<P><STRONG><a name="[662]"></a>screenView::handleBackupConfigScreen()</STRONG> (Thumb, 3892 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView24handleBackupConfigScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = screenView::handleBackupConfigScreen() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[1a6]"></a>screenView::click_configurationButton()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, screenview.o(.text._ZN10screenView25click_configurationButtonEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = screenView::click_configurationButton()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[62b]"></a>screenView::disableVentSettingChoose2()</STRONG> (Thumb, 752 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView25disableVentSettingChoose2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::disableVentSettingChoose2() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiMin_ventSetting()
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiMax_ventSetting()
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensitivity_conf()
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiInspPause_conf()
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControlMax_conf()
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowShape_conf()
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_safetyVT_conf()
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTime_conf()
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControl_conf()
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_trigger_conf()
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_cycling_conf()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IPAPMax_conf()
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Psupp_conf()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PSMax_conf()
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEP_conf()
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IPAP_conf()
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2_conf()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_EPAP_conf()
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_CPAP_conf()
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VT_conf()
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Ti_conf()
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RR_conf()
</UL>

<P><STRONG><a name="[658]"></a>screenView::handleTightnessTestScreen()</STRONG> (Thumb, 296 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView25handleTightnessTestScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = screenView::handleTightnessTestScreen() &rArr; screenView::save_calibrationDate(unsigned char) &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::setSelected(bool)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_calibrationDate(unsigned char)
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setCalibrationData()
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::sendConfig()
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[18f]"></a>screenView::click_PControlBackupScreen()</STRONG> (Thumb, 468 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView26click_PControlBackupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = screenView::click_PControlBackupScreen() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableBackupModeChooses()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[18a]"></a>screenView::click_backBackupModeScreen()</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView26click_backBackupModeScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = screenView::click_backBackupModeScreen() &rArr; screenView::disableBackupModeChooses() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableBackupModeChooses()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[1b2]"></a>screenView::click_back_tightnessScreen()</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView26click_back_tightnessScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = screenView::click_back_tightnessScreen() &rArr; screenView::sendConfig() &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::setSelected(bool)
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::sendConfig()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[190]"></a>screenView::click_riseTimeBackupScreen()</STRONG> (Thumb, 504 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView26click_riseTimeBackupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_riseTimeBackupScreen() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableBackupModeChooses()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[131]"></a>screenView::click_singleCircuit_button()</STRONG> (Thumb, 396 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView26click_singleCircuit_buttonEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = screenView::click_singleCircuit_button() &rArr; touchgfx::RadioButton::setSelected(bool) &rArr; touchgfx::RadioButton::executeDeselectedAction()
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::setSelected(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[638]"></a>screenView::updateIdealWeightParameter()</STRONG> (Thumb, 320 bytes, Stack size 0 bytes, screenview.o(.text._ZN10screenView26updateIdealWeightParameterEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = screenView::updateIdealWeightParameter() &rArr; screenView::updateConfigsWildCards()
</UL>
<BR>[Calls]<UL><LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::updateConfigsWildCards()
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_yesAlert()
</UL>

<P><STRONG><a name="[1b3]"></a>screenView::click_back_flowSensorScreen()</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView27click_back_flowSensorScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = screenView::click_back_flowSensorScreen() &rArr; screenView::sendConfig() &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::setSelected(bool)
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::sendConfig()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[191]"></a>screenView::click_flowShapeBackupScreen()</STRONG> (Thumb, 476 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView27click_flowShapeBackupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_flowShapeBackupScreen() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableBackupModeChooses()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[1ad]"></a>screenView::click_testCalibration_button()</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView28click_testCalibration_buttonEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::click_testCalibration_button() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[12e]"></a>screenView::click_adult_initScreen_button()</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView29click_adult_initScreen_buttonEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = screenView::click_adult_initScreen_button()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[65b]"></a>screenView::handleFlowSensor_forwardScreen()</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView30handleFlowSensor_forwardScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleFlowSensor_forwardScreen() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[65f]"></a>screenView::handlePatientInfoSettingScreen()</STRONG> (Thumb, 476 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView30handlePatientInfoSettingScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handlePatientInfoSettingScreen() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[65e]"></a>screenView::handleVentilationSettingScreen()</STRONG> (Thumb, 47068 bytes, Stack size 40 bytes, screenview.o(.text._ZN10screenView30handleVentilationSettingScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = screenView::handleVentilationSettingScreen() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[1ab]"></a>screenView::click_tightness_continue_button()</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView31click_tightness_continue_buttonEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = screenView::click_tightness_continue_button() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::setValue(int)
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::sendConfig()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[656]"></a>screenView::handleInitTestCalibrationScreen()</STRONG> (Thumb, 1156 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView31handleInitTestCalibrationScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = screenView::handleInitTestCalibrationScreen()
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[1ac]"></a>screenView::click_flowSensor_continue_button()</STRONG> (Thumb, 428 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView32click_flowSensor_continue_buttonEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = screenView::click_flowSensor_continue_button() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::setValue(int)
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::sendConfig()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[12f]"></a>screenView::click_pediatric_initScreen_button()</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView33click_pediatric_initScreen_buttonEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = screenView::click_pediatric_initScreen_button()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[65c]"></a>screenView::handleFlowSensor_forwardTestScreen()</STRONG> (Thumb, 296 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView34handleFlowSensor_forwardTestScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = screenView::handleFlowSensor_forwardTestScreen() &rArr; screenView::save_calibrationDate(unsigned char) &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::setSelected(bool)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_calibrationDate(unsigned char)
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setCalibrationData()
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::sendConfig()
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[65a]"></a>screenView::handleFlowSensor_backwardTestScreen()</STRONG> (Thumb, 444 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView35handleFlowSensor_backwardTestScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = screenView::handleFlowSensor_backwardTestScreen() &rArr; screenView::save_calibrationDate(unsigned char) &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::setSelected(bool)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::setValue(int)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::save_calibrationDate(unsigned char)
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setCalibrationData()
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::sendConfig()
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[135]"></a>screenView::click_IE()</STRONG> (Thumb, 692 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView8click_IEEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = screenView::click_IE() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[12a]"></a>screenView::click_RR()</STRONG> (Thumb, 780 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView8click_RREv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::click_RR() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[16e]"></a>screenView::click_Ti()</STRONG> (Thumb, 676 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView8click_TiEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = screenView::click_Ti() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[134]"></a>screenView::click_VT()</STRONG> (Thumb, 680 bytes, Stack size 32 bytes, screenview.o(.text._ZN10screenView8click_VTEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = screenView::click_VT() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[668]"></a>screenView::handleIE()</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView8handleIEEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handleIE() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[666]"></a>screenView::handleRR()</STRONG> (Thumb, 948 bytes, Stack size 56 bytes, screenview.o(.text._ZN10screenView8handleRREv))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = screenView::handleRR() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[669]"></a>screenView::handleTi()</STRONG> (Thumb, 768 bytes, Stack size 56 bytes, screenview.o(.text._ZN10screenView8handleTiEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = screenView::handleTi() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[667]"></a>screenView::handleVT()</STRONG> (Thumb, 644 bytes, Stack size 64 bytes, screenview.o(.text._ZN10screenView8handleVTEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = screenView::handleVT() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[12d]"></a>screenView::click_age()</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView9click_ageEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = screenView::click_age() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveTo(short, short)
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[64e]"></a>screenView::handleAge()</STRONG> (Thumb, 312 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView9handleAgeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenView::handleAge() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::isVisible() const
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[652]"></a>screenView::handleDay()</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView9handleDayEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = screenView::handleDay() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[664]"></a>screenView::handlePIP()</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView9handlePIPEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = screenView::handlePIP() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[1b4]"></a>screenView::load_data()</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView9load_dataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = screenView::load_data() &rArr; W25Q256FV_QSPI_Init &rArr; HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Init
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_EnableMemoryMappedMode
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_Read
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q256FV_QSPI_DeInit
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::findNextEmptyQSPI(unsigned, unsigned, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[125]"></a>screenView::pauseVent()</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenView9pauseVentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = screenView::pauseVent() &rArr; screenView::showAlert() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::showAlert()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[648]"></a>screenView::showAlert()</STRONG> (Thumb, 1248 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView9showAlertEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = screenView::showAlert() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::pauseVent()
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_circuitSetting()
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_heightButton()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[124]"></a>screenView::startVent()</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, screenview.o(.text._ZN10screenView9startVentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = screenView::startVent() &rArr; screenView::sendConfig() &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::sendConfig()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[68d]"></a>screenView::screenView()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screenview.o(.text._ZN10screenViewC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 5472<LI>Call Chain = screenView::screenView() &rArr; screenViewBase::screenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[8c8]"></a>screenView::screenView__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screenview.o(.text._ZN10screenViewC2Ev), UNUSED)

<P><STRONG><a name="[11a]"></a>screenView::~screenView__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenview.o(.text._ZN10screenViewD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = screenView::~screenView__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[1e4]"></a>TouchGFXHAL::beginFrame()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL10beginFrameEv))
<BR><BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[1bc]"></a>TouchGFXHAL::initialize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize()
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[1d6]"></a>TouchGFXHAL::enableInterrupts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL16enableInterruptsEv))
<BR><BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[1bf]"></a>TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&) &rArr; TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[1be]"></a>TouchGFXHAL::flushFrameBuffer()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL16flushFrameBufferEv))
<BR><BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[1d7]"></a>TouchGFXHAL::disableInterrupts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL17disableInterruptsEv))
<BR><BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::disableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[1e6]"></a>TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL17setTFTFrameBufferEPt))
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[1d5]"></a>TouchGFXHAL::configureInterrupts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL19configureInterruptsEv))
<BR><BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::configureInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[1d8]"></a>TouchGFXHAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL28enableLCDControllerInterruptEv))
<BR><BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[1e5]"></a>TouchGFXHAL::endFrame()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXHAL::endFrame() &rArr; TouchGFXGeneratedHAL::endFrame() &rArr; touchgfx::HAL::endFrame()
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::endFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[1c5]"></a>TouchGFXHAL::blockCopy(void*, const void*, unsigned)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL9blockCopyEPvPKvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXHAL::blockCopy(void*, const void*, unsigned) &rArr; TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned) &rArr; touchgfx::HAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[5ee]"></a>TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN11TouchGFXHALC2ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_TouchGFXConfiguration.cpp
</UL>

<P><STRONG><a name="[1b9]"></a>TouchGFXHAL::~TouchGFXHAL__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHALD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = TouchGFXHAL::~TouchGFXHAL__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[691]"></a>FrontendHeap::getInstance()</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZN12FrontendHeap11getInstanceEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = FrontendHeap::getInstance() &rArr; __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[692]"></a>FrontendHeap::FrontendHeap__sub_object()</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, touchgfxconfiguration.o(.text._ZN12FrontendHeapC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FrontendHeap::FrontendHeap__sub_object() &rArr; FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)
</UL>
<BR>[Calls]<UL><LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::Model()
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::getInstance()
</UL>

<P><STRONG><a name="[1ec]"></a>FrontendHeap::~FrontendHeap__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZN12FrontendHeapD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = FrontendHeap::~FrontendHeap__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[ae]"></a>FrontendHeap::~FrontendHeap__sub_object()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN12FrontendHeapD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FrontendHeap::~FrontendHeap__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(.text._ZN12FrontendHeap11getInstanceEv)
<LI> touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[88a]"></a>BitmapDatabase::getInstance()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bitmapdatabase.o(.text._ZN14BitmapDatabase11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[88b]"></a>BitmapDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase.o(.text._ZN14BitmapDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[24c]"></a>screenViewBase::click_CPAP()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase10click_CPAPEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[204]"></a>screenViewBase::click_FiO2()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase10click_FiO2Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[1f6]"></a>screenViewBase::click_PEEP()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase10click_PEEPEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[23c]"></a>screenViewBase::click_date()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase10click_dateEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[238]"></a>screenViewBase::click_flow()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase10click_flowEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[22d]"></a>screenViewBase::click_mask()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase10click_maskEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[1fa]"></a>screenViewBase::click_mode()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase10click_modeEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[229]"></a>screenViewBase::click_next()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase10click_nextEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[20a]"></a>screenViewBase::click_time()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase10click_timeEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[233]"></a>screenViewBase::click_Psupp()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase11click_PsuppEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[200]"></a>screenViewBase::click_adult()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase11click_adultEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[207]"></a>screenViewBase::click_alarm()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase11click_alarmEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[20c]"></a>screenViewBase::click_audio()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase11click_audioEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[1ef]"></a>screenViewBase::setupScreen()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::setupScreen() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[212]"></a>screenViewBase::click_arabic()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase12click_arabicEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[206]"></a>screenViewBase::click_device()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase12click_deviceEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[22a]"></a>screenViewBase::click_next2x()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase12click_next2xEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[223]"></a>screenViewBase::click_trends()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase12click_trendsEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[216]"></a>screenViewBase::click_RR_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase13click_RR_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[231]"></a>screenViewBase::click_Ti_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase13click_Ti_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[218]"></a>screenViewBase::click_VT_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase13click_VT_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[205]"></a>screenViewBase::click_confirm()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase13click_confirmEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[236]"></a>screenViewBase::click_cycling()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase13click_cyclingEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[213]"></a>screenViewBase::click_english()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase13click_englishEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[24d]"></a>screenViewBase::click_lowPEEP()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase13click_lowPEEPEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[1f4]"></a>screenViewBase::click_setting()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase13click_settingEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[235]"></a>screenViewBase::click_trigger()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase13click_triggerEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[1f7]"></a>screenViewBase::click_PControl()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase14click_PControlEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[22e]"></a>screenViewBase::click_invasive()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase14click_invasiveEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[20d]"></a>screenViewBase::click_language()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase14click_languageEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[227]"></a>screenViewBase::click_previous()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase14click_previousEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[234]"></a>screenViewBase::click_riseTime()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase14click_riseTimeEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[26e]"></a>screenViewBase::click_yesAlert()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase14click_yesAlertEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[246]"></a>screenViewBase::click_CPAP_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase15click_CPAP_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[26a]"></a>screenViewBase::click_EPAP_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase15click_EPAP_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[22b]"></a>screenViewBase::click_FiO2Alarm()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase15click_FiO2AlarmEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[217]"></a>screenViewBase::click_FiO2_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase15click_FiO2_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[26b]"></a>screenViewBase::click_IPAP_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase15click_IPAP_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[20f]"></a>screenViewBase::click_PAlarmbtn()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase15click_PAlarmbtnEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[215]"></a>screenViewBase::click_PEEP_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase15click_PEEP_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[265]"></a>screenViewBase::click_SPO2Alarm()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase15click_SPO2AlarmEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[15f]"></a>screenViewBase::click_continue2()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenview.o(.text._ZN14screenViewBase15click_continue2Ev))
<BR>[Address Reference Count : 2]<UL><LI> screenview.o(.rodata._ZTV10screenView)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[160]"></a>screenViewBase::click_continue3()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenview.o(.text._ZN14screenViewBase15click_continue3Ev))
<BR>[Address Reference Count : 2]<UL><LI> screenview.o(.rodata._ZTV10screenView)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[24e]"></a>screenViewBase::click_leakAlarm()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase15click_leakAlarmEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[201]"></a>screenViewBase::click_pediatric()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase15click_pediatricEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[1f5]"></a>screenViewBase::click_Monitoring()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase16click_MonitoringEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[260]"></a>screenViewBase::click_PSMax_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase16click_PSMax_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[21f]"></a>screenViewBase::click_Psupp_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase16click_Psupp_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[20e]"></a>screenViewBase::click_RRAlarmbtn()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase16click_RRAlarmbtnEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[23a]"></a>screenViewBase::click_brightness()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase16click_brightnessEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[23d]"></a>screenViewBase::click_deviceInfo()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase16click_deviceInfoEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[228]"></a>screenViewBase::click_previous2x()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase16click_previous2xEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[22f]"></a>screenViewBase::click_ventedMask()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase16click_ventedMaskEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[240]"></a>screenViewBase::click_MVeAlarmbtn()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_MVeAlarmbtnEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[211]"></a>screenViewBase::click_MViAlarmbtn()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_MViAlarmbtnEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[23f]"></a>screenViewBase::click_VteAlarmbtn()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_VteAlarmbtnEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[210]"></a>screenViewBase::click_VtiAlarmbtn()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_VtiAlarmbtnEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[208]"></a>screenViewBase::click_audioSlider(int)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_audioSliderEi))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[20b]"></a>screenViewBase::click_backAlarmSc()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_backAlarmScEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[209]"></a>screenViewBase::click_backDeviceS()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_backDeviceSEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[1f9]"></a>screenViewBase::click_backSetting()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_backSettingEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[252]"></a>screenViewBase::click_backupApnea()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_backupApneaEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[251]"></a>screenViewBase::click_backupModes()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_backupModesEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[26f]"></a>screenViewBase::click_cancelAlert()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_cancelAlertEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[161]"></a>screenViewBase::click_continueEnd()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenview.o(.text._ZN14screenViewBase17click_continueEndEv))
<BR>[Address Reference Count : 2]<UL><LI> screenview.o(.rodata._ZTV10screenView)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[247]"></a>screenViewBase::click_dataButton1()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_dataButton1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[248]"></a>screenViewBase::click_dataButton2()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_dataButton2Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[249]"></a>screenViewBase::click_dataButton3()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_dataButton3Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[24a]"></a>screenViewBase::click_dataButton4()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_dataButton4Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[225]"></a>screenViewBase::click_dataRecords()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_dataRecordsEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[21a]"></a>screenViewBase::click_patientInfo()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_patientInfoEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[237]"></a>screenViewBase::click_sensitivity()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_sensitivityEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[22c]"></a>screenViewBase::click_skip_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_skip_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[244]"></a>screenViewBase::click_toggleApnea()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_toggleApneaEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[214]"></a>screenViewBase::click_ventSetting()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase17click_ventSettingEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[26c]"></a>screenViewBase::click_IPAPMax_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase18click_IPAPMax_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[261]"></a>screenViewBase::click_activeAlarms()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase18click_activeAlarmsEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[226]"></a>screenViewBase::click_alarmRecords()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase18click_alarmRecordsEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[21d]"></a>screenViewBase::click_cycling_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase18click_cycling_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[21c]"></a>screenViewBase::click_heightButton()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase18click_heightButtonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[221]"></a>screenViewBase::click_trigger_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase18click_trigger_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[270]"></a>screenViewBase::click_FiO2FakeAlarm()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase19click_FiO2FakeAlarmEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[274]"></a>screenViewBase::click_O2Cell_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase19click_O2Cell_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[232]"></a>screenViewBase::click_PControl_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase19click_PControl_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[254]"></a>screenViewBase::click_backupConfigs()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase19click_backupConfigsEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[24f]"></a>screenViewBase::click_backupSetting()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase19click_backupSettingEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[263]"></a>screenViewBase::click_nextPageAlarm()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase19click_nextPageAlarmEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[230]"></a>screenViewBase::click_nonVentedMask()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase19click_nonVentedMaskEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[267]"></a>screenViewBase::click_pulsRateAlarm()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase19click_pulsRateAlarmEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[21e]"></a>screenViewBase::click_riseTime_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase19click_riseTime_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[245]"></a>screenViewBase::click_safetyVT_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase19click_safetyVT_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[27a]"></a>screenViewBase::click_O2Check_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase20click_O2Check_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[258]"></a>screenViewBase::click_RRBackupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase20click_RRBackupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[257]"></a>screenViewBase::click_TiBackupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase20click_TiBackupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[259]"></a>screenViewBase::click_VTBackupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase20click_VTBackupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[26d]"></a>screenViewBase::click_apneaDetection()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase20click_apneaDetectionEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[253]"></a>screenViewBase::click_backApneaAlarm()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase20click_backApneaAlarmEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[24b]"></a>screenViewBase::click_backDataGraphs()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase20click_backDataGraphsEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[23e]"></a>screenViewBase::click_backDeviceInfo()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase20click_backDeviceInfoEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[242]"></a>screenViewBase::click_backInitialize()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase20click_backInitializeEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[241]"></a>screenViewBase::click_circuitSetting()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase20click_circuitSettingEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[243]"></a>screenViewBase::click_flowShape_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase20click_flowShape_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[279]"></a>screenViewBase::click_sensors_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase20click_sensors_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[ea]"></a>screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 2840 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN14screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&) &rArr; touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[27b]"></a>screenViewBase::click_CO2Check_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase21click_CO2Check_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[21b]"></a>screenViewBase::click_backPatientInfo()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase21click_backPatientInfoEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[219]"></a>screenViewBase::click_backVentSetting()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase21click_backVentSettingEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[266]"></a>screenViewBase::click_circuitDisAlarm()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase21click_circuitDisAlarmEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[268]"></a>screenViewBase::click_ventStopedAlarm()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase21click_ventStopedAlarmEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[275]"></a>screenViewBase::click_CO2Sensor_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase22click_CO2Sensor_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[25f]"></a>screenViewBase::click_PControlMax_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase22click_PControlMax_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[256]"></a>screenViewBase::click_PEEPBackupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase22click_PEEPBackupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[27c]"></a>screenViewBase::click_SPO2Check_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase22click_SPO2Check_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[222]"></a>screenViewBase::click_TiInspPause_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase22click_TiInspPause_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[262]"></a>screenViewBase::click_backActiveAlarms()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase22click_backActiveAlarmsEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[250]"></a>screenViewBase::click_backBackupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase22click_backBackupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[224]"></a>screenViewBase::click_backTrendsScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase22click_backTrendsScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[23b]"></a>screenViewBase::click_brightnessSlider(int)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase22click_brightnessSliderEi))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[269]"></a>screenViewBase::click_obstructionAlarm()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase22click_obstructionAlarmEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[220]"></a>screenViewBase::click_sensitivity_conf()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase22click_sensitivity_confEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[272]"></a>screenViewBase::click_tightness_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase22click_tightness_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[25d]"></a>screenViewBase::click_TiMax_ventSetting()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase23click_TiMax_ventSettingEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[25e]"></a>screenViewBase::click_TiMin_ventSetting()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase23click_TiMin_ventSettingEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[273]"></a>screenViewBase::click_flowSensor_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase23click_flowSensor_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[264]"></a>screenViewBase::click_previousPageAlarm()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase23click_previousPageAlarmEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[1fe]"></a>screenViewBase::click_singleLeak_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase23click_singleLeak_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[271]"></a>screenViewBase::click_configurationButton()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase25click_configurationButtonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[25a]"></a>screenViewBase::click_PControlBackupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase26click_PControlBackupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[255]"></a>screenViewBase::click_backBackupModeScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase26click_backBackupModeScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[27d]"></a>screenViewBase::click_back_tightnessScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase26click_back_tightnessScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[25b]"></a>screenViewBase::click_riseTimeBackupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase26click_riseTimeBackupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[1ff]"></a>screenViewBase::click_singleCircuit_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase26click_singleCircuit_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[27e]"></a>screenViewBase::click_back_flowSensorScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase27click_back_flowSensorScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[25c]"></a>screenViewBase::click_flowShapeBackupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase27click_flowShapeBackupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[278]"></a>screenViewBase::click_testCalibration_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase28click_testCalibration_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[1fc]"></a>screenViewBase::click_adult_initScreen_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase29click_adult_initScreen_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[e6]"></a>screenViewBase::logo_fadeEndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, screenviewbase.o(.text._ZN14screenViewBase29logo_fadeEndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_5ImageEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = screenViewBase::logo_fadeEndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[e7]"></a>screenViewBase::logo_showEndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase29logo_showEndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_5ImageEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::logo_showEndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[c9]"></a>screenViewBase::wait_logosEndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 500 bytes, Stack size 24 bytes, screenviewbase.o(.text._ZN14screenViewBase30wait_logosEndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = screenViewBase::wait_logosEndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[276]"></a>screenViewBase::click_tightness_continue_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase31click_tightness_continue_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[277]"></a>screenViewBase::click_flowSensor_continue_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase32click_flowSensor_continue_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[1fd]"></a>screenViewBase::click_pediatric_initScreen_button()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase33click_pediatric_initScreen_buttonEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[e9]"></a>screenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider&, int)</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[e8]"></a>screenViewBase::radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase34radioButtonSelectedCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[e5]"></a>screenViewBase::ventInfo_show1EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show1EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show1EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[e4]"></a>screenViewBase::ventInfo_show2EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show2EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show2EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[e3]"></a>screenViewBase::ventInfo_show3EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show3EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show3EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[e1]"></a>screenViewBase::ventInfo_show4EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show4EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show4EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[e2]"></a>screenViewBase::ventInfo_show5EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show5EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show5EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[df]"></a>screenViewBase::ventInfo_show6EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show6EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show6EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[e0]"></a>screenViewBase::ventInfo_show7EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show7EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show7EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[dd]"></a>screenViewBase::ventInfo_show8EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show8EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show8EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[de]"></a>screenViewBase::ventInfo_show9EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show9EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show9EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[db]"></a>screenViewBase::ventInfo_show10EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show10EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show10EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[dc]"></a>screenViewBase::ventInfo_show11EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show11EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show11EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[d9]"></a>screenViewBase::ventInfo_show12EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show12EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show12EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[da]"></a>screenViewBase::ventInfo_show13EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show13EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show13EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[d7]"></a>screenViewBase::ventInfo_show14EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show14EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show14EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[d8]"></a>screenViewBase::ventInfo_show15EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show15EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show15EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[d5]"></a>screenViewBase::ventInfo_show18EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show18EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show18EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[d6]"></a>screenViewBase::ventInfo_show19EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show19EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show19EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[d3]"></a>screenViewBase::ventInfo_show20EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show20EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show20EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[d4]"></a>screenViewBase::ventInfo_show21EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show21EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show21EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[d1]"></a>screenViewBase::ventInfo_show22EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show22EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show22EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[d2]"></a>screenViewBase::ventInfo_show23EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show23EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show23EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[cf]"></a>screenViewBase::ventInfo_show24EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show24EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show24EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[d0]"></a>screenViewBase::ventInfo_show25EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show25EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show25EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[cd]"></a>screenViewBase::ventInfo_show26EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show26EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show26EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[ce]"></a>screenViewBase::ventInfo_show27EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show27EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show27EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[cb]"></a>screenViewBase::ventInfo_show28EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show28EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show28EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[cc]"></a>screenViewBase::ventInfo_show29EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show29EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show29EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[ca]"></a>screenViewBase::ventInfo_show30EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show30EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = screenViewBase::ventInfo_show30EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[203]"></a>screenViewBase::click_IE()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase8click_IEEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[1f8]"></a>screenViewBase::click_RR()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase8click_RREv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[239]"></a>screenViewBase::click_Ti()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase8click_TiEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[202]"></a>screenViewBase::click_VT()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase8click_VTEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[1fb]"></a>screenViewBase::click_age()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase9click_ageEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[1f3]"></a>screenViewBase::pauseVent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase9pauseVentEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[1f2]"></a>screenViewBase::startVent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBase9startVentEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[69a]"></a>screenViewBase::screenViewBase()</STRONG> (Thumb, 132284 bytes, Stack size 5464 bytes, screenviewbase.o(.text._ZN14screenViewBaseC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValue(int)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setColor(touchgfx::colortype)
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::Slider()
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setupHorizontalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValueRange(int, int)
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;screenPresenter&rang;::View__sub_object()
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::setupBuffer(unsigned char*, unsigned)
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::ToggleButton__sub_object()
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::MoveAnimator__sub_object()
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator__sub_object()
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::DigitalClock()
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::displayLeadingZeroForHourIndicator(bool)
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setTypedText(touchgfx::TypedText)
</UL>

<P><STRONG><a name="[68e]"></a>screenViewBase::screenViewBase__sub_object()</STRONG> (Thumb, 132284 bytes, Stack size 5464 bytes, screenviewbase.o(.text._ZN14screenViewBaseC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 5464<LI>Call Chain = screenViewBase::screenViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::screenView()
</UL>

<P><STRONG><a name="[1ee]"></a>screenViewBase::~screenViewBase__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN14screenViewBaseD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = screenViewBase::~screenViewBase__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[119]"></a>screenViewBase::~screenViewBase__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenview.o(.text._ZN14screenViewBaseD2Ev))
<BR>[Address Reference Count : 2]<UL><LI> screenview.o(.rodata._ZTV10screenView)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[280]"></a>screenPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenpresenter.o(.text._ZN15screenPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> screenpresenter.o(.rodata._ZTV15screenPresenter)
</UL>
<P><STRONG><a name="[27f]"></a>screenPresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenpresenter.o(.text._ZN15screenPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> screenpresenter.o(.rodata._ZTV15screenPresenter)
</UL>
<P><STRONG><a name="[712]"></a>screenPresenter::screenPresenter(screenView&)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, screenpresenter.o(.text._ZN15screenPresenterC2ER10screenView))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = screenPresenter::screenPresenter(screenView&)
</UL>
<BR>[Called By]<UL><LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[8c9]"></a>screenPresenter::screenPresenter__sub_object(screenView&)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, screenpresenter.o(.text._ZN15screenPresenterC2ER10screenView), UNUSED)

<P><STRONG><a name="[282]"></a>screenPresenter::~screenPresenter__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenpresenter.o(.text._ZN15screenPresenterD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = screenPresenter::~screenPresenter__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenpresenter.o(.rodata._ZTV15screenPresenter)
</UL>
<P><STRONG><a name="[281]"></a>screenPresenter::~screenPresenter__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenpresenter.o(.text._ZN15screenPresenterD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenpresenter.o(.rodata._ZTV15screenPresenter)
</UL>
<P><STRONG><a name="[1ed]"></a>FrontendHeapBase::gotoStartScreen(FrontendApplication&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication))
<BR><BR>[Calls]<UL><LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoscreenScreenNoTransition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[770]"></a>TypedTextDatabase::getInstanceSize()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, typedtextdatabase.o(.text._ZN17TypedTextDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[6aa]"></a>TypedTextDatabase::getFonts()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, typedtextdatabase.o(.text._ZN17TypedTextDatabase8getFontsEv))
<BR><BR>[Called By]<UL><LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationFontProvider::getFont(unsigned short)
</UL>

<P><STRONG><a name="[289]"></a>FrontendApplication::handleTickEvent()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, frontendapplication.o(.text._ZN19FrontendApplication15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = FrontendApplication::handleTickEvent() &rArr; touchgfx::Application::handleTickEvent() &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::removeAt(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[697]"></a>FrontendApplication::FrontendApplication(Model&, FrontendHeap&)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, frontendapplication.o(.text._ZN19FrontendApplicationC2ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
</UL>

<P><STRONG><a name="[8ca]"></a>FrontendApplication::FrontendApplication__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, frontendapplication.o(.text._ZN19FrontendApplicationC2ER5ModelR12FrontendHeap), UNUSED)

<P><STRONG><a name="[28c]"></a>FrontendApplication::~FrontendApplication__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplication.o(.text._ZN19FrontendApplicationD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = FrontendApplication::~FrontendApplication__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[299]"></a>STM32TouchController::sampleTouch(int&, int&)</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, stm32touchcontroller.o(.text._ZN20STM32TouchController11sampleTouchERiS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = STM32TouchController::sampleTouch(int&, int&) &rArr; Touch_Scan &rArr; GT9XX_WriteData &rArr; GT9XX_WriteHandle &rArr; Touch_IIC_WriteByte &rArr; Touch_IIC_WaitACK
</UL>
<BR>[Calls]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Scan
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[298]"></a>STM32TouchController::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32touchcontroller.o(.text._ZN20STM32TouchController4initEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[297]"></a>STM32TouchController::~STM32TouchController__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32touchcontroller.o(.text._ZN20STM32TouchControllerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = STM32TouchController::~STM32TouchController__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[1eb]"></a>TouchGFXGeneratedHAL::FlushCache()</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL10FlushCacheEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TouchGFXGeneratedHAL::FlushCache()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[2a4]"></a>TouchGFXGeneratedHAL::beginFrame()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL10beginFrameEv))
<BR><BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::beginFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[29b]"></a>TouchGFXGeneratedHAL::initialize()</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize()
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[1ea]"></a>TouchGFXGeneratedHAL::InvalidateCache()</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL15InvalidateCacheEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TouchGFXGeneratedHAL::InvalidateCache()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[2a1]"></a>TouchGFXGeneratedHAL::enableInterrupts()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL16enableInterruptsEv))
<BR><BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[29d]"></a>TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[29c]"></a>TouchGFXGeneratedHAL::flushFrameBuffer()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL16flushFrameBufferEv))
<BR><BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[2a2]"></a>TouchGFXGeneratedHAL::disableInterrupts()</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL17disableInterruptsEv))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::disableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[2a6]"></a>TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt))
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[2a0]"></a>TouchGFXGeneratedHAL::configureInterrupts()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL19configureInterruptsEv))
<BR><BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::configureInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[2a3]"></a>TouchGFXGeneratedHAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[2a5]"></a>TouchGFXGeneratedHAL::endFrame()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXGeneratedHAL::endFrame() &rArr; touchgfx::HAL::endFrame()
</UL>
<BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::endFrame()
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalRenderingDone()
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::endFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[29f]"></a>TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned) &rArr; touchgfx::HAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[690]"></a>TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN20TouchGFXGeneratedHALC2ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[29a]"></a>TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHALD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[2a7]"></a>ApplicationFontProvider::getFont(unsigned short)</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, applicationfontprovider.o(.text._ZN23ApplicationFontProvider7getFontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ApplicationFontProvider::getFont(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getFonts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[2a9]"></a>ApplicationFontProvider::~ApplicationFontProvider__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, applicationfontprovider.o(.text._ZN23ApplicationFontProviderD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = ApplicationFontProvider::~ApplicationFontProvider__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[28d]"></a>FrontendApplicationBase::changeToStartScreen()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplication.o(.text._ZN23FrontendApplicationBase19changeToStartScreenEv))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[6a4]"></a>FrontendApplicationBase::gotoscreenScreenNoTransition()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::gotoStartScreen(FrontendApplication&)
</UL>

<P><STRONG><a name="[10d]"></a>FrontendApplicationBase::gotoscreenScreenNoTransitionImpl()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 5520 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoscreenScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; screenView::screenView() &rArr; screenViewBase::screenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.text._ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv)
</UL>
<P><STRONG><a name="[6ac]"></a>FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBaseC2ER5ModelR12FrontendHeap), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::MVPApplication__sub_object()
</UL>

<P><STRONG><a name="[6a6]"></a>FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBaseC2ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[2ab]"></a>FrontendApplicationBase::~FrontendApplicationBase__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBaseD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::~FrontendApplicationBase__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[28b]"></a>FrontendApplicationBase::~FrontendApplicationBase__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplication.o(.text._ZN23FrontendApplicationBaseD2Ev))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[6a5]"></a>Model::tick()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, model.o(.text._ZN5Model4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>

<P><STRONG><a name="[696]"></a>Model::Model()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(.text._ZN5ModelC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
</UL>

<P><STRONG><a name="[8cb]"></a>Model::Model__sub_object()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(.text._ZN5ModelC2Ev), UNUSED)

<P><STRONG><a name="[2b2]"></a>STM32DMA::getDMAType()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32dma.o(.text._ZN8STM32DMA10getDMATypeEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[2af]"></a>STM32DMA::initialize()</STRONG> (Thumb, 72 bytes, Stack size 4 bytes, stm32dma.o(.text._ZN8STM32DMA10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = STM32DMA::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[2ac]"></a>STM32DMA::getBlitCaps()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32dma.o(.text._ZN8STM32DMA11getBlitCapsEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[2b8]"></a>STM32DMA::setupDataCopy(const touchgfx::BlitOp&)</STRONG> (Thumb, 368 bytes, Stack size 24 bytes, stm32dma.o(.text._ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = STM32DMA::setupDataCopy(const touchgfx::BlitOp&) &rArr; STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[2b9]"></a>STM32DMA::setupDataFill(const touchgfx::BlitOp&)</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = STM32DMA::setupDataFill(const touchgfx::BlitOp&) &rArr; STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[2b1]"></a>STM32DMA::signalDMAInterrupt()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32dma.o(.text._ZN8STM32DMA18signalDMAInterruptEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[6b0]"></a>STM32DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, stm32dma.o(.text._ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = STM32DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[6b1]"></a>STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, stm32dma.o(.text._ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[5ec]"></a>STM32DMA::STM32DMA()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN8STM32DMAC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = STM32DMA::STM32DMA() &rArr; touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_TouchGFXConfiguration.cpp
</UL>

<P><STRONG><a name="[8cc]"></a>STM32DMA::STM32DMA__sub_object()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN8STM32DMAC2Ev), UNUSED)

<P><STRONG><a name="[2b4]"></a>STM32DMA::~STM32DMA__deallocating()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32dma.o(.text._ZN8STM32DMAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = STM32DMA::~STM32DMA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[a2]"></a>STM32DMA::~STM32DMA()</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32dma.o(.text._ZN8STM32DMAD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.text._GLOBAL__sub_I_TouchGFXConfiguration.cpp)
</UL>
<P><STRONG><a name="[2b3]"></a>STM32DMA::~STM32DMA__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32dma.o(.text._ZN8STM32DMAD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[2bf]"></a>touchgfx::ClickEvent::~ClickEvent__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx10ClickEventD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::ClickEvent::~ClickEvent__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
</UL>
<P><STRONG><a name="[73e]"></a>touchgfx::OSWrappers::initialize()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers10initializeEv))
<BR><BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
</UL>

<P><STRONG><a name="[517]"></a>touchgfx::OSWrappers::signalVSync()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers11signalVSyncEv))
<BR><BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[752]"></a>touchgfx::OSWrappers::waitForVSync()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers12waitForVSyncEv))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::taskEntry()
</UL>

<P><STRONG><a name="[88d]"></a>touchgfx::OSWrappers::isVSyncAvailable()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers16isVSyncAvailableEv))
<BR><BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>

<P><STRONG><a name="[6a8]"></a>touchgfx::OSWrappers::signalRenderingDone()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers19signalRenderingDoneEv))
<BR><BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::endFrame()
</UL>

<P><STRONG><a name="[70c]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphore()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv))
<BR><BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::unlockFrameBuffer()
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[70b]"></a>touchgfx::OSWrappers::takeFrameBufferSemaphore()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv))
<BR><BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[706]"></a>touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv))
<BR><BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[70a]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv))
<BR><BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::executeCompleted()
</UL>

<P><STRONG><a name="[5a2]"></a>touchgfx::Rasterizer::lineTo(int, int)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, canvas.o(.text._ZN8touchgfx10Rasterizer6lineToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = touchgfx::Rasterizer::lineTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>

<P><STRONG><a name="[6b4]"></a>touchgfx::Rasterizer::moveTo(int, int)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, canvas.o(.text._ZN8touchgfx10Rasterizer6moveToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = touchgfx::Rasterizer::moveTo(int, int) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[6b6]"></a>touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char)</STRONG> (Thumb, 420 bytes, Stack size 80 bytes, canvas.o(.text._ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char) &rArr; touchgfx::Outline::closeOutlineAndSortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::calculateAlpha(int) const
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::closeOutlineAndSortCells()
</UL>
<BR>[Called By]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
</UL>

<P><STRONG><a name="[6b9]"></a>touchgfx::Rasterizer::Rasterizer__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, canvas.o(.text._ZN8touchgfx10RasterizerC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::Rasterizer::Rasterizer__sub_object() &rArr; touchgfx::Outline::Outline() &rArr; touchgfx::Outline::reset() &rArr; touchgfx::CanvasWidgetRenderer::getOutlineBufferSize() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::Outline()
</UL>
<BR>[Called By]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[34e]"></a>touchgfx::Transition::invalidate()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::Transition::invalidate() &rArr; touchgfx::Application::invalidate() &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[34f]"></a>touchgfx::Transition::setScreenContainer(touchgfx::Container&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[34d]"></a>touchgfx::Transition::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition4initEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[34c]"></a>touchgfx::Transition::tearDown()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition8tearDownEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[349]"></a>touchgfx::Transition::~Transition__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10TransitionD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[6bb]"></a>touchgfx::Application::invalidate()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::invalidate() &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::invalidate()
</UL>

<P><STRONG><a name="[6a7]"></a>touchgfx::Application::getInstance()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::invalidate()
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::nextMoveAnimationStep()
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::handleTickEvent()
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::updateValue(int, unsigned short)
</UL>

<P><STRONG><a name="[28e]"></a>touchgfx::Application::switchScreen(touchgfx::Screen*)</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::switchScreen(touchgfx::Screen*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[291]"></a>touchgfx::Application::requestRedraw(touchgfx::Rect&)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, frontendapplication.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[290]"></a>touchgfx::Application::requestRedraw()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application13requestRedrawEv))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[288]"></a>touchgfx::Application::handleKeyEvent(unsigned char)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application14handleKeyEventEh))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[6bc]"></a>touchgfx::Application::invalidateArea(touchgfx::Rect)</STRONG> (Thumb, 1524 bytes, Stack size 72 bytes, application.o(.text._ZN8touchgfx11Application14invalidateAreaENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::includes(const touchgfx::Rect&) const
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::restrictTo(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidate()
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[28f]"></a>touchgfx::Application::appSwitchScreen(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplication.o(.text._ZN8touchgfx11Application15appSwitchScreenEh))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[293]"></a>touchgfx::Application::drawCachedAreas()</STRONG> (Thumb, 1148 bytes, Stack size 128 bytes, application.o(.text._ZN8touchgfx11Application15drawCachedAreasEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::drawCachedAreas() &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[286]"></a>touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[2aa]"></a>touchgfx::Application::handleTickEvent()</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, application.o(.text._ZN8touchgfx11Application15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::handleTickEvent() &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::removeAt(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::removeAt(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[292]"></a>touchgfx::Application::clearCachedAreas()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application16clearCachedAreasEv))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[285]"></a>touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[287]"></a>touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[2c4]"></a>touchgfx::Application::changeToStartScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx11Application19changeToStartScreenEv))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[6c7]"></a>touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*)
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::updateValue(int, unsigned short)
</UL>

<P><STRONG><a name="[6ce]"></a>touchgfx::Application::clearAllTimerWidgets()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application20clearAllTimerWidgetsEv))
<BR><BR>[Called By]<UL><LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[6db]"></a>touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::nextMoveAnimationStep()
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::handleTickEvent()
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::updateValue(int, unsigned short)
</UL>

<P><STRONG><a name="[2c1]"></a>touchgfx::Application::handlePendingScreenTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application29handlePendingScreenTransitionEv))
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[295]"></a>touchgfx::Application::draw(touchgfx::Rect&)</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Application::draw(touchgfx::Rect&) &rArr; touchgfx::Rect::restrictTo(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::restrictTo(short, short)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[294]"></a>touchgfx::Application::draw()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11Application4drawEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::draw()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[6ca]"></a>touchgfx::Application::Application()</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11ApplicationC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::clearAllTimerWidgets()
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw()
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Lock
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[711]"></a>touchgfx::Application::Application__sub_object()</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11ApplicationC2Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::MVPApplication__sub_object()
</UL>

<P><STRONG><a name="[2c3]"></a>touchgfx::Application::~Application__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11ApplicationD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::~Application__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[fa]"></a>touchgfx::BoxProgress::setProgressIndicatorPosition(short, short, short, short)</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, boxprogress.o(.text._ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::BoxProgress::setProgressIndicatorPosition(short, short, short, short) &rArr; touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short) &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
</UL>
<P><STRONG><a name="[2f0]"></a>touchgfx::BoxProgress::setAlpha(unsigned char)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, boxprogress.o(.text._ZN8touchgfx11BoxProgress8setAlphaEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::BoxProgress::setAlpha(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setAlpha(unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
</UL>
<P><STRONG><a name="[fe]"></a>touchgfx::BoxProgress::setColor(touchgfx::colortype)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, boxprogress.o(.text._ZN8touchgfx11BoxProgress8setColorENS_9colortypeE))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
</UL>
<P><STRONG><a name="[ff]"></a>touchgfx::BoxProgress::setValue(int)</STRONG> (Thumb, 276 bytes, Stack size 32 bytes, boxprogress.o(.text._ZN8touchgfx11BoxProgress8setValueEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = touchgfx::BoxProgress::setValue(int) &rArr; touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setValue(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_backwardTestScreen()
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowSensor_continue_button()
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_tightness_continue_button()
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowSensor_button()
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_tightness_button()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setupScreen()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
</UL>
<P><STRONG><a name="[bd]"></a>touchgfx::BoxProgress::BoxProgress()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, boxprogress.o(.text._ZN8touchgfx11BoxProgressC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::BoxProgress::BoxProgress() &rArr; touchgfx::Container::add(touchgfx::Drawable&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDirectionProgress::AbstractDirectionProgress__sub_object()
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[8cd]"></a>touchgfx::BoxProgress::BoxProgress__sub_object()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, boxprogress.o(.text._ZN8touchgfx11BoxProgressC2Ev), UNUSED)

<P><STRONG><a name="[2c6]"></a>touchgfx::BoxProgress::~BoxProgress__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, boxprogress.o(.text._ZN8touchgfx11BoxProgressD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::BoxProgress::~BoxProgress__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
</UL>
<P><STRONG><a name="[2c5]"></a>touchgfx::BoxProgress::~BoxProgress__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, boxprogress.o(.text._ZN8touchgfx11BoxProgressD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
</UL>
<P><STRONG><a name="[88c]"></a>touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fontmanager.o(.text._ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE))
<BR><BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[101]"></a>touchgfx::RadioButton::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, radiobutton.o(.text._ZN8touchgfx11RadioButton10setBitmapsERKNS_6BitmapES3_S3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::RadioButton::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Drawable::setWidthHeight(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(const touchgfx::Bitmap&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
</UL>
<P><STRONG><a name="[102]"></a>touchgfx::RadioButton::setSelected(bool)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, radiobutton.o(.text._ZN8touchgfx11RadioButton11setSelectedEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::RadioButton::setSelected(bool) &rArr; touchgfx::RadioButton::executeDeselectedAction()
</UL>
<BR>[Calls]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::executeDeselectedAction()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::setSelected(touchgfx::RadioButton&)
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_backwardTestScreen()
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_forwardTestScreen()
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_back_flowSensorScreen()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_singleCircuit_button()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_back_tightnessScreen()
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTightnessTestScreen()
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_singleLeak_button()
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::radioButtonClickedHandler(const touchgfx::AbstractButton&)
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[2fb]"></a>touchgfx::RadioButton::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, radiobutton.o(.text._ZN8touchgfx11RadioButton16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::RadioButton::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::RadioButton::setSelected(bool) &rArr; touchgfx::RadioButton::executeDeselectedAction()
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::setSelected(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
</UL>
<P><STRONG><a name="[6d1]"></a>touchgfx::RadioButton::executeDeselectedAction()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, radiobutton.o(.text._ZN8touchgfx11RadioButton23executeDeselectedActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::RadioButton::executeDeselectedAction()
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::setSelected(bool)
</UL>

<P><STRONG><a name="[c0]"></a>touchgfx::RadioButton::RadioButton__sub_object()</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx11RadioButtonC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::RadioButton::RadioButton__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[2f5]"></a>touchgfx::RadioButton::~RadioButton__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, radiobutton.o(.text._ZN8touchgfx11RadioButtonD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::RadioButton::~RadioButton__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
</UL>
<P><STRONG><a name="[6d2]"></a>touchgfx::floorDivMod(int, int, int&, int&)</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, texturemaptypes.o(.text._ZN8touchgfx11floorDivModEiiRiS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::floorDivMod(int, int, int&, int&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::Edge(const touchgfx::Gradients&, const touchgfx::Point3D*, int, int)
</UL>

<P><STRONG><a name="[304]"></a>touchgfx::CanvasWidget::setAlpha(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh))
<BR>[Address Reference Count : 11]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
</UL>
<P><STRONG><a name="[6d3]"></a>touchgfx::CanvasWidget::CanvasWidget__sub_object()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, canvaswidget.o(.text._ZN8touchgfx12CanvasWidgetC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::CanvasWidget::CanvasWidget__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::Line()
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object()
</UL>

<P><STRONG><a name="[300]"></a>touchgfx::CanvasWidget::~CanvasWidget__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, canvaswidget.o(.text._ZN8touchgfx12CanvasWidgetD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
</UL>
<P><STRONG><a name="[30f]"></a>touchgfx::DigitalClock::updateClock()</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, digitalclock.o(.text._ZN8touchgfx12DigitalClock11updateClockEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = touchgfx::DigitalClock::updateClock() &rArr; touchgfx::TextAreaWithWildcardBase::invalidateContent() const &rArr; touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentMinute() const
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentHour24() const
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::invalidateContent() const
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentSecond() const
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentHour12() const
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentAM() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[310]"></a>touchgfx::DigitalClock::setBaselineY(short)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, digitalclock.o(.text._ZN8touchgfx12DigitalClock12setBaselineYEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::DigitalClock::setBaselineY(short) &rArr; touchgfx::TypedText::getFont() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[311]"></a>touchgfx::DigitalClock::setTypedText(touchgfx::TypedText)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, digitalclock.o(.text._ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = touchgfx::DigitalClock::setTypedText(touchgfx::TypedText) &rArr; touchgfx::TextAreaWithWildcardBase::invalidateContent() const &rArr; touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::invalidateContent() const
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
</UL>
<BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[314]"></a>touchgfx::DigitalClock::setDisplayMode(touchgfx::DigitalClock::DisplayMode)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, digitalclock.o(.text._ZN8touchgfx12DigitalClock14setDisplayModeENS0_11DisplayModeE))
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[6a3]"></a>touchgfx::DigitalClock::displayLeadingZeroForHourIndicator(bool)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, digitalclock.o(.text._ZN8touchgfx12DigitalClock34displayLeadingZeroForHourIndicatorEb), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[316]"></a>touchgfx::DigitalClock::setAlpha(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, digitalclock.o(.text._ZN8touchgfx12DigitalClock8setAlphaEh))
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[312]"></a>touchgfx::DigitalClock::setColor(touchgfx::colortype)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, digitalclock.o(.text._ZN8touchgfx12DigitalClock8setColorENS_9colortypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = touchgfx::DigitalClock::setColor(touchgfx::colortype) &rArr; touchgfx::TextAreaWithWildcardBase::invalidateContent() const &rArr; touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::invalidateContent() const
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_brightnessSlider(int)
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleDeviceSetting()
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backDeviceS()
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_audioSlider(int)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_brightness()
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_language()
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMinutes()
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_audio()
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_time()
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_date()
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[30b]"></a>touchgfx::DigitalClock::setWidth(short)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, digitalclock.o(.text._ZN8touchgfx12DigitalClock8setWidthEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::DigitalClock::setWidth(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[30c]"></a>touchgfx::DigitalClock::setHeight(short)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, digitalclock.o(.text._ZN8touchgfx12DigitalClock9setHeightEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::DigitalClock::setHeight(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[69f]"></a>touchgfx::DigitalClock::DigitalClock()</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, digitalclock.o(.text._ZN8touchgfx12DigitalClockC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard__sub_object()
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::AbstractClock__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[8ce]"></a>touchgfx::DigitalClock::DigitalClock__sub_object()</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, digitalclock.o(.text._ZN8touchgfx12DigitalClockC2Ev), UNUSED)

<P><STRONG><a name="[309]"></a>touchgfx::DigitalClock::~DigitalClock__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, digitalclock.o(.text._ZN8touchgfx12DigitalClockD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::DigitalClock::~DigitalClock__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[308]"></a>touchgfx::DigitalClock::~DigitalClock__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, digitalclock.o(.text._ZN8touchgfx12DigitalClockD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[31d]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::handleTickEvent()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_5ImageEE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::handleTickEvent() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep() &rArr; touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
</UL>
<P><STRONG><a name="[698]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_5ImageEE18startFadeAnimationEhtPFstsstE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::setupScreen()
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::wait_logosEndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
</UL>

<P><STRONG><a name="[6da]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_5ImageEE21nextFadeAnimationStepEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep() &rArr; touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::invalidateContent() const
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[31e]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::setFadeAnimationDelay(unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_5ImageEE21setFadeAnimationDelayEt))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
</UL>
<P><STRONG><a name="[69c]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator__sub_object()</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_5ImageEEC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap__sub_object(unsigned short)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image__sub_object(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[319]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::~FadeAnimator__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_5ImageEED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::~FadeAnimator__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
</UL>
<P><STRONG><a name="[327]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::handleTickEvent()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_8TextAreaEE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::handleTickEvent() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep() &rArr; touchgfx::TextArea::invalidateContent() const &rArr; touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
</UL>
<P><STRONG><a name="[b2]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_8TextAreaEE18startFadeAnimationEhtPFstsstE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show30EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show29EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show28EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show27EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show26EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show25EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show24EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show23EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show22EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show21EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show20EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show19EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show18EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show15EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show14EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show13EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show12EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show11EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show10EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show9EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show8EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show7EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show6EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show5EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show4EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show3EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show2EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::ventInfo_show1EndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::logo_showEndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBase30wait_logosEndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
</UL>
<P><STRONG><a name="[6dc]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_8TextAreaEE21nextFadeAnimationStepEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep() &rArr; touchgfx::TextArea::invalidateContent() const &rArr; touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::invalidateContent() const
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[332]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::setFadeAnimationDelay(unsigned short)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_8TextAreaEE21setFadeAnimationDelayEt))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
</UL>
<P><STRONG><a name="[b5]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::FadeAnimator__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_8TextAreaEEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::FadeAnimator__sub_object() &rArr; touchgfx::TextArea::TextArea__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[321]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::~FadeAnimator__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx12FadeAnimatorINS_8TextAreaEED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::~FadeAnimator__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
</UL>
<P><STRONG><a name="[2a8]"></a>touchgfx::FontProvider::~FontProvider__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, applicationfontprovider.o(.text._ZN8touchgfx12FontProviderD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[334]"></a>touchgfx::GestureEvent::~GestureEvent__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx12GestureEventD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::GestureEvent::~GestureEvent__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
</UL>
<P><STRONG><a name="[c4]"></a>touchgfx::GraphLabelsY::GraphLabelsY__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx12GraphLabelsYC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::GraphLabelsY::GraphLabelsY__sub_object() &rArr; touchgfx::GraphLabelsBase::GraphLabelsBase__sub_object() &rArr; touchgfx::AbstractGraphDecoration::AbstractGraphDecoration__sub_object() &rArr; touchgfx::AbstractGraphElementNoCWR::AbstractGraphElementNoCWR__sub_object() &rArr; touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::CanvasWidget__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsBase::GraphLabelsBase__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[337]"></a>touchgfx::GraphLabelsY::~GraphLabelsY__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphlabels.o(.text._ZN8touchgfx12GraphLabelsYD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphLabelsY::~GraphLabelsY__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
</UL>
<P><STRONG><a name="[346]"></a>touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::handleTickEvent()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx12MoveAnimatorINS_9ContainerEE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::handleTickEvent() &rArr; touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::nextMoveAnimationStep() &rArr; touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::nextMoveAnimationStep()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
</UL>
<P><STRONG><a name="[699]"></a>touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, screenviewbase.o(.text._ZN8touchgfx12MoveAnimatorINS_9ContainerEE18startMoveAnimationEsstPFstsstES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>

<P><STRONG><a name="[6de]"></a>touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::nextMoveAnimationStep()</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, screenviewbase.o(.text._ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::nextMoveAnimationStep() &rArr; touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveTo(short, short)
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[347]"></a>touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::setMoveAnimationDelay(unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx12MoveAnimatorINS_9ContainerEE21setMoveAnimationDelayEt))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
</UL>
<P><STRONG><a name="[69d]"></a>touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::MoveAnimator__sub_object()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx12MoveAnimatorINS_9ContainerEEC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::Container__sub_object()
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[344]"></a>touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::~MoveAnimator__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx12MoveAnimatorINS_9ContainerEED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::~MoveAnimator__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
</UL>
<P><STRONG><a name="[34b]"></a>touchgfx::NoTransition::handleTickEvent()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx12NoTransition15handleTickEventEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[34a]"></a>touchgfx::NoTransition::~NoTransition__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx12NoTransitionD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::NoTransition::~NoTransition__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[6df]"></a>touchgfx::TextProvider::initialize(const unsigned short*, const unsigned short*, const touchgfx::FontContextualFormsTable*, ...)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initialize(const unsigned short*, const unsigned short*, const touchgfx::FontContextualFormsTable*, ...) &rArr; touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::invalidateContent() const
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[598]"></a>touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, const unsigned short*, const touchgfx::FontContextualFormsTable*, ...)
</UL>

<P><STRONG><a name="[6e1]"></a>touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider11adjustGlyphEttRPKNS_9GlyphNodeEPKNS_4FontE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*) &rArr; touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*) &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
</UL>

<P><STRONG><a name="[6e4]"></a>touchgfx::TextProvider::endOfString()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider11endOfStringEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::endOfString() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
</UL>
<BR>[Called By]<UL><LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[6e6]"></a>touchgfx::TextProvider::getNextChar()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider11getNextCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::pushFrontForce(unsigned short)
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::popFront()
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::invalidateContent() const
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[6ea]"></a>touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short) &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::peekChar(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)
</UL>

<P><STRONG><a name="[6ec]"></a>touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14applyGsubRulesEPKtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
</UL>

<P><STRONG><a name="[6ee]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::replaceAt1(unsigned short)</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, texts.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE10replaceAt1Et))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::replaceAt1(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::unicodeConverter(unsigned char)
</UL>

<P><STRONG><a name="[6ef]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::allocateFront(unsigned short)</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE13allocateFrontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::allocateFront(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushFront(unsigned short)
</UL>

<P><STRONG><a name="[6f0]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::popBack()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE7popBackEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::popBack() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
</UL>

<P><STRONG><a name="[5b9]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, texts.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::unicodeConverter(unsigned char)
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::popBack()
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short)
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>

<P><STRONG><a name="[6e5]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, texts.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::unicodeConverter(unsigned char)
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::endOfString()
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
</UL>

<P><STRONG><a name="[6e7]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::popFront()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE8popFrontEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
</UL>

<P><STRONG><a name="[6f1]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::replaceAt(unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::replaceAt(unsigned short, unsigned short)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>

<P><STRONG><a name="[6f3]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::dropFront(unsigned short)</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::dropFront(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::unicodeConverter(unsigned char)
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
</UL>

<P><STRONG><a name="[6f4]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushFront(unsigned short)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE9pushFrontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushFront(unsigned short) &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::allocateFront(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::allocateFront(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
</UL>

<P><STRONG><a name="[6f2]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::replaceAt(unsigned short, unsigned short)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::replaceAt(unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short)
</UL>

<P><STRONG><a name="[6f5]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::allocateFront(unsigned short)</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::allocateFront(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::pushFront(unsigned short)
</UL>

<P><STRONG><a name="[6e9]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::pushFrontForce(unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj2EE14pushFrontForceEt))
<BR><BR>[Called By]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
</UL>

<P><STRONG><a name="[6eb]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::peekChar(unsigned short)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj2EE8peekCharEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::peekChar(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[6f6]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj2EE8popFrontEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>

<P><STRONG><a name="[6f7]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::pushFront(unsigned short)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj2EE9pushFrontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::pushFront(unsigned short) &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::allocateFront(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::allocateFront(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
</UL>

<P><STRONG><a name="[6e3]"></a>touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)</STRONG> (Thumb, 384 bytes, Stack size 32 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*) &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>

<P><STRONG><a name="[6e8]"></a>touchgfx::TextProvider::fillInputBuffer()</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider15fillInputBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextCharInternal()
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront()
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
</UL>

<P><STRONG><a name="[5c1]"></a>touchgfx::TextProvider::getNextLigature(unsigned char)</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, texts.o(.text._ZN8touchgfx12TextProvider15getNextLigatureEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::unicodeConverter(unsigned char)
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::replaceAt1(unsigned short)
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
</UL>
<BR>[Called By]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
</UL>

<P><STRONG><a name="[5a5]"></a>touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*)
</UL>

<P><STRONG><a name="[6fd]"></a>touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
</UL>
<BR>[Called By]<UL><LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
</UL>

<P><STRONG><a name="[6fc]"></a>touchgfx::TextProvider::substituteGlyphs()</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider16substituteGlyphsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubTableBinarySearch(unsigned short, const unsigned short*, unsigned short) const
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[6fb]"></a>touchgfx::TextProvider::unicodeConverter(unsigned char)</STRONG> (Thumb, 1502 bytes, Stack size 56 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider16unicodeConverterEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::unicodeConverter(unsigned char) &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::replaceAt1(unsigned short)
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::contextualFormForChar(unsigned short) const
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::binarySearch(unsigned short, const unsigned short(*)[5], int) const
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::dropFront(unsigned short)
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>
<BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[6e2]"></a>touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)</STRONG> (Thumb, 408 bytes, Stack size 24 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>

<P><STRONG><a name="[6e0]"></a>touchgfx::TextProvider::initializeInternal()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, texts.o(.text._ZN8touchgfx12TextProvider18initializeInternalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::unicodeConverterInit()
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>

<P><STRONG><a name="[6fa]"></a>touchgfx::TextProvider::getNextCharInternal()</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider19getNextCharInternalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>

<P><STRONG><a name="[704]"></a>touchgfx::TextProvider::unicodeConverterInit()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider20unicodeConverterInitEv))
<BR><BR>[Called By]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>

<P><STRONG><a name="[6ed]"></a>touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::pushFront(unsigned short)
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushFront(unsigned short)
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::dropFront(unsigned short)
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::popBack()
</UL>
<BR>[Called By]<UL><LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)
</UL>

<P><STRONG><a name="[5a9]"></a>touchgfx::TextProvider::TextProvider()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProviderC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::TextProvider() &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::invalidateContent() const
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>

<P><STRONG><a name="[8cf]"></a>touchgfx::TextProvider::TextProvider__sub_object()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProviderC2Ev), UNUSED)

<P><STRONG><a name="[61e]"></a>touchgfx::ToggleButton::forceState(bool)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, togglebutton.o(.text._ZN8touchgfx12ToggleButton10forceStateEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::ToggleButton::forceState(bool) &rArr; touchgfx::Bitmap::getId() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getId() const
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setupScreen()
</UL>

<P><STRONG><a name="[355]"></a>touchgfx::ToggleButton::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::ToggleButton::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Drawable::setWidthHeight(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[354]"></a>touchgfx::ToggleButton::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, togglebutton.o(.text._ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ToggleButton::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[6a0]"></a>touchgfx::ToggleButton::ToggleButton__sub_object()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx12ToggleButtonC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button__sub_object()
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap__sub_object(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[350]"></a>touchgfx::ToggleButton::~ToggleButton__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, togglebutton.o(.text._ZN8touchgfx12ToggleButtonD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::ToggleButton::~ToggleButton__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[30e]"></a>touchgfx::AbstractClock::setTime12Hour(unsigned char, unsigned char, unsigned char, bool)</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, abstractclock.o(.text._ZN8touchgfx13AbstractClock13setTime12HourEhhhb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractClock::setTime12Hour(unsigned char, unsigned char, unsigned char, bool)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[30d]"></a>touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, abstractclock.o(.text._ZN8touchgfx13AbstractClock13setTime24HourEhhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMinutes()
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHours()
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::updateDate()
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_time()
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[6d9]"></a>touchgfx::AbstractClock::AbstractClock__sub_object()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, abstractclock.o(.text._ZN8touchgfx13AbstractClockC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::DigitalClock()
</UL>

<P><STRONG><a name="[356]"></a>touchgfx::AbstractClock::~AbstractClock__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractclock.o(.text._ZN8touchgfx13AbstractClockD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[c5]"></a>touchgfx::BoxWithBorder::BoxWithBorder__sub_object()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx13BoxWithBorderC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::BoxWithBorder::BoxWithBorder__sub_object() &rArr; touchgfx::Box::Box__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[357]"></a>touchgfx::BoxWithBorder::~BoxWithBorder__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, boxwithborder.o(.text._ZN8touchgfx13BoxWithBorderD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::BoxWithBorder::~BoxWithBorder__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
</UL>
<P><STRONG><a name="[2ad]"></a>touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&) &rArr; touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Calls]<UL><LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[2ba]"></a>touchgfx::DMA_Interface::enableAlpha(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface11enableAlphaEh))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[2bb]"></a>touchgfx::DMA_Interface::disableAlpha()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface12disableAlphaEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[2b7]"></a>touchgfx::DMA_Interface::seedExecution()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface13seedExecutionEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[708]"></a>touchgfx::DMA_Interface::isDmaQueueEmpty()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::isDmaQueueEmpty()
</UL>
<BR>[Calls]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
</UL>

<P><STRONG><a name="[2b6]"></a>touchgfx::DMA_Interface::executeCompleted()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface16executeCompletedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::executeCompleted()
</UL>
<BR>[Calls]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[2bd]"></a>touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[2bc]"></a>touchgfx::DMA_Interface::enableCopyWithTransparentPixels(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface31enableCopyWithTransparentPixelsEh))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[2ae]"></a>touchgfx::DMA_Interface::flush()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32dma.o(.text._ZN8touchgfx13DMA_Interface5flushEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[2b0]"></a>touchgfx::DMA_Interface::start()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface5startEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::start()
</UL>
<BR>[Calls]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[2b5]"></a>touchgfx::DMA_Interface::execute()</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface7executeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::DMA_Interface::execute() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[600]"></a>touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, generatedfont.o(.text._ZN8touchgfx13GeneratedFontC2EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_30_4bpp()
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_25_4bpp()
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_20_4bpp()
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_16_4bpp()
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_12_4bpp()
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanai_20_4bpp()
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_40_4bpp()
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_36_4bpp()
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_34_4bpp()
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_DUBAI_LIGHT_TTF_20_4bpp()
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_DUBAI_BOLD_TTF_30_4bpp()
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_DUBAI_BOLD_TTF_26_4bpp()
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_DUBAI_BOLD_TTF_20_4bpp()
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_AGENCYR_TTF_20_4bpp()
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_AGENCYR_TTF_16_4bpp()
</UL>

<P><STRONG><a name="[8d0]"></a>touchgfx::GeneratedFont::GeneratedFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, generatedfont.o(.text._ZN8touchgfx13GeneratedFontC2EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE), UNUSED)

<P><STRONG><a name="[35c]"></a>touchgfx::GeneratedFont::~GeneratedFont__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, generatedfont.o(.text._ZN8touchgfx13GeneratedFontD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::GeneratedFont::~GeneratedFont__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[f3]"></a>touchgfx::PainterRGB565::setColor(touchgfx::colortype)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::PainterRGB565::setColor(touchgfx::colortype)
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{-8} to touchgfx::PainterRGB565::setColor(touchgfx::colortype)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[b7]"></a>touchgfx::PainterRGB565::PainterRGB565__sub_object(touchgfx::colortype)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx13PainterRGB565C2ENS_9colortypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::PainterRGB565::PainterRGB565__sub_object(touchgfx::colortype) &rArr; touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[370]"></a>touchgfx::PainterRGB565::~PainterRGB565__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, painterrgb565.o(.text._ZN8touchgfx13PainterRGB565D0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::PainterRGB565::~PainterRGB565__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[36f]"></a>touchgfx::PainterRGB565::~PainterRGB565__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, painterrgb565.o(.text._ZN8touchgfx13PainterRGB565D2Ev))
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[2fe]"></a>touchgfx::AbstractButton::executeAction()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, screenview.o(.text._ZN8touchgfx14AbstractButton13executeActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractButton::executeAction()
</UL>
<BR>[Called By]<UL><LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMainScreen()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[37c]"></a>touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, abstractbutton.o(.text._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[28a]"></a>touchgfx::MVPApplication::handlePendingScreenTransition()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplication.o(.text._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv))
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
</UL>
<P><STRONG><a name="[8d1]"></a>touchgfx::MVPApplication::evaluatePendingScreenTransition()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, frontendapplication.o(.text._ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv), UNUSED)

<P><STRONG><a name="[6ad]"></a>touchgfx::MVPApplication::MVPApplication__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14MVPApplicationC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[378]"></a>touchgfx::MVPApplication::~MVPApplication__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14MVPApplicationD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::MVPApplication::~MVPApplication__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
</UL>
<P><STRONG><a name="[6ab]"></a>T2* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 312 bytes, Stack size 32 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 5504 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; screenView::screenView() &rArr; screenViewBase::screenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter::screenPresenter(screenView&)
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::bindTransition(touchgfx::Transition&)
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::clearAllTimerWidgets()
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::screenView()
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoscreenScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[714]"></a>touchgfx::AbstractPainter::compatibleFramebuffer(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx15AbstractPainter21compatibleFramebufferENS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractPainter::compatibleFramebuffer(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Called By]<UL><LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()
</UL>

<P><STRONG><a name="[3fd]"></a>touchgfx::AbstractPainter::~AbstractPainter__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx15AbstractPainterD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[f9]"></a>touchgfx::ButtonWithLabel::updateTextPosition()</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, screenviewbase.o(.text._ZN8touchgfx15ButtonWithLabel18updateTextPositionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::ButtonWithLabel::updateTextPosition() &rArr; touchgfx::TypedText::getFont() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[bc]"></a>touchgfx::ButtonWithLabel::ButtonWithLabel()</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, buttonwithlabel.o(.text._ZN8touchgfx15ButtonWithLabelC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::ButtonWithLabel::ButtonWithLabel() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[8d2]"></a>touchgfx::ButtonWithLabel::ButtonWithLabel__sub_object()</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, buttonwithlabel.o(.text._ZN8touchgfx15ButtonWithLabelC2Ev), UNUSED)

<P><STRONG><a name="[37a]"></a>touchgfx::ButtonWithLabel::~ButtonWithLabel__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, buttonwithlabel.o(.text._ZN8touchgfx15ButtonWithLabelD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::ButtonWithLabel::~ButtonWithLabel__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[379]"></a>touchgfx::ButtonWithLabel::~ButtonWithLabel__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, buttonwithlabel.o(.text._ZN8touchgfx15ButtonWithLabelD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[b1]"></a>touchgfx::EasingEquations::linearEaseIn(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, easingequations.o(.text._ZN8touchgfx15EasingEquations12linearEaseInEtsst))
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)
</UL>
<BR>[Address Reference Count : 9]<UL><LI> screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show7EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
<LI> screenviewbase.o(.text._ZN14screenViewBase34ventInfo_show8EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
<LI> screenviewbase.o(.text._ZN14screenViewBase29logo_showEndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_5ImageEEE)
<LI> screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show25EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
<LI> screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show26EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
<LI> screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show27EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
<LI> screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show28EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
<LI> screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show29EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
<LI> screenviewbase.o(.text._ZN14screenViewBase35ventInfo_show30EndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_8TextAreaEEE)
</UL>
<P><STRONG><a name="[b0]"></a>touchgfx::EasingEquations::linearEaseOut(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, easingequations.o(.text._ZN8touchgfx15EasingEquations13linearEaseOutEtsst))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBase11setupScreenEv)
</UL>
<P><STRONG><a name="[111]"></a>touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, easingequations.o(.text._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst))
<BR><BR>[Calls]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::roundRespectSign(float)
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::linearEaseIn(unsigned short, short, short, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicatorC2Ev)
</UL>
<P><STRONG><a name="[715]"></a>touchgfx::EasingEquations::roundRespectSign(float)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, easingequations.o(.text._ZN8touchgfx15EasingEquations16roundRespectSignEf))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)
</UL>

<P><STRONG><a name="[43f]"></a>touchgfx::GenericCallback&lang;const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::~GenericCallback__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx15GenericCallbackIRKNS_12FadeAnimatorINS_5ImageEEEvvED2Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
</UL>
<P><STRONG><a name="[443]"></a>touchgfx::GenericCallback&lang;const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&, void, void&rang;::~GenericCallback__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx15GenericCallbackIRKNS_12FadeAnimatorINS_8TextAreaEEEvvED2Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_8TextAreaEEEvvEE)
</UL>
<P><STRONG><a name="[447]"></a>touchgfx::GenericCallback&lang;const touchgfx::AbstractButton&, void, void&rang;::~GenericCallback__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED2Ev))
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackINS_16RadioButtonGroupILt2EEERKNS_14AbstractButtonEvvEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[44b]"></a>touchgfx::GenericCallback&lang;const touchgfx::Slider&, int, void&rang;::~GenericCallback__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx15GenericCallbackIRKNS_6SliderEivED2Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_6SliderEivEE)
</UL>
<P><STRONG><a name="[44f]"></a>touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx15GenericCallbackIvvvED2Ev))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[33a]"></a>touchgfx::GraphLabelsBase::invalidateGraphPointAt(short)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, graphlabels.o(.text._ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs))
<BR>[Address Reference Count : 2]<UL><LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
</UL>
<P><STRONG><a name="[108]"></a>touchgfx::GraphLabelsBase::setScale(int)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx15GraphLabelsBase8setScaleEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphLabelsBase::setScale(int) &rArr; touchgfx::AbstractDataGraph::convertToNewScale(int, int, int) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::convertToNewScale(int, int, int)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[6dd]"></a>touchgfx::GraphLabelsBase::GraphLabelsBase__sub_object()</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx15GraphLabelsBaseC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = touchgfx::GraphLabelsBase::GraphLabelsBase__sub_object() &rArr; touchgfx::AbstractGraphDecoration::AbstractGraphDecoration__sub_object() &rArr; touchgfx::AbstractGraphElementNoCWR::AbstractGraphElementNoCWR__sub_object() &rArr; touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::CanvasWidget__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText__sub_object(unsigned short)
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphDecoration::AbstractGraphDecoration__sub_object()
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsY::GraphLabelsY__sub_object()
</UL>

<P><STRONG><a name="[37d]"></a>touchgfx::GraphLabelsBase::~GraphLabelsBase__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, graphlabels.o(.text._ZN8touchgfx15GraphLabelsBaseD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
</UL>
<P><STRONG><a name="[336]"></a>touchgfx::GraphLabelsBase::~GraphLabelsBase__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, graphlabels.o(.text._ZN8touchgfx15GraphLabelsBaseD2Ev))
<BR>[Address Reference Count : 2]<UL><LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
</UL>
<P><STRONG><a name="[296]"></a>touchgfx::TouchController::~TouchController__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32touchcontroller.o(.text._ZN8touchgfx15TouchControllerD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[2c2]"></a>touchgfx::UIEventListener::~UIEventListener__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx15UIEventListenerD2Ev))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[646]"></a>touchgfx::DynamicDataGraph::addDataPoint(float)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screenview.o(.text._ZN8touchgfx16DynamicDataGraph12addDataPointEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::DynamicDataGraph::addDataPoint(float) &rArr; touchgfx::DynamicDataGraph::addDataPointScaled(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaledY(float) const
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPointScaled(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_dataButton4()
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_dataButton3()
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_dataButton2()
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_dataButton1()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[aa]"></a>touchgfx::DynamicDataGraph::addDataPoint(int)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenview.o(.text._ZN8touchgfx16DynamicDataGraph12addDataPointEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DynamicDataGraph::addDataPoint(int) &rArr; touchgfx::DynamicDataGraph::addDataPointScaled(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPointScaled(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_dataButton4()
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_dataButton3()
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_dataButton2()
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_dataButton1()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.text._ZN10screenView11setupScreenEv)
</UL>
<P><STRONG><a name="[3b2]"></a>touchgfx::DynamicDataGraph::setXAxisScale(float)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3b0]"></a>touchgfx::DynamicDataGraph::setXAxisScale(int)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3c0]"></a>touchgfx::DynamicDataGraph::beforeAddValue()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph14beforeAddValueEv))
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
</UL>
<P><STRONG><a name="[3b3]"></a>touchgfx::DynamicDataGraph::setXAxisFactor(float)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DynamicDataGraph::setXAxisFactor(float)
</UL>
<BR>[Calls]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaledX(float) const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3b1]"></a>touchgfx::DynamicDataGraph::setXAxisFactor(int)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3bb]"></a>touchgfx::DynamicDataGraph::setXAxisOffset(float)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DynamicDataGraph::setXAxisOffset(float)
</UL>
<BR>[Calls]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaledX(float) const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3ba]"></a>touchgfx::DynamicDataGraph::setXAxisOffset(int)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[719]"></a>touchgfx::DynamicDataGraph::addDataPointScaled(int)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DynamicDataGraph::addDataPointScaled(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(int)
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(float)
</UL>

<P><STRONG><a name="[3c3]"></a>touchgfx::DynamicDataGraph::setXAxisScaleScaled(int)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3b4]"></a>touchgfx::DynamicDataGraph::setXAxisFactorScaled(int)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3bc]"></a>touchgfx::DynamicDataGraph::setXAxisOffsetScaled(int)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[38f]"></a>touchgfx::DynamicDataGraph::setGraphRangeXAutoScaled(bool, int)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::DynamicDataGraph::setGraphRangeXAutoScaled(bool, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2intX(int) const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[393]"></a>touchgfx::DynamicDataGraph::setGraphRangeYAutoScaled(bool, int)</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::DynamicDataGraph::setGraphRangeYAutoScaled(bool, int)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[103]"></a>touchgfx::DynamicDataGraph::setScale(int, bool)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraph8setScaleEib))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DynamicDataGraph::setScale(int, bool)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[385]"></a>touchgfx::DynamicDataGraph::setScaleX(int, bool)</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph9setScaleXEib))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::DynamicDataGraph::setScaleX(int, bool) &rArr; touchgfx::AbstractDataGraph::setScaleX(int, bool) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setScaleX(int, bool)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[387]"></a>touchgfx::DynamicDataGraph::setScaleY(int, bool)</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph9setScaleYEib))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::DynamicDataGraph::setScaleY(int, bool) &rArr; OUTLINED_FUNCTION_2 &rArr; touchgfx::AbstractDataGraph::convertToNewScale(int, int, int) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setScaleY(int, bool)
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[71c]"></a>touchgfx::DynamicDataGraph::DynamicDataGraph__sub_object(short, int*)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx16DynamicDataGraphC2EsPi))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::DynamicDataGraph::DynamicDataGraph__sub_object(short, int*) &rArr; touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short) &rArr; touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short) &rArr; touchgfx::AbstractDataGraph::updateAreasPosition() &rArr; OUTLINED_FUNCTION_0 &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphWrapAndClearData::GraphWrapAndClearData__sub_object(short, int*)
</UL>

<P><STRONG><a name="[37f]"></a>touchgfx::DynamicDataGraph::~DynamicDataGraph__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraphD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
</UL>
<P><STRONG><a name="[3c7]"></a>touchgfx::GraphElementArea::invalidateGraphPointAt(short)</STRONG> (Thumb, 266 bytes, Stack size 64 bytes, graphelements.o(.text._ZN8touchgfx16GraphElementArea22invalidateGraphPointAtEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = touchgfx::GraphElementArea::invalidateGraphPointAt(short) &rArr; touchgfx::AbstractGraphElement::convertToGraphScaleY(const touchgfx::AbstractDataGraph*, int, int) const &rArr; touchgfx::AbstractDataGraph::convertToNewScale(int, int, int) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::convertToGraphScaleY(const touchgfx::AbstractDataGraph*, int, int) const
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
</UL>
<P><STRONG><a name="[10b]"></a>touchgfx::GraphElementArea::setScale(int)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx16GraphElementArea8setScaleEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphElementArea::setScale(int) &rArr; touchgfx::AbstractDataGraph::convertToNewScale(int, int, int) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::convertToNewScale(int, int, int)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[c7]"></a>touchgfx::GraphElementArea::GraphElementArea__sub_object()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx16GraphElementAreaC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::GraphElementArea::GraphElementArea__sub_object() &rArr; touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::CanvasWidget__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[3c5]"></a>touchgfx::GraphElementArea::~GraphElementArea__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphelements.o(.text._ZN8touchgfx16GraphElementAreaD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphElementArea::~GraphElementArea__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
</UL>
<P><STRONG><a name="[3ca]"></a>touchgfx::GraphElementLine::invalidateGraphPointAt(short)</STRONG> (Thumb, 206 bytes, Stack size 48 bytes, graphelements.o(.text._ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = touchgfx::GraphElementLine::invalidateGraphPointAt(short) &rArr; touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Calls]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[c2]"></a>touchgfx::GraphElementLine::GraphElementLine__sub_object()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx16GraphElementLineC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::GraphElementLine::GraphElementLine__sub_object() &rArr; touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::CanvasWidget__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[3c8]"></a>touchgfx::GraphElementLine::~GraphElementLine__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphelements.o(.text._ZN8touchgfx16GraphElementLineD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphElementLine::~GraphElementLine__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[3d0]"></a>touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::setSelected(touchgfx::RadioButton&)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, screenview.o(.text._ZN8touchgfx16RadioButtonGroupILt2EE11setSelectedERNS_11RadioButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::setSelected(touchgfx::RadioButton&) &rArr; touchgfx::RadioButton::setSelected(bool) &rArr; touchgfx::RadioButton::executeDeselectedAction()
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::setSelected(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleLanguage()
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTrends()
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_trends()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
</UL>
<P><STRONG><a name="[3d1]"></a>touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::setDeselectionEnabled(bool)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx16RadioButtonGroupILt2EE21setDeselectionEnabledEb))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
</UL>
<P><STRONG><a name="[3d3]"></a>touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::radioButtonClickedHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, screenviewbase.o(.text._ZN8touchgfx16RadioButtonGroupILt2EE25radioButtonClickedHandlerERKNS_14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::radioButtonClickedHandler(const touchgfx::AbstractButton&) &rArr; touchgfx::RadioButton::setSelected(bool) &rArr; touchgfx::RadioButton::executeDeselectedAction()
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::setSelected(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
</UL>
<P><STRONG><a name="[3d4]"></a>touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::radioButtonDeselectedHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx16RadioButtonGroupILt2EE28radioButtonDeselectedHandlerERKNS_14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::radioButtonDeselectedHandler(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
</UL>
<P><STRONG><a name="[10c]"></a>touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::add(touchgfx::RadioButton&)</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx16RadioButtonGroupILt2EE3addERNS_11RadioButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::add(touchgfx::RadioButton&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
<LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[c8]"></a>touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::RadioButtonGroup__sub_object()</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx16RadioButtonGroupILt2EEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::RadioButtonGroup__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[3cc]"></a>touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::~RadioButtonGroup__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx16RadioButtonGroupILt2EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::~RadioButtonGroup__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
</UL>
<P><STRONG><a name="[3cb]"></a>touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::~RadioButtonGroup__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx16RadioButtonGroupILt2EED2Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
</UL>
<P><STRONG><a name="[74d]"></a>touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, touchcalibration.o(.text._ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[728]"></a>touchgfx::TouchCalibration::clzu(unsigned)</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, touchcalibration.o(.text._ZN8touchgfx16TouchCalibration4clzuEj))
<BR><BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>

<P><STRONG><a name="[110]"></a>touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, touchcalibration.o(.text._ZN8touchgfx16TouchCalibration6muldivEiiiiRi))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::clzu(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchcalibration.o(.text._ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE)
</UL>
<P><STRONG><a name="[729]"></a>touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, touchcalibration.o(.text._ZN8touchgfx16TouchCalibration7muldivuEjjjjjRj))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::clzu(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>

<P><STRONG><a name="[863]"></a>touchgfx::AbstractDataGraph::scaled2int(int, int)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph10scaled2intEii))
<BR><BR>[Called By]<UL><LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2intY(int) const
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2intX(int) const
</UL>

<P><STRONG><a name="[865]"></a>touchgfx::AbstractDataGraph::float2scaled(float, int)</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, screenview.o(.text._ZN8touchgfx17AbstractDataGraph12float2scaledEfi))
<BR><BR>[Called By]<UL><LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaledY(float) const
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaledX(float) const
</UL>

<P><STRONG><a name="[109]"></a>touchgfx::AbstractDataGraph::addLeftElement(touchgfx::AbstractGraphDecoration&)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractDataGraph::addLeftElement(touchgfx::AbstractGraphDecoration&) &rArr; OUTLINED_FUNCTION_5 &rArr; touchgfx::Container::add(touchgfx::Drawable&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[38b]"></a>touchgfx::AbstractDataGraph::setGraphRangeX(float, float)</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDataGraph::setGraphRangeX(float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaledX(float) const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[38a]"></a>touchgfx::AbstractDataGraph::setGraphRangeX(int, int)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraph::setGraphRangeX(int, int)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[391]"></a>touchgfx::AbstractDataGraph::setGraphRangeY(float, float)</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDataGraph::setGraphRangeY(float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaledY(float) const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[390]"></a>touchgfx::AbstractDataGraph::setGraphRangeY(int, int)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screenview.o(.text._ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraph::setGraphRangeY(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_dataButton4()
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_dataButton3()
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_dataButton2()
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_dataButton1()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[107]"></a>touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&) &rArr; OUTLINED_FUNCTION_5 &rArr; touchgfx::Container::add(touchgfx::Drawable&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[384]"></a>touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)
</UL>
<BR>[Calls]<UL><LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[383]"></a>touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Calls]<UL><LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[10f]"></a>touchgfx::AbstractDataGraph::convertToNewScale(int, int, int)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::AbstractDataGraph::convertToNewScale(int, int, int) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::convertToGraphScaleY(const touchgfx::AbstractDataGraph*, int, int) const
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridBase::setScale(int)
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::setScale(int)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsBase::setScale(int)
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.text._ZN8touchgfx16DynamicDataGraph9setScaleXEib)
</UL>
<P><STRONG><a name="[104]"></a>touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short)</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short) &rArr; touchgfx::AbstractDataGraph::updateAreasPosition() &rArr; OUTLINED_FUNCTION_0 &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Called By]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[38e]"></a>touchgfx::AbstractDataGraph::setGraphRangeXAuto(bool, float)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractDataGraph::setGraphRangeXAuto(bool, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaledX(float) const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[38d]"></a>touchgfx::AbstractDataGraph::setGraphRangeXAuto(bool, int)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraph::setGraphRangeXAuto(bool, int)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[395]"></a>touchgfx::AbstractDataGraph::setGraphRangeYAuto(bool, float)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractDataGraph::setGraphRangeYAuto(bool, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaledY(float) const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[394]"></a>touchgfx::AbstractDataGraph::setGraphRangeYAuto(bool, int)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraph::setGraphRangeYAuto(bool, int)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[105]"></a>touchgfx::AbstractDataGraph::setGraphAreaPadding(short, short, short, short)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraph::setGraphAreaPadding(short, short, short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[72c]"></a>touchgfx::AbstractDataGraph::updateAreasPosition()</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::AbstractDataGraph::updateAreasPosition() &rArr; OUTLINED_FUNCTION_0 &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setHeight(short)
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setWidth(short)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short)
</UL>

<P><STRONG><a name="[38c]"></a>touchgfx::AbstractDataGraph::setGraphRangeXScaled(int, int)</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractDataGraph::setGraphRangeXScaled(int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[392]"></a>touchgfx::AbstractDataGraph::setGraphRangeYScaled(int, int)</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractDataGraph::setGraphRangeYScaled(int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[72d]"></a>touchgfx::AbstractDataGraph::invalidateGraphPointAt(short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractDataGraph::invalidateGraphPointAt(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphWrapAndClearData::addValue(int)
</UL>

<P><STRONG><a name="[72f]"></a>touchgfx::AbstractDataGraph::invalidateXAxisPointAt(short)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractDataGraph::invalidateXAxisPointAt(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
</UL>
<BR>[Called By]<UL><LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateAllXAxisPoints()
</UL>

<P><STRONG><a name="[730]"></a>touchgfx::AbstractDataGraph::invalidateAllXAxisPoints()</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::AbstractDataGraph::invalidateAllXAxisPoints() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateXAxisPointAt(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphWrapAndClearData::clear()
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphWrapAndClearData::addValue(int)
</UL>

<P><STRONG><a name="[3a3]"></a>touchgfx::AbstractDataGraph::getNearestIndexForScreenXY(short, short, short&)</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::AbstractDataGraph::getNearestIndexForScreenXY(short, short, short&) &rArr; touchgfx::AbstractDataGraph::indexToScreenY(short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::indexToScreenY(short) const
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::indexToScreenX(short) const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3a2]"></a>touchgfx::AbstractDataGraph::clear()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractDataGraph::clear() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphWrapAndClearData::clear()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
</UL>
<P><STRONG><a name="[389]"></a>touchgfx::AbstractDataGraph::setAlpha(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraph8setAlphaEh))
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[381]"></a>touchgfx::AbstractDataGraph::setWidth(short)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph8setWidthEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::AbstractDataGraph::setWidth(short) &rArr; touchgfx::AbstractDataGraph::updateAreasPosition() &rArr; OUTLINED_FUNCTION_0 &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[382]"></a>touchgfx::AbstractDataGraph::setHeight(short)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph9setHeightEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::AbstractDataGraph::setHeight(short) &rArr; touchgfx::AbstractDataGraph::updateAreasPosition() &rArr; OUTLINED_FUNCTION_0 &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3d6]"></a>touchgfx::AbstractDataGraph::setScaleX(int, bool)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph9setScaleXEib))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractDataGraph::setScaleX(int, bool) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::setScaleX(int, bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
</UL>
<P><STRONG><a name="[3d8]"></a>touchgfx::AbstractDataGraph::setScaleY(int, bool)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph9setScaleYEib))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractDataGraph::setScaleY(int, bool) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::setScaleY(int, bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
</UL>
<P><STRONG><a name="[71d]"></a>touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short)</STRONG> (Thumb, 272 bytes, Stack size 48 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraphC2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short) &rArr; touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short) &rArr; touchgfx::AbstractDataGraph::updateAreasPosition() &rArr; OUTLINED_FUNCTION_0 &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short)
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::DynamicDataGraph__sub_object(short, int*)
</UL>

<P><STRONG><a name="[3d5]"></a>touchgfx::AbstractDataGraph::~AbstractDataGraph__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraphD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
</UL>
<P><STRONG><a name="[37e]"></a>touchgfx::AbstractDataGraph::~AbstractDataGraph__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx17AbstractDataGraphD2Ev))
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3dc]"></a>touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[3df]"></a>touchgfx::AbstractPartition::clear()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[3de]"></a>touchgfx::AbstractPartition::indexOf(const void*)</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractPartition::indexOf(const void*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[3db]"></a>touchgfx::AbstractPartition::allocate(unsigned short)</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractPartition::allocate(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[852]"></a>touchgfx::AbstractPartition::AbstractPartition__sub_object()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
</UL>

<P><STRONG><a name="[3da]"></a>touchgfx::AbstractPartition::~AbstractPartition__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[8d3]"></a>touchgfx::AbstractPartition::~AbstractPartition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev), UNUSED)

<P><STRONG><a name="[af]"></a>touchgfx::AbstractPartition::~AbstractPartition__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
</UL>
<BR>[Address Reference Count : 5]<UL><LI> touchgfxconfiguration.o(.text._ZN12FrontendHeapD2Ev)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[c3]"></a>touchgfx::GraphElementGridY::GraphElementGridY__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx17GraphElementGridYC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = touchgfx::GraphElementGridY::GraphElementGridY__sub_object() &rArr; touchgfx::GraphElementGridBase::GraphElementGridBase__sub_object() &rArr; touchgfx::AbstractGraphElementNoCWR::AbstractGraphElementNoCWR__sub_object() &rArr; touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::CanvasWidget__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridBase::GraphElementGridBase__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[3e0]"></a>touchgfx::GraphElementGridY::~GraphElementGridY__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx17GraphElementGridYD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphElementGridY::~GraphElementGridY__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
</UL>
<P><STRONG><a name="[c6]"></a>touchgfx::GraphWrapAndClear&lang;(short)200&rang;::GraphWrapAndClear__sub_object()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx17GraphWrapAndClearILs200EEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphWrapAndClear&lang;(short)200&rang;::GraphWrapAndClear__sub_object() &rArr; touchgfx::GraphWrapAndClearData::GraphWrapAndClearData__sub_object(short, int*) &rArr; touchgfx::DynamicDataGraph::DynamicDataGraph__sub_object(short, int*) &rArr; touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short) &rArr; touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short) &rArr; touchgfx::AbstractDataGraph::updateAreasPosition() &rArr; OUTLINED_FUNCTION_0 &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphWrapAndClearData::GraphWrapAndClearData__sub_object(short, int*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[3ef]"></a>touchgfx::GraphWrapAndClear&lang;(short)200&rang;::~GraphWrapAndClear__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx17GraphWrapAndClearILs200EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphWrapAndClear&lang;(short)200&rang;::~GraphWrapAndClear__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
</UL>
<P><STRONG><a name="[c1]"></a>touchgfx::GraphWrapAndClear&lang;(short)300&rang;::GraphWrapAndClear__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx17GraphWrapAndClearILs300EEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphWrapAndClear&lang;(short)300&rang;::GraphWrapAndClear__sub_object() &rArr; touchgfx::GraphWrapAndClearData::GraphWrapAndClearData__sub_object(short, int*) &rArr; touchgfx::DynamicDataGraph::DynamicDataGraph__sub_object(short, int*) &rArr; touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short) &rArr; touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short) &rArr; touchgfx::AbstractDataGraph::updateAreasPosition() &rArr; OUTLINED_FUNCTION_0 &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphWrapAndClearData::GraphWrapAndClearData__sub_object(short, int*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[3f3]"></a>touchgfx::GraphWrapAndClear&lang;(short)300&rang;::~GraphWrapAndClear__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx17GraphWrapAndClearILs300EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphWrapAndClear&lang;(short)300&rang;::~GraphWrapAndClear__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
</UL>
<P><STRONG><a name="[3f6]"></a>touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[3f9]"></a>touchgfx::LockFreeDMA_Queue::pop()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue3popEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pop() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[3fa]"></a>touchgfx::LockFreeDMA_Queue::first()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue5firstEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[3f5]"></a>touchgfx::LockFreeDMA_Queue::isFull()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue6isFullEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[3f4]"></a>touchgfx::LockFreeDMA_Queue::isEmpty()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[6b2]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueC2EPNS_6BlitOpEm))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)
</UL>
<BR>[Called By]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
</UL>

<P><STRONG><a name="[8d4]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue__sub_object(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueC2EPNS_6BlitOpEm), UNUSED)

<P><STRONG><a name="[3f8]"></a>touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[724]"></a>touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx20AbstractGraphElementC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::CanvasWidget__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::CanvasWidget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElementNoCWR::AbstractGraphElementNoCWR__sub_object()
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::GraphElementLine__sub_object()
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::GraphElementArea__sub_object()
</UL>

<P><STRONG><a name="[3fb]"></a>touchgfx::AbstractGraphElement::~AbstractGraphElement__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx20AbstractGraphElementD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
</UL>
<P><STRONG><a name="[6a1]"></a>touchgfx::CanvasWidgetRenderer::setupBuffer(unsigned char*, unsigned)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(.text._ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[735]"></a>touchgfx::CanvasWidgetRenderer::getOutlineBuffer()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(.text._ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::CanvasWidgetRenderer::getOutlineBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>

<P><STRONG><a name="[736]"></a>touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(.text._ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::CanvasWidgetRenderer::getOutlineBufferSize() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>

<P><STRONG><a name="[777]"></a>touchgfx::CanvasWidgetRenderer::hasBuffer()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(.text._ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[3e2]"></a>touchgfx::GraphElementGridBase::invalidateGraphPointAt(short)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs))
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
</UL>
<P><STRONG><a name="[106]"></a>touchgfx::GraphElementGridBase::setScale(int)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx20GraphElementGridBase8setScaleEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphElementGridBase::setScale(int) &rArr; touchgfx::AbstractDataGraph::convertToNewScale(int, int, int) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::convertToNewScale(int, int, int)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[733]"></a>touchgfx::GraphElementGridBase::GraphElementGridBase__sub_object()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx20GraphElementGridBaseC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::GraphElementGridBase::GraphElementGridBase__sub_object() &rArr; touchgfx::AbstractGraphElementNoCWR::AbstractGraphElementNoCWR__sub_object() &rArr; touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::CanvasWidget__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElementNoCWR::AbstractGraphElementNoCWR__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridY::GraphElementGridY__sub_object()
</UL>

<P><STRONG><a name="[3fc]"></a>touchgfx::GraphElementGridBase::~GraphElementGridBase__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, graphelements.o(.text._ZN8touchgfx20GraphElementGridBaseD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
</UL>
<P><STRONG><a name="[710]"></a>touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx21AbstractPainterRGB565C2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainter::compatibleFramebuffer(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::PainterRGB565__sub_object(touchgfx::colortype)
</UL>

<P><STRONG><a name="[3fe]"></a>touchgfx::AbstractPainterRGB565::~AbstractPainterRGB565__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx21AbstractPainterRGB565D0Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[6c4]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned char*, short, short)
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyAreaFromTFTToClientBuffer(const touchgfx::Rect&)
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[5cd]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_99
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_90
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyAreaFromTFTToClientBuffer(const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[84a]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_))
<BR><BR>[Called By]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[738]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[6c3]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
</UL>

<P><STRONG><a name="[74e]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_))
<BR><BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[3f0]"></a>touchgfx::GraphWrapAndClearData::beforeAddValue()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData14beforeAddValueEv))
<BR>[Address Reference Count : 3]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[ac]"></a>touchgfx::GraphWrapAndClearData::clear()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::GraphWrapAndClearData::clear() &rArr; touchgfx::AbstractDataGraph::invalidateAllXAxisPoints() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::clear()
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateAllXAxisPoints()
</UL>
<BR>[Address Reference Count : 10]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> screenview.o(.text._ZN10screenView16click_MonitoringEv)
<LI> screenview.o(.text._ZN10screenView17click_backSettingEv)
<LI> screenview.o(.text._ZN10screenView17click_dataButton1Ev)
<LI> screenview.o(.text._ZN10screenView17click_dataButton2Ev)
<LI> screenview.o(.text._ZN10screenView17click_dataButton3Ev)
<LI> screenview.o(.text._ZN10screenView17click_dataButton4Ev)
<LI> screenview.o(.text._ZN10screenView9startVentEv)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3f1]"></a>touchgfx::GraphWrapAndClearData::addValue(int)</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearData8addValueEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::GraphWrapAndClearData::addValue(int) &rArr; touchgfx::AbstractDataGraph::invalidateAllXAxisPoints() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateAllXAxisPoints()
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateGraphPointAt(short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[734]"></a>touchgfx::GraphWrapAndClearData::GraphWrapAndClearData__sub_object(short, int*)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx21GraphWrapAndClearDataC2EsPi))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphWrapAndClearData::GraphWrapAndClearData__sub_object(short, int*) &rArr; touchgfx::DynamicDataGraph::DynamicDataGraph__sub_object(short, int*) &rArr; touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short) &rArr; touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short) &rArr; touchgfx::AbstractDataGraph::updateAreasPosition() &rArr; OUTLINED_FUNCTION_0 &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::DynamicDataGraph__sub_object(short, int*)
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphWrapAndClear&lang;(short)300&rang;::GraphWrapAndClear__sub_object()
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphWrapAndClear&lang;(short)200&rang;::GraphWrapAndClear__sub_object()
</UL>

<P><STRONG><a name="[401]"></a>touchgfx::GraphWrapAndClearData::~GraphWrapAndClearData__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphwrapandclear.o(.text._ZN8touchgfx21GraphWrapAndClearDataD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphWrapAndClearData::~GraphWrapAndClearData__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[717]"></a>touchgfx::AbstractGraphDecoration::AbstractGraphDecoration__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx23AbstractGraphDecorationC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::AbstractGraphDecoration::AbstractGraphDecoration__sub_object() &rArr; touchgfx::AbstractGraphElementNoCWR::AbstractGraphElementNoCWR__sub_object() &rArr; touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::CanvasWidget__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElementNoCWR::AbstractGraphElementNoCWR__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsBase::GraphLabelsBase__sub_object()
</UL>

<P><STRONG><a name="[402]"></a>touchgfx::AbstractGraphDecoration::~AbstractGraphDecoration__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx23AbstractGraphDecorationD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
</UL>
<P><STRONG><a name="[a9]"></a>touchgfx::TextAreaWithOneWildcard::setWildcard1(const unsigned short*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenview.o(.text._ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt))
<BR><BR>[Called By]<UL><LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePIP()
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVT()
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTi()
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRR()
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleIE()
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VT()
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Ti()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RR()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IE()
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_backwardTestScreen()
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowSensor_continue_button()
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_tightness_continue_button()
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowShapeBackupScreen()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_singleCircuit_button()
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTimeBackupScreen()
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControlBackupScreen()
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_singleLeak_button()
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowSensor_button()
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiMin_ventSetting()
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiMax_ventSetting()
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::updateConfigsWildCards()
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTiInspPause_CONF()
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePControlMax_CONF()
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_tightness_button()
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensitivity_conf()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_obstructionAlarm()
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiInspPause_conf()
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEPBackupScreen()
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControlMax_conf()
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowShapeBackup()
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCircuitDisAlarm()
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBackupApneaTime()
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_ventStopedAlarm()
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_circuitDisAlarm()
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backPatientInfo()
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRiseTimeBackup()
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePControlBackup()
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowShape_CONF()
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::createAlarmTrendList()
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowShape_conf()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VTBackupScreen()
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiBackupScreen()
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RRBackupScreen()
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSafetyVT_CONF()
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRisetime_CONF()
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePControl_CONF()
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::createDataTrendList()
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_safetyVT_conf()
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTime_conf()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_pulsRateAlarm()
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControl_conf()
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleIPAPMax_CONF()
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCycling_CONF()
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarmShowing()
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_heightButton()
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_cycling_conf()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IPAPMax_conf()
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePressureMin()
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePressureMax()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensitivity()
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_patientInfo()
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_cancelAlert()
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backupApnea()
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VtiAlarmbtn()
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VteAlarmbtn()
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_MViAlarmbtn()
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_MVeAlarmbtn()
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTiMin_CONF()
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTiMax_CONF()
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePsupp_CONF()
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePSMax_CONF()
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePEEPBackup()
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMainScreen()
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHRMinAlarm()
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHRMaxAlarm()
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_deviceInfo()
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RRAlarmbtn()
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Psupp_conf()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PSMax_conf()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSens_CONF()
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePEEP_CONF()
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleIPAP_CONF()
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2_CONF()
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleEPAP_CONF()
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCPAP_CONF()
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_leakAlarm()
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_SPO2Alarm()
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEP_conf()
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PAlarmbtn()
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IPAP_conf()
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2_conf()
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2Alarm()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_EPAP_conf()
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_CPAP_conf()
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVTBackup()
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTiBackup()
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRisetime()
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRBackup()
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_yesAlert()
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTime()
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControl()
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVT_CONF()
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTi_CONF()
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSPO2Min()
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSPO2Max()
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRR_CONF()
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleLeakMax()
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2Min()
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2Max()
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCycling()
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_lowPEEP()
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_cycling()
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VT_conf()
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Ti_conf()
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RR_conf()
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleWeight()
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVtiMin()
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVtiMax()
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVteMin()
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVteMax()
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMViMin()
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMViMax()
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMVeMin()
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMVeMax()
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRMin()
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRMax()
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePsupp()
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarm()
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Psupp()
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSens()
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePEEP()
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlow()
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2()
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCPAP()
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_mode()
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flow()
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEP()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2()
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_CPAP()
</UL>
<BR>[Address Reference Count : 6]<UL><LI> screenview.o(.text._ZN10screenView22updateConfigsWildCardsEv)
<LI> screenview.o(.text._ZN10screenView11setupScreenEv)
<LI> screenview.o(.text._ZN10screenView15handleTickEventEv)
<LI> screenview.o(.text._ZN10screenView16handleMainScreenEv)
<LI> screenview.o(.text._ZN10screenView11handleAlarmEv)
<LI> screenview.o(.text._ZN10screenView19handleAlarmNextPageEv)
</UL>
<P><STRONG><a name="[be]"></a>touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard__sub_object()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx23TextAreaWithOneWildcardC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard__sub_object() &rArr; touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase__sub_object() &rArr; touchgfx::TextArea::TextArea__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::DigitalClock()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[403]"></a>touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx23TextAreaWithOneWildcardD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[bf]"></a>touchgfx::TextAreaWithTwoWildcards::TextAreaWithTwoWildcards__sub_object()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx24TextAreaWithTwoWildcardsC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::TextAreaWithTwoWildcards::TextAreaWithTwoWildcards__sub_object() &rArr; touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase__sub_object() &rArr; touchgfx::TextArea::TextArea__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[408]"></a>touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx24TextAreaWithTwoWildcardsD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
</UL>
<P><STRONG><a name="[739]"></a>touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx24TextAreaWithWildcardBaseC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase__sub_object() &rArr; touchgfx::TextArea::TextArea__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithTwoWildcards::TextAreaWithTwoWildcards__sub_object()
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard__sub_object()
</UL>

<P><STRONG><a name="[40b]"></a>touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, textareawithwildcard.o(.text._ZN8touchgfx24TextAreaWithWildcardBaseD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[fc]"></a>touchgfx::AbstractDirectionProgress::setDirection(touchgfx::AbstractDirectionProgress::DirectionType)</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, abstractdirectionprogress.o(.text._ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDirectionProgress::setDirection(touchgfx::AbstractDirectionProgress::DirectionType) &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDirectionProgress::AbstractDirectionProgress()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[73a]"></a>touchgfx::AbstractDirectionProgress::AbstractDirectionProgress()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, abstractdirectionprogress.o(.text._ZN8touchgfx25AbstractDirectionProgressC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDirectionProgress::setDirection(touchgfx::AbstractDirectionProgress::DirectionType)
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::AbstractProgressIndicator__sub_object()
</UL>

<P><STRONG><a name="[6cf]"></a>touchgfx::AbstractDirectionProgress::AbstractDirectionProgress__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, abstractdirectionprogress.o(.text._ZN8touchgfx25AbstractDirectionProgressC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDirectionProgress::AbstractDirectionProgress__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::BoxProgress()
</UL>

<P><STRONG><a name="[40d]"></a>touchgfx::AbstractDirectionProgress::~AbstractDirectionProgress__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractdirectionprogress.o(.text._ZN8touchgfx25AbstractDirectionProgressD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractDirectionProgress::~AbstractDirectionProgress__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[33d]"></a>touchgfx::AbstractGraphElementNoCWR::setPainter(touchgfx::AbstractPainter&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE))
<BR>[Address Reference Count : 6]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
</UL>
<P><STRONG><a name="[33b]"></a>touchgfx::AbstractGraphElementNoCWR::setColor(touchgfx::colortype)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE))
<BR>[Address Reference Count : 6]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
</UL>
<P><STRONG><a name="[737]"></a>touchgfx::AbstractGraphElementNoCWR::AbstractGraphElementNoCWR__sub_object()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx25AbstractGraphElementNoCWRC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::AbstractGraphElementNoCWR::AbstractGraphElementNoCWR__sub_object() &rArr; touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::CanvasWidget__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphDecoration::AbstractGraphDecoration__sub_object()
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridBase::GraphElementGridBase__sub_object()
</UL>

<P><STRONG><a name="[411]"></a>touchgfx::AbstractGraphElementNoCWR::~AbstractGraphElementNoCWR__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx25AbstractGraphElementNoCWRD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
</UL>
<P><STRONG><a name="[2ed]"></a>touchgfx::AbstractProgressIndicator::updateValue(int, unsigned short)</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator11updateValueEit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractProgressIndicator::updateValue(int, unsigned short) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[fd]"></a>touchgfx::AbstractProgressIndicator::setBackground(const touchgfx::Bitmap&)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractProgressIndicator::setBackground(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Drawable::setWidthHeight(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(const touchgfx::Drawable&)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[2d8]"></a>touchgfx::AbstractProgressIndicator::handleTickEvent()</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::AbstractProgressIndicator::handleTickEvent() &rArr; touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[2ec]"></a>touchgfx::AbstractProgressIndicator::setEasingEquation(short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE))
<BR>[Address Reference Count : 3]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[40e]"></a>touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short)</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short) &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::setProgressIndicatorPosition(short, short, short, short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[410]"></a>touchgfx::AbstractProgressIndicator::setAlpha(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator8setAlphaEh))
<BR><BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::setAlpha(unsigned char)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[fb]"></a>touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short)</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[40f]"></a>touchgfx::AbstractProgressIndicator::setValue(int)</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator8setValueEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractProgressIndicator::setValue(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::setValue(int)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[73d]"></a>touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicatorC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image__sub_object(const touchgfx::Bitmap&)
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[73b]"></a>touchgfx::AbstractProgressIndicator::AbstractProgressIndicator__sub_object()</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicatorC2Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDirectionProgress::AbstractDirectionProgress()
</UL>

<P><STRONG><a name="[412]"></a>touchgfx::AbstractProgressIndicator::~AbstractProgressIndicator__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicatorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractProgressIndicator::~AbstractProgressIndicator__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
</UL>
<P><STRONG><a name="[40c]"></a>touchgfx::AbstractProgressIndicator::~AbstractProgressIndicator__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractdirectionprogress.o(.text._ZN8touchgfx25AbstractProgressIndicatorD2Ev))
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[b3]"></a>touchgfx::Box::Box__sub_object()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx3BoxC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::Box::Box__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorder::BoxWithBorder__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[413]"></a>touchgfx::Box::~Box__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx3BoxD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::Box::~Box__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[41d]"></a>touchgfx::HAL::FlushCache()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL10FlushCacheEv))
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[41a]"></a>touchgfx::HAL::beginFrame()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL10beginFrameEv))
<BR><BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1e0]"></a>touchgfx::HAL::getDMAType()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL10getDMATypeEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[416]"></a>touchgfx::HAL::initialize()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::initialize()
</UL>
<BR>[Calls]<UL><LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1c6]"></a>touchgfx::HAL::getBlitCaps()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL11getBlitCapsEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1ca]"></a>touchgfx::HAL::blitCopyWord(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 136 bytes, Stack size 64 bytes, hal.o(.text._ZN8touchgfx3HAL12blitCopyWordEPKttttttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopyWord(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1cb]"></a>touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 124 bytes, Stack size 64 bytes, hal.o(.text._ZN8touchgfx3HAL12blitFillWordEtttttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1cd]"></a>touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</STRONG> (Thumb, 164 bytes, Stack size 64 bytes, hal.o(.text._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[41c]"></a>touchgfx::HAL::InvalidateCache()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL15InvalidateCacheEv))
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1d4]"></a>touchgfx::HAL::backPorchExited()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL15backPorchExitedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::HAL::backPorchExited() &rArr; touchgfx::HAL::swapFrameBuffers() &rArr; OUTLINED_FUNCTION_4 &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1c2]"></a>touchgfx::HAL::lockFrameBuffer()</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL15lockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::lockFrameBuffer() &rArr; touchgfx::DMA_Interface::isDmaQueueEmpty()
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::isDmaQueueEmpty()
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1cc]"></a>touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 76 bytes, Stack size 72 bytes, hal.o(.text._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool) &rArr; OUTLINED_FUNCTION_0
</UL>
<BR>[Calls]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[418]"></a>touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE))
<BR><BR>[Calls]<UL><LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[417]"></a>touchgfx::HAL::flushFrameBuffer()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL16flushFrameBufferEv))
<BR><BR>[Calls]<UL><LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::flushFrameBuffer()
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[518]"></a>touchgfx::HAL::swapFrameBuffers()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL16swapFrameBuffersEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::swapFrameBuffers() &rArr; OUTLINED_FUNCTION_4 &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::backPorchExited()
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[1c0]"></a>touchgfx::HAL::allowDMATransfers()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL17allowDMATransfersEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1df]"></a>touchgfx::HAL::getTFTCurrentLine()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL17getTFTCurrentLineEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1c3]"></a>touchgfx::HAL::unlockFrameBuffer()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL17unlockFrameBufferEv))
<BR><BR>[Calls]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1bb]"></a>touchgfx::HAL::setFrameBufferSize(unsigned short, unsigned short)</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL18setFrameBufferSizeEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::setFrameBufferSize(unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[707]"></a>touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, hal.o(.text._ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[1db]"></a>touchgfx::HAL::setAnimationStorage(void*)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL19setAnimationStorageEPv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1d2]"></a>touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1d3]"></a>touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned)</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtj))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[5b7]"></a>touchgfx::HAL::getClientFrameBuffer()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL20getClientFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFromTFTToClientBuffer(touchgfx::Rect)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>

<P><STRONG><a name="[1d1]"></a>touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Calls]<UL><LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1ba]"></a>touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1cf]"></a>touchgfx::HAL::copyFromTFTToClientBuffer(touchgfx::Rect)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, hal.o(.text._ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::copyFromTFTToClientBuffer(touchgfx::Rect) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1dc]"></a>touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, hal.o(.text._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1e1]"></a>touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1e2]"></a>touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, const touchgfx::Rect&)</STRONG> (Thumb, 376 bytes, Stack size 96 bytes, hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, const touchgfx::Rect&) &rArr; touchgfx::Bitmap::getFormat() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::dynamicBitmapGetAddress(unsigned short)
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1da]"></a>touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1e9]"></a>touchgfx::HAL::performDisplayOrientationChange()</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL31performDisplayOrientationChangeEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[74b]"></a>touchgfx::HAL::lockFrameBufferForRenderingMethod(touchgfx::HAL::RenderingMethod)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, hal.o(.text._ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::lockFrameBufferForRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Calls]<UL><LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
</UL>
<BR>[Called By]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
</UL>

<P><STRONG><a name="[59b]"></a>touchgfx::HAL::lcd()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx3HAL3lcdEv))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, const touchgfx::Rect&)
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridBase::drawLine(const touchgfx::Rect&, short, short, short, short, unsigned char) const
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainter::compatibleFramebuffer(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsY::drawString(const touchgfx::Rect&, const touchgfx::Font*, const touchgfx::AbstractDataGraph*, int, int, unsigned char) const
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::draw(const touchgfx::Rect&) const
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[1e3]"></a>touchgfx::HAL::tick()</STRONG> (Thumb, 364 bytes, Stack size 32 bytes, hal.o(.text._ZN8touchgfx3HAL4tickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::HAL::tick()
</UL>
<BR>[Calls]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::tick()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1e7]"></a>touchgfx::HAL::touch(int, int)</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, hal.o(.text._ZN8touchgfx3HAL5touchEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::HAL::touch(int, int) &rArr; touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1e8]"></a>touchgfx::HAL::noTouch()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL7noTouchEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::HAL::noTouch() &rArr; touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1c7]"></a>touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 232 bytes, Stack size 80 bytes, hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1c9]"></a>touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</STRONG> (Thumb, 76 bytes, Stack size 64 bytes, hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbb))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool) &rArr; OUTLINED_FUNCTION_0
</UL>
<BR>[Calls]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1c8]"></a>touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 58 bytes, Stack size 56 bytes, hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1d0]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 64 bytes, Stack size 56 bytes, hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool) &rArr; OUTLINED_FUNCTION_0
</UL>
<BR>[Calls]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1ce]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 152 bytes, Stack size 80 bytes, hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[41b]"></a>touchgfx::HAL::endFrame()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::endFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::endFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1c1]"></a>touchgfx::HAL::flushDMA()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL8flushDMAEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[419]"></a>touchgfx::HAL::blockCopy(void*, const void*, unsigned)</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, hal.o(.text._ZN8touchgfx3HAL9blockCopyEPvPKvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1d9]"></a>touchgfx::HAL::sampleKey(unsigned char&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL9sampleKeyERh))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1de]"></a>touchgfx::HAL::taskDelay(unsigned short)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL9taskDelayEt))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1bd]"></a>touchgfx::HAL::taskEntry()</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL9taskEntryEv))
<BR><BR>[Calls]<UL><LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[6a9]"></a>touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx3HALC2ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[415]"></a>touchgfx::HAL::~HAL__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HALD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1b8]"></a>touchgfx::HAL::~HAL__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HALD2Ev))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[5b5]"></a>touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, texts.o(.text._ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[758]"></a>touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)</STRONG> (Thumb, 106 bytes, Stack size 20 bytes, lcd.o(.text._ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
</UL>
<BR>[Called By]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[754]"></a>touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)</STRONG> (Thumb, 82 bytes, Stack size 56 bytes, lcd.o(.text._ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct__sub_object(touchgfx::TextProvider&, unsigned short, unsigned char, const touchgfx::Font*, touchgfx::WideTextAction)
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[757]"></a>touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, lcd.o(.text._ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[753]"></a>touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)</STRONG> (Thumb, 718 bytes, Stack size 456 bytes, lcd.o(.text._ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::endOfString()
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct__sub_object(touchgfx::TextProvider&, unsigned short, unsigned char, const touchgfx::Font*, touchgfx::WideTextAction)
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*)
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
</UL>

<P><STRONG><a name="[7eb]"></a>touchgfx::LCD::getAlphaFromA4(const unsigned short*, unsigned)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx3LCD14getAlphaFromA4EPKtj))
<BR><BR>[Called By]<UL><LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned short*, unsigned, short, unsigned char, unsigned char) const
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, unsigned, short, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[49d]"></a>touchgfx::LCD::setDefaultColor(touchgfx::colortype)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[75c]"></a>touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*)</STRONG> (Thumb, 1692 bytes, Stack size 192 bytes, lcd.o(.text._ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*)
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[760]"></a>touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)</STRONG> (Thumb, 752 bytes, Stack size 160 bytes, lcd.o(.text._ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*)
</UL>

<P><STRONG><a name="[49f]"></a>touchgfx::LCD::drawTextureMapQuad(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 170 bytes, Stack size 120 bytes, lcd.o(.text._ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::LCD::drawTextureMapQuad(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[59d]"></a>touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*)</STRONG> (Thumb, 236 bytes, Stack size 64 bytes, lcd.o(.text._ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*)
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>

<P><STRONG><a name="[756]"></a>touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)</STRONG> (Thumb, 470 bytes, Stack size 64 bytes, lcd.o(.text._ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[761]"></a>touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lcd.o(.text._ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
</UL>

<P><STRONG><a name="[755]"></a>touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct__sub_object(touchgfx::TextProvider&, unsigned short, unsigned char, const touchgfx::Font*, touchgfx::WideTextAction)</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, lcd.o(.text._ZN8touchgfx3LCD22WideTextInternalStructC2ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct__sub_object(touchgfx::TextProvider&, unsigned short, unsigned char, const touchgfx::Font*, touchgfx::WideTextAction)
</UL>
<BR>[Called By]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[4a1]"></a>touchgfx::LCD::drawTextureMapScanLine(const touchgfx::DrawingSurface&, const touchgfx::Gradients&, const touchgfx::Edge*, const touchgfx::Edge*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 420 bytes, Stack size 80 bytes, lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD::drawTextureMapScanLine(const touchgfx::DrawingSurface&, const touchgfx::Gradients&, const touchgfx::Edge*, const touchgfx::Edge*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[49e]"></a>touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 900 bytes, Stack size 376 bytes, lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short) &rArr; touchgfx::Edge::step(int) &rArr; touchgfx::Edge::step()
</UL>
<BR>[Calls]<UL><LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gradients::Gradients(const touchgfx::Point3D*)
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::step()
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::step(int)
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[5bb]"></a>touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)</STRONG> (Thumb, 200 bytes, Stack size 20 bytes, lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBase29drawTextureMapNextSubdivisionERfS2_S2_S2_S2_S2_fS2_fS2_fiRiS3_S3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_75
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_74
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_41
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[456]"></a>touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev))
<BR>[Address Reference Count : 28]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[49c]"></a>touchgfx::LCD::supportDynamicBitmapDrawing(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LCD::supportDynamicBitmapDrawing(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[767]"></a>touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, lcd.o(.text._ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[768]"></a>touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, lcd.o(.text._ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[113]"></a>touchgfx::LCD::div255(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et))
<BR><BR>[Called By]<UL><LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char) const
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, unsigned, short, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char, unsigned char) const
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Address Reference Count : 17]<UL><LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh)
<LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKjssiihhh)
<LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKjssiihh)
<LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh)
<LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE)
<LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKjssiihhh)
<LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKjssiihh)
<LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA10writePixelEPtPKhS4_siihhh)
<LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKhPKjsiihhh)
<LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKjsiihh)
<LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKtPKhsiihhh)
<LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKtsiihh)
<LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKjsiihhh)
<LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKjsiihh)
</UL>
<P><STRONG><a name="[48f]"></a>touchgfx::LCD::~LCD__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx3LCDD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[769]"></a>T1 touchgfx::gcd&lang;int&rang;(T1, T1)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, line.o(.text._ZN8touchgfx3gcdIiEET_S1_S1_))
<BR><BR>[Calls]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::gcd&lang;int&rang;(T1, T1)
</UL>
<BR>[Called By]<UL><LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::updateCachedShape()
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::gcd&lang;int&rang;(T1, T1)
</UL>

<P><STRONG><a name="[764]"></a>touchgfx::Edge::step(int)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lcd.o(.text._ZN8touchgfx4Edge4stepEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Edge::step(int) &rArr; touchgfx::Edge::step()
</UL>
<BR>[Calls]<UL><LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::step()
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[766]"></a>touchgfx::Edge::step()</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, lcd.o(.text._ZN8touchgfx4Edge4stepEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Edge::step()
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::step(int)
</UL>

<P><STRONG><a name="[112]"></a>touchgfx::Edge::Edge(const touchgfx::Gradients&, const touchgfx::Point3D*, int, int)</STRONG> (Thumb, 304 bytes, Stack size 40 bytes, texturemaptypes.o(.text._ZN8touchgfx4EdgeC2ERKNS_9GradientsEPKNS_7Point3DEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::Edge::Edge(const touchgfx::Gradients&, const touchgfx::Point3D*, int, int) &rArr; touchgfx::floorDivMod(int, int, int&, int&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ceil28_4(int)
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::floorDivMod(int, int, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht)
</UL>
<P><STRONG><a name="[8d5]"></a>touchgfx::Edge::Edge__sub_object(const touchgfx::Gradients&, const touchgfx::Point3D*, int, int)</STRONG> (Thumb, 304 bytes, Stack size 40 bytes, texturemaptypes.o(.text._ZN8touchgfx4EdgeC2ERKNS_9GradientsEPKNS_7Point3DEii), UNUSED)

<P><STRONG><a name="[35b]"></a>touchgfx::Font::~Font__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cachedfont.o(.text._ZN8touchgfx4FontD2Ev))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[519]"></a>touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(.text._ZN8touchgfx4GPIO3setENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[51a]"></a>touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(.text._ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[743]"></a>touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(.text._ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
</UL>

<P><STRONG><a name="[f6]"></a>touchgfx::Line::setLineWidth(touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx4Line12setLineWidthENS_7CWRUtil2Q5E))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[76b]"></a>touchgfx::Line::updateCachedShape()</STRONG> (Thumb, 520 bytes, Stack size 40 bytes, line.o(.text._ZN8touchgfx4Line17updateCachedShapeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::Line::updateCachedShape() &rArr; touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::gcd&lang;int&rang;(T1, T1)
</UL>
<BR>[Called By]<UL><LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::setStart(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::setEnd(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::setLineEndingStyle(touchgfx::Line::LINE_ENDING_STYLE)
</UL>

<P><STRONG><a name="[f7]"></a>touchgfx::Line::setLineEndingStyle(touchgfx::Line::LINE_ENDING_STYLE)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, line.o(.text._ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::Line::setLineEndingStyle(touchgfx::Line::LINE_ENDING_STYLE) &rArr; touchgfx::Line::updateCachedShape() &rArr; touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::updateCachedShape()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[10a]"></a>touchgfx::Line::setEnd(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, line.o(.text._ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::Line::setEnd(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Line::updateCachedShape() &rArr; touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::updateCachedShape()
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void touchgfx::Line::setEnd&lang;int&rang;(T1, T1)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[f5]"></a>void touchgfx::Line::setEnd&lang;int&rang;(T1, T1)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx4Line6setEndIiEEvT_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = void touchgfx::Line::setEnd&lang;int&rang;(T1, T1) &rArr; touchgfx::Line::setEnd(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Line::updateCachedShape() &rArr; touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::setEnd(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[76d]"></a>touchgfx::Line::setStart(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, line.o(.text._ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::Line::setStart(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Line::updateCachedShape() &rArr; touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::updateCachedShape()
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void touchgfx::Line::setStart&lang;int&rang;(T1, T1)
</UL>

<P><STRONG><a name="[f4]"></a>void touchgfx::Line::setStart&lang;int&rang;(T1, T1)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx4Line8setStartIiEEvT_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = void touchgfx::Line::setStart&lang;int&rang;(T1, T1) &rArr; touchgfx::Line::setStart(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Line::updateCachedShape() &rArr; touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::setStart(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[b6]"></a>touchgfx::Line::Line()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, line.o(.text._ZN8touchgfx4LineC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Line::Line() &rArr; touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(short, short)
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::CanvasWidget__sub_object()
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[8d6]"></a>touchgfx::Line::Line__sub_object()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, line.o(.text._ZN8touchgfx4LineC2Ev), UNUSED)

<P><STRONG><a name="[41e]"></a>touchgfx::Line::~Line__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, line.o(.text._ZN8touchgfx4LineD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::Line::~Line__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> line.o(.rodata._ZTVN8touchgfx4LineE)
</UL>
<P><STRONG><a name="[6bd]"></a>touchgfx::Rect::restrictTo(short, short)</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx4Rect10restrictToEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Rect::restrictTo(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::draw(touchgfx::Rect&)
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned char*, short, short)
</UL>

<P><STRONG><a name="[6c2]"></a>touchgfx::Rect::expandToFit(const touchgfx::Rect&)</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, application.o(.text._ZN8touchgfx4Rect11expandToFitERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getContainedArea() const
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[596]"></a>touchgfx::Rect::operator &=(const touchgfx::Rect&)</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, lcd16bpp.o(.text._ZN8touchgfx4RectaNERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, const touchgfx::Rect&)
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridBase::drawLine(const touchgfx::Rect&, short, short, short, short, unsigned char) const
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridBase::draw(const touchgfx::Rect&) const
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsY::drawString(const touchgfx::Rect&, const touchgfx::Font*, const touchgfx::AbstractDataGraph*, int, int, unsigned char) const
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::invalidateGraphPointAt(short)
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned char*, short, short)
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[69b]"></a>touchgfx::View&lang;screenPresenter&rang;::View__sub_object()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx4ViewI15screenPresenterEC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[423]"></a>touchgfx::View&lang;screenPresenter&rang;::~View__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx4ViewI15screenPresenterED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::View&lang;screenPresenter&rang;::~View__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
</UL>
<P><STRONG><a name="[7a6]"></a>touchgfx::clzu(unsigned)</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, utils.o(.text._ZN8touchgfx4clzuEj))
<BR><BR>[Called By]<UL><LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
</UL>

<P><STRONG><a name="[ec]"></a>touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx5Color15getColorFromRGBEhhh))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[2be]"></a>touchgfx::Event::~Event__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx5EventD2Ev))
<BR>[Address Reference Count : 3]<UL><LI> screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
<LI> screen.o(.rodata._ZTVN8touchgfx9DragEventE)
<LI> screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
</UL>
<P><STRONG><a name="[ed]"></a>touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, image.o(.text._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Drawable::setWidthHeight(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image__sub_object(const touchgfx::Bitmap&)
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setBackground(const touchgfx::Bitmap&)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> slider.o(.text._ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_)
</UL>
<P><STRONG><a name="[bb]"></a>touchgfx::Image::Image__sub_object(const touchgfx::Bitmap&)</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx5ImageC2ERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::Image__sub_object(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Drawable::setWidthHeight(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator__sub_object()
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> slider.o(.text._ZN8touchgfx6SliderC2Ev)
</UL>
<P><STRONG><a name="[425]"></a>touchgfx::Image::~Image__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, image.o(.text._ZN8touchgfx5ImageD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::~Image__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[6ae]"></a>touchgfx::Texts::setLanguage(unsigned short)</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, texts.o(.text._ZN8touchgfx5Texts11setLanguageEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Texts::setLanguage(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getFonts()
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getInstanceSize()
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[85b]"></a>touchgfx::paint::rgb565::lineFromColor(unsigned short*, unsigned, unsigned, unsigned char, unsigned)</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN8touchgfx5paint6rgb56513lineFromColorEPtjjhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::paint::rgb565::lineFromColor(unsigned short*, unsigned, unsigned, unsigned char, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::paint(unsigned char*, short, short, short, short, unsigned char) const
</UL>

<P><STRONG><a name="[85c]"></a>touchgfx::paint::rgb565::tearDown()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32dma.o(.text._ZN8touchgfx5paint6rgb5658tearDownEv))
<BR><BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::tearDown() const
</UL>

<P><STRONG><a name="[773]"></a>touchgfx::Bitmap::clearCache()</STRONG> (Thumb, 128 bytes, Stack size 20 bytes, bitmap.o(.text._ZN8touchgfx6Bitmap10clearCacheEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::Bitmap::clearCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[5b3]"></a>touchgfx::Bitmap::isDynamicBitmap(unsigned short)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bitmap.o(.text._ZN8touchgfx6Bitmap15isDynamicBitmapEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::isDynamicBitmap(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>

<P><STRONG><a name="[771]"></a>touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bitmap.o(.text._ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned) &rArr; touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[746]"></a>touchgfx::Bitmap::dynamicBitmapGetAddress(unsigned short)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bitmap.o(.text._ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Bitmap::dynamicBitmapGetAddress(unsigned short) &rArr; OUTLINED_FUNCTION_4 &rArr; touchgfx::Bitmap::isDynamicBitmap(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[772]"></a>touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, bitmap.o(.text._ZN8touchgfx6Bitmap8setCacheEPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::clearCache()
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[ba]"></a>touchgfx::Bitmap::Bitmap__sub_object(unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx6BitmapC2Et))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button__sub_object()
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::ToggleButton__sub_object()
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator__sub_object()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> screenviewbase.o(.text._ZN8touchgfx11RadioButtonC2Ev)
</UL>
<P><STRONG><a name="[f8]"></a>touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, button.o(.text._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Drawable::setWidthHeight(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[b9]"></a>touchgfx::Button::Button__sub_object()</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx6ButtonC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::Button::Button__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap__sub_object(unsigned short)
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::ToggleButton__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[426]"></a>touchgfx::Button::~Button__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, button.o(.text._ZN8touchgfx6ButtonD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::~Button__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
</UL>
<P><STRONG><a name="[774]"></a>touchgfx::Canvas::close()</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, canvas.o(.text._ZN8touchgfx6Canvas5closeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = touchgfx::Canvas::close() &rArr; OUTLINED_FUNCTION_0 &rArr; touchgfx::Rasterizer::lineTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[115]"></a>touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, canvas.o(.text._ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Rasterizer::moveTo(int, int) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::moveTo(int, int)
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::lineTo(int, int)
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::drawCanvasWidget(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> line.o(.text._ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE)
</UL>
<P><STRONG><a name="[775]"></a>touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, canvas.o(.text._ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Rasterizer::moveTo(int, int) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::close()
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::moveTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[5ab]"></a>touchgfx::Canvas::render(unsigned char)</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, canvas.o(.text._ZN8touchgfx6Canvas6renderEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = touchgfx::Canvas::render(unsigned char) &rArr; touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char) &rArr; touchgfx::Outline::closeOutlineAndSortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::close()
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char)
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBufferForRenderingMethod(touchgfx::HAL::RenderingMethod)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[776]"></a>touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, canvas.o(.text._ZN8touchgfx6CanvasC2EPKNS_12CanvasWidgetERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&) &rArr; touchgfx::Rasterizer::Rasterizer__sub_object() &rArr; touchgfx::Outline::Outline() &rArr; touchgfx::Outline::reset() &rArr; touchgfx::CanvasWidgetRenderer::getOutlineBufferSize() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::hasBuffer()
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::Rasterizer__sub_object()
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[8d7]"></a>touchgfx::Canvas::Canvas__sub_object(const touchgfx::CanvasWidget*, const touchgfx::Rect&)</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, canvas.o(.text._ZN8touchgfx6CanvasC2EPKNS_12CanvasWidgetERKNS_4RectE), UNUSED)

<P><STRONG><a name="[428]"></a>touchgfx::Canvas::~Canvas__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, graphelements.o(.text._ZN8touchgfx6CanvasD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = touchgfx::Canvas::~Canvas__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx6CanvasE)
</UL>
<P><STRONG><a name="[427]"></a>touchgfx::Canvas::~Canvas__sub_object()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, graphelements.o(.text._ZN8touchgfx6CanvasD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Canvas::~Canvas__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::~Outline()
</UL>
<BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas__deallocating()
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::drawCanvasWidget(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx6CanvasE)
</UL>
<P><STRONG><a name="[424]"></a>touchgfx::Screen::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx6Screen11setupScreenEv))
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[713]"></a>touchgfx::Screen::bindTransition(touchgfx::Transition&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE))
<BR><BR>[Called By]<UL><LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[123]"></a>touchgfx::Screen::handleKeyEvent(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenview.o(.text._ZN8touchgfx6Screen14handleKeyEventEh))
<BR>[Address Reference Count : 4]<UL><LI> screenview.o(.rodata._ZTV10screenView)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[1f0]"></a>touchgfx::Screen::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx6Screen14tearDownScreenEv))
<BR>[Address Reference Count : 3]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[11d]"></a>touchgfx::Screen::afterTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenview.o(.text._ZN8touchgfx6Screen15afterTransitionEv))
<BR>[Address Reference Count : 4]<UL><LI> screenview.o(.rodata._ZTV10screenView)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[120]"></a>touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 236 bytes, Stack size 56 bytes, screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenview.o(.rodata._ZTV10screenView)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[1f1]"></a>touchgfx::Screen::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx6Screen15handleTickEventEv))
<BR>[Address Reference Count : 3]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[11f]"></a>touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*) &rArr; touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**) &rArr; touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenview.o(.rodata._ZTV10screenView)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[121]"></a>touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenview.o(.rodata._ZTV10screenView)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[11b]"></a>touchgfx::Screen::draw(touchgfx::Rect&)</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = touchgfx::Screen::draw(touchgfx::Rect&) &rArr; touchgfx::Screen::startSMOC(const touchgfx::Rect&) &rArr; touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenview.o(.rodata._ZTV10screenView)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[6cd]"></a>touchgfx::Screen::draw()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, screen.o(.text._ZN8touchgfx6Screen4drawEv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[77c]"></a>touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</STRONG> (Thumb, 408 bytes, Stack size 56 bytes, screen.o(.text._ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + In Cycle
<LI>Call Chain = touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator !=(const touchgfx::Rect&) const
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedVisibleRect()
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsY()
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsX()
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(const touchgfx::Rect&)
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[77b]"></a>touchgfx::Screen::startSMOC(const touchgfx::Rect&)</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, screen.o(.text._ZN8touchgfx6Screen9startSMOCERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::Screen::startSMOC(const touchgfx::Rect&) &rArr; touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>

<P><STRONG><a name="[783]"></a>touchgfx::Screen::Screen()</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, screen.o(.text._ZN8touchgfx6ScreenC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[76f]"></a>touchgfx::Screen::Screen__sub_object()</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, screen.o(.text._ZN8touchgfx6ScreenC2Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;screenPresenter&rang;::View__sub_object()
</UL>

<P><STRONG><a name="[429]"></a>touchgfx::Screen::~Screen__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6ScreenD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::Screen::~Screen__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[422]"></a>touchgfx::Screen::~Screen__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx6ScreenD2Ev))
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[6a2]"></a>touchgfx::Slider::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, slider.o(.text._ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(const touchgfx::Drawable&)
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[435]"></a>touchgfx::Slider::setValueRange(int, int)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, slider.o(.text._ZN8touchgfx6Slider13setValueRangeEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Slider::setValueRange(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::Slider()
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[432]"></a>touchgfx::Slider::setValueRange(int, int, int)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, slider.o(.text._ZN8touchgfx6Slider13setValueRangeEiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Slider::setValueRange(int, int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[42d]"></a>touchgfx::Slider::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, slider.o(.text._ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Slider::handleDragEvent(const touchgfx::DragEvent&)
</UL>
<BR>[Calls]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[42c]"></a>touchgfx::Slider::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, slider.o(.text._ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Slider::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Calls]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[42f]"></a>touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, slider.o(.text._ZN8touchgfx6Slider19setupVerticalSliderEttttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(short, short)
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[42e]"></a>touchgfx::Slider::setupHorizontalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, slider.o(.text._ZN8touchgfx6Slider21setupHorizontalSliderEttttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::Slider::setupHorizontalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(short, short)
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[437]"></a>touchgfx::Slider::updateIndicatorPosition(short)</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, slider.o(.text._ZN8touchgfx6Slider23updateIndicatorPositionEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::Slider::updateIndicatorPosition(short) &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveTo(short, short)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[436]"></a>touchgfx::Slider::setValue(int)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, slider.o(.text._ZN8touchgfx6Slider8setValueEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Slider::setValue(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_brightnessSlider(int)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_audioSlider(int)
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBrightness()
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAudio()
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[69e]"></a>touchgfx::Slider::Slider()</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, slider.o(.text._ZN8touchgfx6SliderC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValueRange(int, int)
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[8d8]"></a>touchgfx::Slider::Slider__sub_object()</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, slider.o(.text._ZN8touchgfx6SliderC2Ev), UNUSED)

<P><STRONG><a name="[42b]"></a>touchgfx::Slider::~Slider__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, slider.o(.text._ZN8touchgfx6SliderD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::Slider::~Slider__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[42a]"></a>touchgfx::Slider::~Slider__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, slider.o(.text._ZN8touchgfx6SliderD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[6bf]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[6c1]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, application.o(.text._ZN8touchgfx6VectorINS_4RectELt8EE3addES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[6c9]"></a>touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx6VectorIPNS_8DrawableELt32EE3addES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[6c6]"></a>touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::removeAt(unsigned short)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx6VectorIPNS_8DrawableELt32EE8removeAtEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::removeAt(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
</UL>

<P><STRONG><a name="[2fa]"></a>touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE))
<BR>[Address Reference Count : 24]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[72b]"></a>touchgfx::muldiv(int, int, int)</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, utils.o(.text._ZN8touchgfx6muldivEiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::convertToNewScale(int, int, int)
</UL>

<P><STRONG><a name="[788]"></a>touchgfx::muldiv(int, int, int, int&)</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, utils.o(.text._ZN8touchgfx6muldivEiiiRi))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
</UL>
<BR>[Called By]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldiv_toQ5(int, int, int)
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::_angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&)
</UL>

<P><STRONG><a name="[78a]"></a>touchgfx::CWRUtil::muldiv_toQ5(int, int, int)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, screenviewbase.o(.text._ZN8touchgfx7CWRUtil11muldiv_toQ5Eiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::CWRUtil::muldiv_toQ5(int, int, int) &rArr; touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::valueToScreenYQ5(int) const
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::valueToScreenXQ5(int) const
</UL>

<P><STRONG><a name="[78f]"></a>touchgfx::CWRUtil::sine(int)</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, line.o(.text._ZN8touchgfx7CWRUtil4sineEi))
<BR><BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(int)
</UL>

<P><STRONG><a name="[78b]"></a>touchgfx::CWRUtil::angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&)</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, line.o(.text._ZN8touchgfx7CWRUtil5angleENS0_2Q5ES1_RS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::CWRUtil::angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&) &rArr; touchgfx::CWRUtil::_angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&) &rArr;  touchgfx::CWRUtil::_angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::_angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&)
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[791]"></a>touchgfx::CWRUtil::isqrt(unsigned)</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, graphelements.o(.text._ZN8touchgfx7CWRUtil5isqrtEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::CWRUtil::isqrt(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sqrtQ10(touchgfx::CWRUtil::Q10)
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::arcsine(touchgfx::CWRUtil::Q10)
</UL>

<P><STRONG><a name="[78c]"></a>touchgfx::CWRUtil::_angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&)</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, line.o(.text._ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = touchgfx::CWRUtil::_angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&) &rArr;  touchgfx::CWRUtil::_angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::arcsine(touchgfx::CWRUtil::Q10)
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::_angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::_angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&)
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&)
</UL>

<P><STRONG><a name="[78e]"></a>touchgfx::CWRUtil::cosine(int)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, line.o(.text._ZN8touchgfx7CWRUtil6cosineEi))
<BR><BR>[Calls]<UL><LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[76c]"></a>touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, graphelements.o(.text._ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sqrtQ10(touchgfx::CWRUtil::Q10) &rArr; touchgfx::CWRUtil::isqrt(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sqrtQ10(touchgfx::CWRUtil::Q10)
</UL>
<BR>[Called By]<UL><LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::updateCachedShape()
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::_angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&)
</UL>

<P><STRONG><a name="[78d]"></a>touchgfx::CWRUtil::arcsine(touchgfx::CWRUtil::Q10)</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, line.o(.text._ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = touchgfx::CWRUtil::arcsine(touchgfx::CWRUtil::Q10) &rArr;  touchgfx::CWRUtil::arcsine(touchgfx::CWRUtil::Q10) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::isqrt(unsigned)
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::arcsine(touchgfx::CWRUtil::Q10)
</UL>
<BR>[Called By]<UL><LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::arcsine(touchgfx::CWRUtil::Q10)
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::_angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&)
</UL>

<P><STRONG><a name="[790]"></a>touchgfx::CWRUtil::sqrtQ10(touchgfx::CWRUtil::Q10)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphelements.o(.text._ZN8touchgfx7CWRUtil7sqrtQ10ENS0_3Q10E))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::CWRUtil::sqrtQ10(touchgfx::CWRUtil::Q10) &rArr; touchgfx::CWRUtil::isqrt(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::isqrt(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[5b1]"></a>touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx7CWRUtil8muldivQ5ENS0_2Q5ES1_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldiv_toQ5(int, int, int)
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::updateCachedShape()
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>

<P><STRONG><a name="[79a]"></a>touchgfx::Outline::addCurCell()</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, outline.o(.text._ZN8touchgfx7Outline10addCurCellEv))
<BR><BR>[Called By]<UL><LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::closeOutlineAndSortCells()
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCellNew(int, int)
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCell(int, int)
</UL>

<P><STRONG><a name="[792]"></a>touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)</STRONG> (Thumb, 304 bytes, Stack size 360 bytes, outline.o(.text._ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lessThan(const touchgfx::Cell*, const touchgfx::Cell*)
</UL>
<BR>[Called By]<UL><LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::closeOutlineAndSortCells()
</UL>

<P><STRONG><a name="[796]"></a>touchgfx::Outline::renderLine(int, int, int, int)</STRONG> (Thumb, 368 bytes, Stack size 88 bytes, outline.o(.text._ZN8touchgfx7Outline10renderLineEiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderScanline(int, int, int, int, int)
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCellNew(int, int)
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
</UL>

<P><STRONG><a name="[798]"></a>touchgfx::Outline::setCurCell(int, int)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, outline.o(.text._ZN8touchgfx7Outline10setCurCellEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::addCurCell()
</UL>
<BR>[Called By]<UL><LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderScanline(int, int, int, int, int)
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>

<P><STRONG><a name="[799]"></a>touchgfx::Outline::setCurCellNew(int, int)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, outline.o(.text._ZN8touchgfx7Outline13setCurCellNewEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Outline::setCurCellNew(int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::addCurCell()
</UL>
<BR>[Called By]<UL><LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderScanline(int, int, int, int, int)
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>

<P><STRONG><a name="[797]"></a>touchgfx::Outline::renderScanline(int, int, int, int, int)</STRONG> (Thumb, 342 bytes, Stack size 72 bytes, outline.o(.text._ZN8touchgfx7Outline14renderScanlineEiiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCellNew(int, int)
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>

<P><STRONG><a name="[6b7]"></a>touchgfx::Outline::closeOutlineAndSortCells()</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, outline.o(.text._ZN8touchgfx7Outline24closeOutlineAndSortCellsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = touchgfx::Outline::closeOutlineAndSortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::addCurCell()
</UL>
<BR>[Called By]<UL><LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[778]"></a>touchgfx::Outline::reset()</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, outline.o(.text._ZN8touchgfx7Outline5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Outline::reset() &rArr; touchgfx::CanvasWidgetRenderer::getOutlineBufferSize() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBuffer()
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::Outline()
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
</UL>

<P><STRONG><a name="[6b3]"></a>touchgfx::Outline::lineTo(int, int)</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, outline.o(.text._ZN8touchgfx7Outline6lineToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::closeOutlineAndSortCells()
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::lineTo(int, int)
</UL>

<P><STRONG><a name="[6b5]"></a>touchgfx::Outline::moveTo(int, int)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, outline.o(.text._ZN8touchgfx7Outline6moveToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::moveTo(int, int)
</UL>

<P><STRONG><a name="[793]"></a>touchgfx::Outline::lessThan(const touchgfx::Cell*, const touchgfx::Cell*)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, outline.o(.text._ZN8touchgfx7Outline8lessThanEPKNS_4CellES3_))
<BR><BR>[Called By]<UL><LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>

<P><STRONG><a name="[6ba]"></a>touchgfx::Outline::Outline()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, outline.o(.text._ZN8touchgfx7OutlineC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Outline::Outline() &rArr; touchgfx::Outline::reset() &rArr; touchgfx::CanvasWidgetRenderer::getOutlineBufferSize() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::Rasterizer__sub_object()
</UL>

<P><STRONG><a name="[8d9]"></a>touchgfx::Outline::Outline__sub_object()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, outline.o(.text._ZN8touchgfx7OutlineC2Ev), UNUSED)

<P><STRONG><a name="[43e]"></a>touchgfx::Outline::~Outline__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, outline.o(.text._ZN8touchgfx7OutlineD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::Outline::~Outline__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> outline.o(.rodata._ZTVN8touchgfx7OutlineE)
</UL>
<P><STRONG><a name="[779]"></a>touchgfx::Outline::~Outline()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, outline.o(.text._ZN8touchgfx7OutlineD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas__sub_object()
</UL>

<P><STRONG><a name="[43d]"></a>touchgfx::Outline::~Outline__sub_object()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, outline.o(.text._ZN8touchgfx7OutlineD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> outline.o(.rodata._ZTVN8touchgfx7OutlineE)
</UL>
<P><STRONG><a name="[79b]"></a>touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)</STRONG> (Thumb, 378 bytes, Stack size 40 bytes, unicode.o(.text._ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
</UL>
<BR>[Calls]<UL><LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strlen(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*)
</UL>

<P><STRONG><a name="[ab]"></a>touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, screenview.o(.text._ZN8touchgfx7Unicode13snprintfFloatEPttPKcf))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*)
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVT()
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTi()
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRR()
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Ti()
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiMin_ventSetting()
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiMax_ventSetting()
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTiInspPause_CONF()
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensitivity_conf()
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiInspPause_conf()
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiBackupScreen()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensitivity()
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTiMin_CONF()
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTiMax_CONF()
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMainScreen()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSens_CONF()
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTiBackup()
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVT_CONF()
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTi_CONF()
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRR_CONF()
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Ti_conf()
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setupScreen()
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarm()
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSens()
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenview.o(.text._ZN10screenView22updateConfigsWildCardsEv)
<LI> screenview.o(.text._ZN10screenView15handleTickEventEv)
<LI> screenview.o(.text._ZN10screenView16handleMainScreenEv)
<LI> screenview.o(.text._ZN10screenView8handleVTEv)
<LI> screenview.o(.text._ZN10screenView13handleVT_CONFEv)
</UL>
<P><STRONG><a name="[79d]"></a>touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, unicode.o(.text._ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*)
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
</UL>

<P><STRONG><a name="[79e]"></a>touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*)</STRONG> (Thumb, 984 bytes, Stack size 352 bytes, unicode.o(.text._ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*)
</UL>

<P><STRONG><a name="[79f]"></a>touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)</STRONG> (Thumb, 396 bytes, Stack size 48 bytes, unicode.o(.text._ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&) &rArr; OUTLINED_FUNCTION_0
</UL>
<BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::nextChar(const unsigned short*&, const char*&)
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*)
</UL>

<P><STRONG><a name="[7a1]"></a>touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)</STRONG> (Thumb, 94 bytes, Stack size 56 bytes, unicode.o(.text._ZN8touchgfx7Unicode4itoaEiPtti))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*)
</UL>

<P><STRONG><a name="[7a3]"></a>touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int)</STRONG> (Thumb, 66 bytes, Stack size 56 bytes, unicode.o(.text._ZN8touchgfx7Unicode4utoaEjPtti))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[79c]"></a>touchgfx::Unicode::strlen(const unsigned short*)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, unicode.o(.text._ZN8touchgfx7Unicode6strlenEPKt))
<BR><BR>[Called By]<UL><LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsBase::formatLabel(unsigned short*, short, int, int, unsigned short, int) const
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
</UL>

<P><STRONG><a name="[a6]"></a>touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, unicode.o(.text._ZN8touchgfx7Unicode7strncpyEPtPKct))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleDay()
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRR()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RR()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_singleCircuit_button()
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_singleLeak_button()
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensitivity_conf()
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_circuitDisAlarm()
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::createDataTrendList()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_pulsRateAlarm()
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarmShowing()
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePressureMin()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensitivity()
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VtiAlarmbtn()
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VteAlarmbtn()
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_MViAlarmbtn()
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_MVeAlarmbtn()
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHRMinAlarm()
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHRMaxAlarm()
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RRAlarmbtn()
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSens_CONF()
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePEEP_CONF()
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_leakAlarm()
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_SPO2Alarm()
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEP_conf()
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PAlarmbtn()
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2Alarm()
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRBackup()
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSPO2Min()
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSPO2Max()
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRR_CONF()
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleLeakMax()
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2Min()
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2Max()
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RR_conf()
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVtiMin()
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVtiMax()
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVteMin()
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVteMax()
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMViMin()
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMViMax()
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMVeMin()
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMVeMax()
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRMin()
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRMax()
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMonth()
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleYear()
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSens()
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePEEP()
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_mode()
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEP()
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int)
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.text._ZN10screenView10updateDateEv)
</UL>
<P><STRONG><a name="[5a0]"></a>touchgfx::Unicode::nextChar(const unsigned short*&, const char*&)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, unicode.o(.text._ZN8touchgfx7Unicode8nextCharERPKtRPKc))
<BR><BR>[Called By]<UL><LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>

<P><STRONG><a name="[a8]"></a>touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, unicode.o(.text._ZN8touchgfx7Unicode8snprintfEPttPKcz))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePIP()
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVT()
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRR()
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleIE()
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VT()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RR()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IE()
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_backwardTestScreen()
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowSensor_continue_button()
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_tightness_continue_button()
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowShapeBackupScreen()
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTimeBackupScreen()
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControlBackupScreen()
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowSensor_button()
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePControlMax_CONF()
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_tightness_button()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_obstructionAlarm()
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEPBackupScreen()
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControlMax_conf()
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowShapeBackup()
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCircuitDisAlarm()
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBackupApneaTime()
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_ventStopedAlarm()
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_circuitDisAlarm()
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backPatientInfo()
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRiseTimeBackup()
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePControlBackup()
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowShape_CONF()
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowShape_conf()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VTBackupScreen()
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RRBackupScreen()
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSafetyVT_CONF()
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRisetime_CONF()
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePControl_CONF()
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::createDataTrendList()
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_safetyVT_conf()
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTime_conf()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_pulsRateAlarm()
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControl_conf()
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setCalibrationData()
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleIPAPMax_CONF()
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCycling_CONF()
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarmShowing()
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_heightButton()
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_cycling_conf()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IPAPMax_conf()
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePressureMin()
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePressureMax()
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_patientInfo()
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_cancelAlert()
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backupApnea()
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VtiAlarmbtn()
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VteAlarmbtn()
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_MViAlarmbtn()
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_MVeAlarmbtn()
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePsupp_CONF()
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePSMax_CONF()
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePEEPBackup()
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHRMinAlarm()
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHRMaxAlarm()
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_deviceInfo()
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RRAlarmbtn()
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Psupp_conf()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PSMax_conf()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePEEP_CONF()
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleIPAP_CONF()
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2_CONF()
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleEPAP_CONF()
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCPAP_CONF()
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_leakAlarm()
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_SPO2Alarm()
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEP_conf()
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PAlarmbtn()
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IPAP_conf()
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2_conf()
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2Alarm()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_EPAP_conf()
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_CPAP_conf()
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVTBackup()
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRisetime()
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRBackup()
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_yesAlert()
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTime()
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControl()
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVT_CONF()
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSPO2Min()
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSPO2Max()
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRR_CONF()
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleLeakMax()
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2Min()
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2Max()
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCycling()
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_lowPEEP()
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_cycling()
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VT_conf()
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RR_conf()
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleWeight()
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVtiMin()
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVtiMax()
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVteMin()
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVteMax()
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMViMin()
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMViMax()
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMVeMin()
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMVeMax()
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRMin()
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRMax()
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePsupp()
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarm()
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Psupp()
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePEEP()
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlow()
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2()
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCPAP()
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flow()
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEP()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2()
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_CPAP()
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsBase::formatLabel(unsigned short*, short, int, int, unsigned short, int) const
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>
<BR>[Address Reference Count : 9]<UL><LI> screenview.o(.text._ZN10screenView22updateConfigsWildCardsEv)
<LI> screenview.o(.text._ZN10screenView11setupScreenEv)
<LI> screenview.o(.text._ZN10screenView15handleTickEventEv)
<LI> screenview.o(.text._ZN10screenView16handleMainScreenEv)
<LI> screenview.o(.text._ZN10screenView11handleAlarmEv)
<LI> screenview.o(.text._ZN10screenView19handleAlarmNextPageEv)
<LI> screenview.o(.text._ZN10screenView20createAlarmTrendListEv)
<LI> screenview.o(.text._ZN10screenView19createDataTrendListEv)
<LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[7a4]"></a>touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, unicode.o(.text._ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>

<P><STRONG><a name="[7a5]"></a>touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)</STRONG> (Thumb, 852 bytes, Stack size 184 bytes, unicode.o(.text._ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int)
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[789]"></a>touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, utils.o(.text._ZN8touchgfx7muldivuEjjjRj))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::clzu(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
</UL>

<P><STRONG><a name="[441]"></a>touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::execute(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvE7executeES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::execute(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
</UL>
<P><STRONG><a name="[440]"></a>touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::~Callback__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::~Callback__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
</UL>
<P><STRONG><a name="[445]"></a>touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&, void, void&rang;::execute(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_8TextAreaEEEvvE7executeES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&, void, void&rang;::execute(const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_8TextAreaEEEvvEE)
</UL>
<P><STRONG><a name="[444]"></a>touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&, void, void&rang;::~Callback__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_8TextAreaEEEvvED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&, void, void&rang;::~Callback__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_8TextAreaEEEvvEE)
</UL>
<P><STRONG><a name="[449]"></a>touchgfx::Callback&lang;screenViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;screenViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[448]"></a>touchgfx::Callback&lang;screenViewBase, const touchgfx::AbstractButton&, void, void&rang;::~Callback__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::Callback&lang;screenViewBase, const touchgfx::AbstractButton&, void, void&rang;::~Callback__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[44d]"></a>touchgfx::Callback&lang;screenViewBase, const touchgfx::Slider&, int, void&rang;::execute(const touchgfx::Slider&, int)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_6SliderEivE7executeES4_i))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Callback&lang;screenViewBase, const touchgfx::Slider&, int, void&rang;::execute(const touchgfx::Slider&, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_6SliderEivEE)
</UL>
<P><STRONG><a name="[44c]"></a>touchgfx::Callback&lang;screenViewBase, const touchgfx::Slider&, int, void&rang;::~Callback__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_6SliderEivED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::Callback&lang;screenViewBase, const touchgfx::Slider&, int, void&rang;::~Callback__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_6SliderEivEE)
</UL>
<P><STRONG><a name="[451]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[450]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[454]"></a>touchgfx::Callback&lang;touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx8CallbackINS_16RadioButtonGroupILt2EEERKNS_14AbstractButtonEvvE7executeES5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackINS_16RadioButtonGroupILt2EEERKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[453]"></a>touchgfx::Callback&lang;touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;, const touchgfx::AbstractButton&, void, void&rang;::~Callback__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8CallbackINS_16RadioButtonGroupILt2EEERKNS_14AbstractButtonEvvED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::Callback&lang;touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;, const touchgfx::AbstractButton&, void, void&rang;::~Callback__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackINS_16RadioButtonGroupILt2EEERKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[a4]"></a>touchgfx::Drawable::setVisible(bool)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenview.o(.text._ZN8touchgfx8Drawable10setVisibleEb))
<BR><BR>[Called By]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::showAlert()
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAge()
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_age()
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VT()
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Ti()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RR()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IE()
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_backwardTestScreen()
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_forwardTestScreen()
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowSensor_continue_button()
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVentilationSettingScreen()
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePatientInfoSettingScreen()
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_forwardScreen()
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_testCalibration_button()
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowShapeBackupScreen()
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTimeBackupScreen()
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backBackupModeScreen()
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControlBackupScreen()
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTightnessTestScreen()
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBackupConfigScreen()
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose()
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableBackupModeChooses()
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleInitCircuitScreen()
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBackupChooseModes()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_previousPageAlarm()
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiMin_ventSetting()
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiMax_ventSetting()
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensorScreen()
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensitivity_conf()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_obstructionAlarm()
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_brightnessSlider(int)
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backTrendsScreen()
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backBackupScreen()
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backActiveAlarms()
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiInspPause_conf()
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEPBackupScreen()
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControlMax_conf()
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVentStopedAlarm()
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTightnessScreen()
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleInterfaceScreen()
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_ventStopedAlarm()
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_circuitDisAlarm()
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backVentSetting()
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backPatientInfo()
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleApneaDetection()
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::createAlarmTrendList()
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensors_button()
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowShape_conf()
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backInitialize()
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backDeviceInfo()
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backApneaAlarm()
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_apneaDetection()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VTBackupScreen()
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiBackupScreen()
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RRBackupScreen()
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSettingScreen()
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleInitAgeScreen()
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleDeviceSetting()
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarmNextPage()
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::createDataTrendList()
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_safetyVT_conf()
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTime_conf()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_pulsRateAlarm()
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_nonVentedMask()
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_nextPageAlarm()
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backupSetting()
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backupConfigs()
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControl_conf()
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2FakeAlarm()
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setCalibrationData()
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTrigger_CONF()
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarmShowing()
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_trigger_conf()
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_heightButton()
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_cycling_conf()
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_alarmRecords()
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_activeAlarms()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IPAPMax_conf()
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMasksScreen()
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleApneaAlaram()
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_toggleApnea()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensitivity()
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_patientInfo()
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_dataRecords()
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_cancelAlert()
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backupModes()
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backupApnea()
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backSetting()
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backDeviceS()
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backAlarmSc()
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_audioSlider(int)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VtiAlarmbtn()
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VteAlarmbtn()
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_MViAlarmbtn()
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_MVeAlarmbtn()
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMainScreen()
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleDeviceInfo()
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleChooseMode()
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBrightness()
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_ventedMask()
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_deviceInfo()
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_brightness()
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RRAlarmbtn()
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Psupp_conf()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PSMax_conf()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_leakAlarm()
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_SPO2Alarm()
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEP_conf()
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PAlarmbtn()
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IPAP_conf()
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2_conf()
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2Alarm()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_EPAP_conf()
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_CPAP_conf()
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleLanguage()
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_yesAlert()
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTime()
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_language()
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControl()
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTrigger()
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMinutes()
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleLowPEEP()
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_trigger()
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_setting()
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_lowPEEP()
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_english()
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_cycling()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_confirm()
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VT_conf()
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Ti_conf()
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RR_conf()
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTrends()
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSilent()
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBackup()
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_trends()
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_device()
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_arabic()
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setLanguage()
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHours()
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAudio()
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlert()
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarm()
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_audio()
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_alarm()
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Psupp()
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_time()
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_mode()
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flow()
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_date()
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEP()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2()
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_CPAP()
</UL>
<BR>[Address Reference Count : 81]<UL><LI> screenview.o(.text._ZN10screenView17click_backupApneaEv)
<LI> screenview.o(.text._ZN10screenView22updateConfigsWildCardsEv)
<LI> screenview.o(.text._ZN10screenView11setupScreenEv)
<LI> screenview.o(.text._ZN10screenView15handleTickEventEv)
<LI> screenview.o(.text._ZN10screenView9showAlertEv)
<LI> screenview.o(.text._ZN10screenView16handleMainScreenEv)
<LI> screenview.o(.text._ZN10screenView31handleInitTestCalibrationScreenEv)
<LI> screenview.o(.text._ZN10screenView35handleFlowSensor_backwardTestScreenEv)
<LI> screenview.o(.text._ZN10screenView34handleFlowSensor_forwardTestScreenEv)
<LI> screenview.o(.text._ZN10screenView30handleVentilationSettingScreenEv)
<LI> screenview.o(.text._ZN10screenView19handleDeviceSettingEv)
<LI> screenview.o(.text._ZN10screenView24handleBackupConfigScreenEv)
<LI> screenview.o(.text._ZN10screenView29click_adult_initScreen_buttonEv)
<LI> screenview.o(.text._ZN10screenView33click_pediatric_initScreen_buttonEv)
<LI> screenview.o(.text._ZN10screenView23click_singleLeak_buttonEv)
<LI> screenview.o(.text._ZN10screenView22click_tightness_buttonEv)
<LI> screenview.o(.text._ZN10screenView26click_back_tightnessScreenEv)
<LI> screenview.o(.text._ZN10screenView19click_O2Cell_buttonEv)
<LI> screenview.o(.text._ZN10screenView22click_CO2Sensor_buttonEv)
<LI> screenview.o(.text._ZN10screenView31click_tightness_continue_buttonEv)
<LI> screenview.o(.text._ZN10screenView32click_flowSensor_continue_buttonEv)
<LI> screenview.o(.text._ZN10screenView10click_maskEv)
<LI> screenview.o(.text._ZN10screenView20click_backInitializeEv)
<LI> screenview.o(.text._ZN10screenView13click_settingEv)
<LI> screenview.o(.text._ZN10screenView10click_PEEPEv)
<LI> screenview.o(.text._ZN10screenView8click_RREv)
<LI> screenview.o(.text._ZN10screenView8click_VTEv)
<LI> screenview.o(.text._ZN10screenView8click_IEEv)
<LI> screenview.o(.text._ZN10screenView10click_FiO2Ev)
<LI> screenview.o(.text._ZN10screenView8click_TiEv)
<LI> screenview.o(.text._ZN10screenView22click_TiInspPause_confEv)
<LI> screenview.o(.text._ZN10screenView20click_flowShape_confEv)
<LI> screenview.o(.text._ZN10screenView16click_Psupp_confEv)
<LI> screenview.o(.text._ZN10screenView16click_PSMax_confEv)
<LI> screenview.o(.text._ZN10screenView19click_riseTime_confEv)
<LI> screenview.o(.text._ZN10screenView13click_cyclingEv)
<LI> screenview.o(.text._ZN10screenView18click_cycling_confEv)
<LI> screenview.o(.text._ZN10screenView13click_triggerEv)
<LI> screenview.o(.text._ZN10screenView18click_trigger_confEv)
<LI> screenview.o(.text._ZN10screenView17click_backSettingEv)
<LI> screenview.o(.text._ZN10screenView10click_modeEv)
<LI> screenview.o(.text._ZN10screenView24disableVentSettingChooseEv)
<LI> screenview.o(.text._ZN10screenView11click_adultEv)
<LI> screenview.o(.text._ZN10screenView15click_pediatricEv)
<LI> screenview.o(.text._ZN10screenView17click_ventSettingEv)
<LI> screenview.o(.text._ZN10screenView20createAlarmTrendListEv)
<LI> screenview.o(.text._ZN10screenView17click_dataButton1Ev)
<LI> screenview.o(.text._ZN10screenView17click_dataButton2Ev)
<LI> screenview.o(.text._ZN10screenView17click_dataButton3Ev)
<LI> screenview.o(.text._ZN10screenView17click_dataButton4Ev)
<LI> screenview.o(.text._ZN10screenView20click_backDataGraphsEv)
<LI> screenview.o(.text._ZN10screenView17click_backupModesEv)
<LI> screenview.o(.text._ZN10screenView11click_alarmEv)
<LI> screenview.o(.text._ZN10screenView21click_backVentSettingEv)
<LI> screenview.o(.text._ZN10screenView17click_backDeviceSEv)
<LI> screenview.o(.text._ZN10screenView11click_audioEv)
<LI> screenview.o(.text._ZN10screenView17click_audioSliderEi)
<LI> screenview.o(.text._ZN10screenView16click_brightnessEv)
<LI> screenview.o(.text._ZN10screenView22click_brightnessSliderEi)
<LI> screenview.o(.text._ZN10screenView10click_timeEv)
<LI> screenview.o(.text._ZN10screenView10click_dateEv)
<LI> screenview.o(.text._ZN10screenView14click_languageEv)
<LI> screenview.o(.text._ZN10screenView11setLanguageEv)
<LI> screenview.o(.text._ZN10screenView17click_backAlarmScEv)
<LI> screenview.o(.text._ZN10screenView16click_RRAlarmbtnEv)
<LI> screenview.o(.text._ZN10screenView15click_PAlarmbtnEv)
<LI> screenview.o(.text._ZN10screenView17click_VtiAlarmbtnEv)
<LI> screenview.o(.text._ZN10screenView17click_VteAlarmbtnEv)
<LI> screenview.o(.text._ZN10screenView17click_MViAlarmbtnEv)
<LI> screenview.o(.text._ZN10screenView17click_MVeAlarmbtnEv)
<LI> screenview.o(.text._ZN10screenView15click_FiO2AlarmEv)
<LI> screenview.o(.text._ZN10screenView15click_leakAlarmEv)
<LI> screenview.o(.text._ZN10screenView13click_lowPEEPEv)
<LI> screenview.o(.text._ZN10screenView15click_SPO2AlarmEv)
<LI> screenview.o(.text._ZN10screenView21click_circuitDisAlarmEv)
<LI> screenview.o(.text._ZN10screenView19click_pulsRateAlarmEv)
<LI> screenview.o(.text._ZN10screenView22click_obstructionAlarmEv)
<LI> screenview.o(.text._ZN10screenView9startVentEv)
<LI> screenview.o(.text._ZN10screenView14click_yesAlertEv)
<LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> screenviewbase.o(.text._ZN14screenViewBase29logo_fadeEndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_5ImageEEE)
</UL>
<P><STRONG><a name="[eb]"></a>touchgfx::Drawable::setPosition(short, short, short, short)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx8Drawable11setPositionEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::setValue(int)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::setProgressIndicatorPosition(short, short, short, short)
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short)
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::updateIndicatorPosition(short)
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss)
</UL>
<P><STRONG><a name="[2d9]"></a>touchgfx::Drawable::moveRelative(short, short)</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Drawable::moveRelative(short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Address Reference Count : 37]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[77e]"></a>touchgfx::Drawable::getCachedAbsX()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, screen.o(.text._ZN8touchgfx8Drawable13getCachedAbsXEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::getCachedAbsX() &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[77f]"></a>touchgfx::Drawable::getCachedAbsY()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, screen.o(.text._ZN8touchgfx8Drawable13getCachedAbsYEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::getCachedAbsY() &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[2f9]"></a>touchgfx::Drawable::getFirstChild()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8Drawable13getFirstChildEv))
<BR>[Address Reference Count : 24]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[6d0]"></a>touchgfx::Drawable::setWidthHeight(const touchgfx::Bitmap&)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, button.o(.text._ZN8touchgfx8Drawable14setWidthHeightERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Drawable::setWidthHeight(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(short, short)
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
</UL>

<P><STRONG><a name="[73c]"></a>touchgfx::Drawable::setWidthHeight(const touchgfx::Drawable&)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZN8touchgfx8Drawable14setWidthHeightERKS0_))
<BR><BR>[Called By]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setBackground(const touchgfx::Bitmap&)
</UL>

<P><STRONG><a name="[76e]"></a>touchgfx::Drawable::setWidthHeight(short, short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx8Drawable14setWidthHeightEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentTextWithAlignment()
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setupHorizontalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::Line()
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(const touchgfx::Bitmap&)
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[2fd]"></a>touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_))
<BR>[Address Reference Count : 24]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[2d7]"></a>touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 31]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[2fc]"></a>touchgfx::Drawable::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8Drawable15handleTickEventEv))
<BR>[Address Reference Count : 31]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[2d5]"></a>touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 27]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[2d6]"></a>touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 37]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[2d4]"></a>touchgfx::Drawable::childGeometryChanged()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv))
<BR>[Address Reference Count : 37]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[77d]"></a>touchgfx::Drawable::getCachedVisibleRect()</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, screen.o(.text._ZN8touchgfx8Drawable20getCachedVisibleRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::getCachedVisibleRect()
</UL>
<BR>[Called By]<UL><LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[2cc]"></a>touchgfx::Drawable::getSolidRectAbsolute()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::getSolidRectAbsolute()
</UL>
<BR>[Address Reference Count : 37]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[2d0]"></a>touchgfx::Drawable::setX(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8Drawable4setXEs))
<BR>[Address Reference Count : 37]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[2d1]"></a>touchgfx::Drawable::setY(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8Drawable4setYEs))
<BR>[Address Reference Count : 37]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[ad]"></a>touchgfx::Drawable::setXY(short, short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, screenview.o(.text._ZN8touchgfx8Drawable5setXYEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, const touchgfx::Rect&)
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVentilationSettingScreen()
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBackupConfigScreen()
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMainScreen()
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveRelative(short, short)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::DigitalClock()
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screenview.o(.text._ZN10screenView16handleMainScreenEv)
<LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> slider.o(.text._ZN8touchgfx6Slider21setupHorizontalSliderEttttt)
</UL>
<P><STRONG><a name="[2da]"></a>touchgfx::Drawable::moveTo(short, short)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, screenview.o(.text._ZN8touchgfx8Drawable6moveToEss))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_age()
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMainScreen()
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_pediatric()
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_adult()
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::nextMoveAnimationStep()
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::updateIndicatorPosition(short)
</UL>
<BR>[Address Reference Count : 37]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[2d2]"></a>touchgfx::Drawable::setWidth(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8Drawable8setWidthEs))
<BR>[Address Reference Count : 26]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[2d3]"></a>touchgfx::Drawable::setHeight(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8Drawable9setHeightEs))
<BR>[Address Reference Count : 26]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[2f4]"></a>touchgfx::Drawable::~Drawable__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8DrawableD2Ev))
<BR>[Address Reference Count : 19]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[74f]"></a>touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, gestures.o(.text._ZN8touchgfx8Gestures17registerDragEventEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[750]"></a>touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, gestures.o(.text._ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::noTouch()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[745]"></a>touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gestures.o(.text._ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)
</UL>

<P><STRONG><a name="[74c]"></a>touchgfx::Gestures::tick()</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gestures.o(.text._ZN8touchgfx8Gestures4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
</UL>

<P><STRONG><a name="[7a8]"></a>touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[5cf]"></a>touchgfx::LCD16bpp::div255_565(unsigned short, unsigned char)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp10div255_565Eth))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::div255_565(unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div31rb(unsigned short, unsigned char)
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div31g(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_91
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[116]"></a>touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp10div255_888Ejh))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888_FFcheck(unsigned, unsigned char)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKjssiihhh)
<LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKjssiihh)
<LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKjssiihhh)
</UL>
<P><STRONG><a name="[498]"></a>touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 372 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_68
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[7ae]"></a>touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 420 bytes, Stack size 128 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; OUTLINED_FUNCTION_90 &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_90
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_88
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_67
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_57
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_56
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_34
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_30
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned char*, touchgfx::Bitmap::BitmapFormat, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[70f]"></a>touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8LCD16bpp14getNativeColorENS_9colortypeE))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::setColor(touchgfx::colortype)
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int) const
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int) const
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char) const
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned short*, unsigned, short, unsigned char, unsigned char) const
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, unsigned, short, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char) const
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char, unsigned char) const
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>

<P><STRONG><a name="[7b5]"></a>touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 396 bytes, Stack size 104 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKjRKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; OUTLINED_FUNCTION_99 &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_99
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_98
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_68
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_57
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_56
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_54
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_34
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned char*, touchgfx::Bitmap::BitmapFormat, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[7a9]"></a>touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 388 bytes, Stack size 88 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_90
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_89
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_82
<LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_71
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_68
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_56
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_34
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[7ab]"></a>touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 524 bytes, Stack size 128 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_90
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_67
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_57
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_34
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_30
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[491]"></a>touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)</STRONG> (Thumb, 684 bytes, Stack size 72 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool) &rArr; touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_87
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_86
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_57
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_49
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_39
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_38
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_100
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[7c7]"></a>touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18div255_565_FFcheckEth))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div31rb(unsigned short, unsigned char)
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div31g(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[118]"></a>touchgfx::LCD16bpp::div255_888_FFcheck(unsigned, unsigned char)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18div255_888_FFcheckEjh))
<BR><BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKjsiihh)
</UL>
<P><STRONG><a name="[7aa]"></a>touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 420 bytes, Stack size 128 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_90
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_83
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_67
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_57
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_56
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_34
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_30
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[7c9]"></a>touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp20bilinearInterpolate8Ehhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[117]"></a>touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp20bilinearInterpolate8Ehhhhhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_85
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_70
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_62
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned short*, unsigned, short, unsigned char, unsigned char) const
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, unsigned, short, unsigned char, unsigned char, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh)
</UL>
<P><STRONG><a name="[7ca]"></a>touchgfx::LCD16bpp::getFramebufferStride()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp20getFramebufferStrideEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::getFramebufferStride() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::framebufferStride() const
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[7c0]"></a>touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 460 bytes, Stack size 88 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; OUTLINED_FUNCTION_90 &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_95
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_90
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_82
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_79
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_78
<LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_71
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_56
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_34
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[7ce]"></a>touchgfx::LCD16bpp::enableTextureMapperA4()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[5c6]"></a>touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp21getNativeColorFromRGBEhhh))
<BR><BR>[Called By]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_92
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_68
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int) const
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char) const
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int) const
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int) const
<LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int) const
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char) const
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char) const
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char) const
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char) const
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned short*, short, int, int, unsigned char) const
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned short*, unsigned, short, unsigned char, unsigned char) const
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, unsigned, short, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char) const
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char, unsigned char) const
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[7d1]"></a>touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned char)</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp22bilinearInterpolate565Etth))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[5bd]"></a>touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp22bilinearInterpolate565Etttthh))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_48
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[5c3]"></a>touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp22bilinearInterpolate888Ejjjjhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_60
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[6af]"></a>touchgfx::LCD16bpp::enableTextureMapperAll()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
</UL>
<BR>[Called By]<UL><LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[7d6]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
</UL>

<P><STRONG><a name="[7d2]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[7d4]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[7d5]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[4a0]"></a>touchgfx::LCD16bpp::getTextureMapperDrawScanLine(const touchgfx::TextureSurface&, unsigned short, unsigned char)</STRONG> (Thumb, 424 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::getTextureMapperDrawScanLine(const touchgfx::TextureSurface&, unsigned short, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[496]"></a>touchgfx::LCD16bpp::copyAreaFromTFTToClientBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 260 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::LCD16bpp::copyAreaFromTFTToClientBuffer(const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_57
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_56
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[495]"></a>touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned char*, short, short)</STRONG> (Thumb, 492 bytes, Stack size 96 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned char*, short, short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_99
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_57
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::restrictTo(short, short)
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[494]"></a>touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned short)</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned short) &rArr; touchgfx::Bitmap::getFormat() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[7d3]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[458]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 278 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_96
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_94
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_73
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_41
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_33
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_31
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char, unsigned char) const
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(const unsigned short*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[457]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[45a]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 280 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_72
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_41
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_40
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_29
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_26
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char) const
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(const unsigned short*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[459]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[7d0]"></a>touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
</UL>
<BR>[Called By]<UL><LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
</UL>

<P><STRONG><a name="[45c]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 334 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; OUTLINED_FUNCTION_70 &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_75
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_69
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_51
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_31
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, unsigned, short, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[45b]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[45e]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 324 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const &rArr; OUTLINED_FUNCTION_70 &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_69
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_51
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_31
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned short*, unsigned, short, unsigned char, unsigned char) const
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[45d]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[7cf]"></a>touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
</UL>
<BR>[Called By]<UL><LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
</UL>

<P><STRONG><a name="[7dc]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
</UL>
<BR>[Called By]<UL><LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
</UL>

<P><STRONG><a name="[7de]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
</UL>
<BR>[Called By]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
</UL>

<P><STRONG><a name="[7e0]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
</UL>
<BR>[Called By]<UL><LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
</UL>

<P><STRONG><a name="[460]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 242 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned short*, short, int, int, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_72
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_66
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_59
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_41
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_40
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_105
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_104
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_102
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned short*, short, int, int, unsigned char) const
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[45f]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[7e2]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
</UL>
<BR>[Called By]<UL><LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
</UL>

<P><STRONG><a name="[462]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 306 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_80
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_74
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_65
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_27
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[461]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[7d8]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
</UL>
<BR>[Called By]<UL><LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[464]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 216 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_94
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_45
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_44
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_43
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_41
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_36
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char) const
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[463]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[466]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 216 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_94
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_45
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_44
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_43
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_41
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_36
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char) const
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[465]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[468]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 254 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_94
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_45
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_44
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_43
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_41
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_36
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_33
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char) const
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[467]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[7db]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
</UL>
<BR>[Called By]<UL><LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
</UL>

<P><STRONG><a name="[7dd]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
</UL>
<BR>[Called By]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
</UL>

<P><STRONG><a name="[7df]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
</UL>
<BR>[Called By]<UL><LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
</UL>

<P><STRONG><a name="[46a]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 242 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_72
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_66
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_59
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_41
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_40
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_105
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_104
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_102
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char) const
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[469]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[46c]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 306 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_80
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_27
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[46b]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[46e]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 220 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_72
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_65
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_64
<LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_55
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_44
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_43
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_41
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_40
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_14
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int) const
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[46d]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[470]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 242 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_72
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_65
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_64
<LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_55
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_44
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_43
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_41
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_40
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_29
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_26
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int) const
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[46f]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[7da]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
</UL>
<BR>[Called By]<UL><LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[472]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 282 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_76
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_51
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_47
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[471]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[7e1]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
</UL>
<BR>[Called By]<UL><LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
</UL>

<P><STRONG><a name="[474]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 228 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_96
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_72
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_66
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_65
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_59
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_41
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_40
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_105
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_104
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_102
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int) const
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[473]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[476]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 216 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_94
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_45
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_44
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_43
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_41
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_36
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char) const
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[475]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[478]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 250 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_74
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_73
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_53
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_15
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_103
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[477]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[7d7]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
</UL>
<BR>[Called By]<UL><LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[47a]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 266 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_75
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_51
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_46
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_42
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[479]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[47c]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 266 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_75
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_51
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_46
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_42
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[47b]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[47e]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 288 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; OUTLINED_FUNCTION_62 &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_75
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_51
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_46
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_42
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[47d]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[480]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 220 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_72
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_65
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_64
<LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_55
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_44
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_43
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_41
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_40
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_14
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int) const
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[47f]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[482]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 282 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; OUTLINED_FUNCTION_60 &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_76
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_51
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_47
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[481]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[484]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 262 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_93
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_74
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_51
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_32
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_101
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[483]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[486]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 262 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_93
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_74
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_51
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_32
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_101
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[485]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[488]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 292 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const &rArr; OUTLINED_FUNCTION_62 &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_75
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_51
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[487]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[7d9]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
</UL>
<BR>[Called By]<UL><LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[48a]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 250 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const &rArr; OUTLINED_FUNCTION_60 &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_74
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_73
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_53
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_15
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_103
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[489]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[48c]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 266 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_75
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_51
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_46
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_42
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[48b]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[48e]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 262 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_93
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_74
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_51
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_32
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_101
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[48d]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[7ad]"></a>touchgfx::LCD16bpp::div31g(unsigned short, unsigned char)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp6div31gEth))
<BR><BR>[Called By]<UL><LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565(unsigned short, unsigned char)
</UL>

<P><STRONG><a name="[7ac]"></a>touchgfx::LCD16bpp::div31rb(unsigned short, unsigned char)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp7div31rbEth))
<BR><BR>[Called By]<UL><LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565(unsigned short, unsigned char)
</UL>

<P><STRONG><a name="[493]"></a>touchgfx::LCD16bpp::blitCopy(const unsigned char*, touchgfx::Bitmap::BitmapFormat, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopy(const unsigned char*, touchgfx::Bitmap::BitmapFormat, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool) &rArr; touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; OUTLINED_FUNCTION_90 &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[492]"></a>touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</STRONG> (Thumb, 416 bytes, Stack size 104 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool) &rArr; OUTLINED_FUNCTION_99 &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_99
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_98
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_88
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_57
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_56
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_54
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_34
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[497]"></a>touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_57
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_56
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[849]"></a>touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation) &rArr; touchgfx::LCD16bpp::getFramebufferStride() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getFramebufferStride()
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[4a2]"></a>touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</STRONG> (Thumb, 952 bytes, Stack size 136 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation) &rArr; touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation) &rArr; touchgfx::LCD16bpp::getFramebufferStride() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_57
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_56
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_37
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_34
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[84b]"></a>touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation) &rArr; touchgfx::LCD16bpp::getFramebufferStride() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getFramebufferStride()
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[5ed]"></a>touchgfx::LCD16bpp::LCD16bpp()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bppC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::LCD16bpp::LCD16bpp() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_TouchGFXConfiguration.cpp
</UL>

<P><STRONG><a name="[8da]"></a>touchgfx::LCD16bpp::LCD16bpp__sub_object()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bppC2Ev), UNUSED)

<P><STRONG><a name="[490]"></a>touchgfx::LCD16bpp::~LCD16bpp__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bppD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::~LCD16bpp__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[329]"></a>touchgfx::TextArea::setBaselineY(short)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx8TextArea12setBaselineYEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::setBaselineY(short) &rArr; touchgfx::TypedText::getFont() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[f1]"></a>touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, textarea.o(.text._ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::TextArea::setTypedText(const touchgfx::TypedText&) &rArr; touchgfx::TextArea::resizeToCurrentText() &rArr; touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setTypedText(touchgfx::TypedText)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[32a]"></a>touchgfx::TextArea::setXBaselineY(short, short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx8TextArea13setXBaselineYEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextArea::setXBaselineY(short, short)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[ef]"></a>touchgfx::TextArea::setLinespacing(short)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, screenviewbase.o(.text._ZN8touchgfx8TextArea14setLinespacingEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::setLinespacing(short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[a7]"></a>touchgfx::TextArea::resizeToCurrentText()</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, textarea.o(.text._ZN8touchgfx8TextArea19resizeToCurrentTextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::TextArea::resizeToCurrentText() &rArr; touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(short, short)
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>
<BR>[Called By]<UL><LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRR()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RR()
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensitivity_conf()
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_circuitDisAlarm()
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::createAlarmTrendList()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_pulsRateAlarm()
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setCalibrationData()
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarmShowing()
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePressureMin()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensitivity()
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VtiAlarmbtn()
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VteAlarmbtn()
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_MViAlarmbtn()
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_MVeAlarmbtn()
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHRMinAlarm()
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHRMaxAlarm()
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RRAlarmbtn()
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSens_CONF()
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePEEP_CONF()
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_leakAlarm()
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_SPO2Alarm()
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEP_conf()
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PAlarmbtn()
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2Alarm()
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRBackup()
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSPO2Min()
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSPO2Max()
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRR_CONF()
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleLeakMax()
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2Min()
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2Max()
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RR_conf()
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVtiMin()
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVtiMax()
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVteMin()
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVteMax()
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMViMin()
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMViMax()
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMVeMin()
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMVeMax()
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRMin()
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRMax()
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSens()
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePEEP()
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEP()
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screenview.o(.text._ZN10screenView10updateDateEv)
<LI> screenview.o(.text._ZN10screenView11setupScreenEv)
<LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[649]"></a>touchgfx::TextArea::resizeToCurrentTextWithAlignment()</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, textarea.o(.text._ZN8touchgfx8TextArea32resizeToCurrentTextWithAlignmentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::TextArea::resizeToCurrentTextWithAlignment() &rArr; touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(short, short)
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
</UL>

<P><STRONG><a name="[328]"></a>touchgfx::TextArea::setAlpha(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8TextArea8setAlphaEh))
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[ee]"></a>touchgfx::TextArea::setColor(touchgfx::colortype)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8TextArea8setColorENS_9colortypeE))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[325]"></a>touchgfx::TextArea::setWidth(short)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, screenviewbase.o(.text._ZN8touchgfx8TextArea8setWidthEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::setWidth(short)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[326]"></a>touchgfx::TextArea::setHeight(short)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, screenviewbase.o(.text._ZN8touchgfx8TextArea9setHeightEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::setHeight(short)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[b8]"></a>touchgfx::TextArea::TextArea__sub_object()</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx8TextAreaC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::TextArea::TextArea__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText__sub_object(unsigned short)
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase__sub_object()
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::FadeAnimator__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[4a3]"></a>touchgfx::TextArea::~TextArea__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, textarea.o(.text._ZN8touchgfx8TextAreaD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::~TextArea__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[320]"></a>touchgfx::TextArea::~TextArea__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx8TextAreaD2Ev))
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[76a]"></a>touchgfx::ceil28_4(int)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, texturemaptypes.o(.text._ZN8touchgfx8ceil28_4Ei))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::Edge(const touchgfx::Gradients&, const touchgfx::Point3D*, int, int)
</UL>

<P><STRONG><a name="[70e]"></a>touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, constfont.o(.text._ZN8touchgfx9ConstFontC2EPKNS_9GlyphNodeEtthhhhhtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>

<P><STRONG><a name="[4a4]"></a>touchgfx::ConstFont::~ConstFont__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, constfont.o(.text._ZN8touchgfx9ConstFontD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[2e2]"></a>touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)
</UL>
<BR>[Address Reference Count : 13]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[2cd]"></a>touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**) &rArr; touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
</UL>
<BR>[Address Reference Count : 13]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[2cb]"></a>touchgfx::Container::getFirstChild()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx9Container13getFirstChildEv))
<BR>[Address Reference Count : 13]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[2db]"></a>touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**) &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 13]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[2e1]"></a>touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</STRONG> (Thumb, 412 bytes, Stack size 96 bytes, container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*) &rArr; touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**) &rArr; touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 13]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[2e4]"></a>touchgfx::Container::moveChildrenRelative(short, short)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Container::moveChildrenRelative(short, short)
</UL>
<BR>[Address Reference Count : 13]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[f2]"></a>touchgfx::Container::add(touchgfx::Drawable&)</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Container::add(touchgfx::Drawable&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::DigitalClock()
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::BoxProgress()
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
</UL>
<BR>[Address Reference Count : 16]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraphC2Es)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
<LI> slider.o(.text._ZN8touchgfx6SliderC2Ev)
</UL>
<P><STRONG><a name="[2e0]"></a>touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_))
<BR>[Address Reference Count : 13]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[2dc]"></a>touchgfx::Container::remove(touchgfx::Drawable&)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE))
<BR>[Address Reference Count : 13]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[2de]"></a>touchgfx::Container::unlink()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container6unlinkEv))
<BR>[Address Reference Count : 13]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[2df]"></a>touchgfx::Container::contains(const touchgfx::Drawable&)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE))
<BR>[Address Reference Count : 13]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[2dd]"></a>touchgfx::Container::removeAll()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container9removeAllEv))
<BR>[Address Reference Count : 13]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[b4]"></a>touchgfx::Container::Container__sub_object()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZN8touchgfx9ContainerC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Container::Container__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::MoveAnimator__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[4a7]"></a>touchgfx::Container::~Container__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9ContainerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::Container::~Container__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[3f7]"></a>touchgfx::DMA_Queue::~DMA_Queue__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx9DMA_QueueD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[4a8]"></a>touchgfx::DragEvent::~DragEvent__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx9DragEventD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::DragEvent::~DragEvent__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx9DragEventE)
</UL>
<P><STRONG><a name="[763]"></a>touchgfx::Gradients::Gradients(const touchgfx::Point3D*)</STRONG> (Thumb, 468 bytes, Stack size 20 bytes, texturemaptypes.o(.text._ZN8touchgfx9GradientsC2EPKNS_7Point3DE))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::Gradients::Gradients(const touchgfx::Point3D*)
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[8db]"></a>touchgfx::Gradients::Gradients__sub_object(const touchgfx::Point3D*)</STRONG> (Thumb, 468 bytes, Stack size 20 bytes, texturemaptypes.o(.text._ZN8touchgfx9GradientsC2EPKNS_7Point3DE), UNUSED)

<P><STRONG><a name="[4ac]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[4ad]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[694]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
</UL>

<P><STRONG><a name="[4aa]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[4b1]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[4b2]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[693]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
</UL>

<P><STRONG><a name="[4af]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[4b6]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[4b7]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[695]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
</UL>

<P><STRONG><a name="[4b4]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[f0]"></a>touchgfx::TypedText::TypedText__sub_object(unsigned short)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZN8touchgfx9TypedTextC2Et))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsBase::GraphLabelsBase__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
</UL>
<P><STRONG><a name="[4ba]"></a>touchgfx::TypedText::~TypedText__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fontcache.o(.text._ZN8touchgfx9TypedTextD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::~TypedText__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontcache.o(.rodata._ZTVN8touchgfx9TypedTextE)
</UL>
<P><STRONG><a name="[4b9]"></a>touchgfx::TypedText::~TypedText__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, fontcache.o(.text._ZN8touchgfx9TypedTextD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> fontcache.o(.rodata._ZTVN8touchgfx9TypedTextE)
</UL>
<P><STRONG><a name="[1c4]"></a>TouchGFXHAL::getTFTFrameBuffer() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZNK11TouchGFXHAL17getTFTFrameBufferEv))
<BR><BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::getTFTFrameBuffer() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[29e]"></a>TouchGFXGeneratedHAL::getTFTFrameBuffer() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::getTFTFrameBuffer() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[2c0]"></a>touchgfx::ClickEvent::getEventType() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZNK8touchgfx10ClickEvent12getEventTypeEv))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
</UL>
<P><STRONG><a name="[6b8]"></a>touchgfx::Rasterizer::calculateAlpha(int) const</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, canvas.o(.text._ZNK8touchgfx10Rasterizer14calculateAlphaEi))
<BR><BR>[Called By]<UL><LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[2f3]"></a>touchgfx::BoxProgress::getColor() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, boxprogress.o(.text._ZNK8touchgfx11BoxProgress8getColorEv))
<BR>[Address Reference Count : 1]<UL><LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
</UL>
<P><STRONG><a name="[2f7]"></a>touchgfx::RadioButton::getSolidRect() const</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, radiobutton.o(.text._ZNK8touchgfx11RadioButton12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::RadioButton::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::getCurrentlyDisplayedBitmap() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
</UL>
<P><STRONG><a name="[2f8]"></a>touchgfx::RadioButton::invalidateContent() const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, radiobutton.o(.text._ZNK8touchgfx11RadioButton17invalidateContentEv))
<BR>[Address Reference Count : 1]<UL><LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
</UL>
<P><STRONG><a name="[853]"></a>touchgfx::RadioButton::getCurrentlyDisplayedBitmap() const</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, radiobutton.o(.text._ZNK8touchgfx11RadioButton27getCurrentlyDisplayedBitmapEv))
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::draw(const touchgfx::Rect&) const
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::getSolidRect() const
</UL>

<P><STRONG><a name="[2f6]"></a>touchgfx::RadioButton::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, radiobutton.o(.text._ZNK8touchgfx11RadioButton4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::RadioButton::draw(const touchgfx::Rect&) const &rArr; touchgfx::Bitmap::getRect() const &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getId() const
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getRect() const
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::getCurrentlyDisplayedBitmap() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
</UL>
<P><STRONG><a name="[a5]"></a>touchgfx::CanvasWidget::invalidate() const</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::CanvasWidget::invalidate() const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_brightnessSlider(int)
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleDeviceSetting()
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backDeviceS()
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_audioSlider(int)
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBrightness()
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_brightness()
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_language()
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMinutes()
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHours()
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAudio()
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_audio()
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_time()
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_date()
</UL>
<BR>[Address Reference Count : 19]<UL><LI> screenview.o(.text._ZN10screenView15handleTickEventEv)
<LI> screenview.o(.text._ZN10screenView19handleDeviceSettingEv)
<LI> screenview.o(.text._ZN10screenView11click_audioEv)
<LI> screenview.o(.text._ZN10screenView17click_audioSliderEi)
<LI> screenview.o(.text._ZN10screenView16click_brightnessEv)
<LI> screenview.o(.text._ZN10screenView22click_brightnessSliderEi)
<LI> screenview.o(.text._ZN10screenView10click_timeEv)
<LI> screenview.o(.text._ZN10screenView14click_languageEv)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
</UL>
<P><STRONG><a name="[302]"></a>touchgfx::CanvasWidget::getSolidRect() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv))
<BR>[Address Reference Count : 11]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
</UL>
<P><STRONG><a name="[306]"></a>touchgfx::CanvasWidget::getMinimalRect() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv))
<BR>[Address Reference Count : 10]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
</UL>
<P><STRONG><a name="[301]"></a>touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 7]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
</UL>
<P><STRONG><a name="[305]"></a>touchgfx::CanvasWidget::getAlpha() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv))
<BR>[Address Reference Count : 11]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
</UL>
<P><STRONG><a name="[318]"></a>touchgfx::DigitalClock::getTextWidth() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, digitalclock.o(.text._ZNK8touchgfx12DigitalClock12getTextWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::DigitalClock::getTextWidth() const &rArr; touchgfx::TextArea::getTextWidth() const &rArr; touchgfx::TypedText::getFont() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[315]"></a>touchgfx::DigitalClock::getDisplayMode() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, digitalclock.o(.text._ZNK8touchgfx12DigitalClock14getDisplayModeEv))
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[30a]"></a>touchgfx::DigitalClock::invalidateContent() const</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, digitalclock.o(.text._ZNK8touchgfx12DigitalClock17invalidateContentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DigitalClock::invalidateContent() const &rArr; touchgfx::Container::invalidateContent() const
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::invalidateContent() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[317]"></a>touchgfx::DigitalClock::getAlpha() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, digitalclock.o(.text._ZNK8touchgfx12DigitalClock8getAlphaEv))
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[313]"></a>touchgfx::DigitalClock::getColor() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, digitalclock.o(.text._ZNK8touchgfx12DigitalClock8getColorEv))
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[31f]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::getFadeAnimationDelay() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx12FadeAnimatorINS_5ImageEE21getFadeAnimationDelayEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
</UL>
<P><STRONG><a name="[333]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::getFadeAnimationDelay() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx12FadeAnimatorINS_8TextAreaEE21getFadeAnimationDelayEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
</UL>
<P><STRONG><a name="[335]"></a>touchgfx::GestureEvent::getEventType() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZNK8touchgfx12GestureEvent12getEventTypeEv))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
</UL>
<P><STRONG><a name="[341]"></a>touchgfx::GraphLabelsY::drawString(const touchgfx::Rect&, const touchgfx::Font*, const touchgfx::AbstractDataGraph*, int, int, unsigned char) const</STRONG> (Thumb, 436 bytes, Stack size 136 bytes, graphlabels.o(.text._ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphLabelsY::drawString(const touchgfx::Rect&, const touchgfx::Font*, const touchgfx::AbstractDataGraph*, int, int, unsigned char) const &rArr; OUTLINED_FUNCTION_4 &rArr; touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsBase::formatLabel(unsigned short*, short, int, int, unsigned short, int) const
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getAlignment() const
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
</UL>
<P><STRONG><a name="[343]"></a>touchgfx::GraphLabelsY::getGraphRangeMaxScaled(const touchgfx::AbstractDataGraph*) const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, graphlabels.o(.text._ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE))
<BR>[Address Reference Count : 1]<UL><LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
</UL>
<P><STRONG><a name="[342]"></a>touchgfx::GraphLabelsY::getGraphRangeMinScaled(const touchgfx::AbstractDataGraph*) const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, graphlabels.o(.text._ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE))
<BR>[Address Reference Count : 1]<UL><LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
</UL>
<P><STRONG><a name="[33e]"></a>touchgfx::GraphLabelsY::getCorrectlyScaledLabelInterval(const touchgfx::AbstractDataGraph*) const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, graphlabels.o(.text._ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::GraphLabelsY::getCorrectlyScaledLabelInterval(const touchgfx::AbstractDataGraph*) const &rArr; touchgfx::AbstractGraphElement::convertToGraphScaleY(const touchgfx::AbstractDataGraph*, int, int) const &rArr; touchgfx::AbstractDataGraph::convertToNewScale(int, int, int) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::convertToGraphScaleY(const touchgfx::AbstractDataGraph*, int, int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
</UL>
<P><STRONG><a name="[348]"></a>touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::getMoveAnimationDelay() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx12MoveAnimatorINS_9ContainerEE21getMoveAnimationDelayEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
</UL>
<P><STRONG><a name="[6ff]"></a>touchgfx::TextProvider::binarySearch(unsigned short, const unsigned short(*)[5], int) const</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, textprovider.o(.text._ZNK8touchgfx12TextProvider12binarySearchEtPA5_Kti))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::TextProvider::binarySearch(unsigned short, const unsigned short(*)[5], int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::unicodeConverter(unsigned char)
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::contextualFormForChar(unsigned short) const
</UL>

<P><STRONG><a name="[700]"></a>touchgfx::TextProvider::contextualFormForChar(unsigned short) const</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, textprovider.o(.text._ZNK8touchgfx12TextProvider21contextualFormForCharEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::TextProvider::contextualFormForChar(unsigned short) const &rArr; touchgfx::TextProvider::binarySearch(unsigned short, const unsigned short(*)[5], int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::binarySearch(unsigned short, const unsigned short(*)[5], int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::unicodeConverter(unsigned char)
</UL>

<P><STRONG><a name="[6fe]"></a>touchgfx::TextProvider::gsubTableBinarySearch(unsigned short, const unsigned short*, unsigned short) const</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, textprovider.o(.text._ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextProvider::gsubTableBinarySearch(unsigned short, const unsigned short*, unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
</UL>

<P><STRONG><a name="[686]"></a>touchgfx::ToggleButton::getState() const</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, screenview.o(.text._ZNK8touchgfx12ToggleButton8getStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::ToggleButton::getState() const &rArr; touchgfx::Bitmap::getId() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getId() const
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_toggleApnea()
</UL>

<P><STRONG><a name="[6d5]"></a>touchgfx::AbstractClock::getCurrentAM() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, abstractclock.o(.text._ZNK8touchgfx13AbstractClock12getCurrentAMEv))
<BR><BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>

<P><STRONG><a name="[604]"></a>touchgfx::AbstractClock::getCurrentHour() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractclock.o(.text._ZNK8touchgfx13AbstractClock14getCurrentHourEv))
<BR><BR>[Called By]<UL><LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHours()
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_time()
</UL>

<P><STRONG><a name="[6d4]"></a>touchgfx::AbstractClock::getCurrentHour12() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, abstractclock.o(.text._ZNK8touchgfx13AbstractClock16getCurrentHour12Ev))
<BR><BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>

<P><STRONG><a name="[614]"></a>touchgfx::AbstractClock::getCurrentHour24() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractclock.o(.text._ZNK8touchgfx13AbstractClock16getCurrentHour24Ev))
<BR><BR>[Called By]<UL><LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMinutes()
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHours()
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>

<P><STRONG><a name="[594]"></a>touchgfx::AbstractClock::getCurrentMinute() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractclock.o(.text._ZNK8touchgfx13AbstractClock16getCurrentMinuteEv))
<BR><BR>[Called By]<UL><LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMinutes()
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHours()
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_time()
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>

<P><STRONG><a name="[6d6]"></a>touchgfx::AbstractClock::getCurrentSecond() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractclock.o(.text._ZNK8touchgfx13AbstractClock16getCurrentSecondEv))
<BR><BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>

<P><STRONG><a name="[358]"></a>touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 276 bytes, Stack size 88 bytes, boxwithborder.o(.text._ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::draw(const touchgfx::Rect&) const
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
</UL>
<P><STRONG><a name="[36a]"></a>touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, generatedfont.o(.text._ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[36c]"></a>touchgfx::GeneratedFont::getGSUBTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, generatedfont.o(.text._ZNK8touchgfx13GeneratedFont12getGSUBTableEv))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[36e]"></a>touchgfx::GeneratedFont::getPixelData(const touchgfx::GlyphNode*) const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, generatedfont.o(.text._ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[36d]"></a>touchgfx::GeneratedFont::getContextualFormsTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, generatedfont.o(.text._ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[371]"></a>touchgfx::PainterRGB565::getRenderingMethod() const</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, painterrgb565.o(.text._ZNK8touchgfx13PainterRGB56518getRenderingMethodEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::PainterRGB565::getRenderingMethod() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[374]"></a>touchgfx::PainterRGB565::paint(unsigned char*, short, short, short, short, unsigned char) const</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, painterrgb565.o(.text._ZNK8touchgfx13PainterRGB5655paintEPhssssh))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::PainterRGB565::paint(unsigned char*, short, short, short, short, unsigned char) const &rArr; touchgfx::paint::rgb565::lineFromColor(unsigned short*, unsigned, unsigned, unsigned char, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::paint::rgb565::lineFromColor(unsigned short*, unsigned, unsigned, unsigned char, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[373]"></a>touchgfx::PainterRGB565::tearDown() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, painterrgb565.o(.text._ZNK8touchgfx13PainterRGB5658tearDownEv))
<BR><BR>[Calls]<UL><LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::paint::rgb565::tearDown()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[2ff]"></a>touchgfx::AbstractButton::getPressedState() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, button.o(.text._ZNK8touchgfx14AbstractButton15getPressedStateEv))
<BR>[Address Reference Count : 4]<UL><LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[3ff]"></a>touchgfx::AbstractPainter::getRenderingMethod() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx15AbstractPainter18getRenderingMethodEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[372]"></a>touchgfx::AbstractPainter::setup(const touchgfx::Rect&) const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE))
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
<LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[400]"></a>touchgfx::AbstractPainter::tearDown() const</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx15AbstractPainter8tearDownEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[37b]"></a>touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 296 bytes, Stack size 80 bytes, buttonwithlabel.o(.text._ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getAlignment() const
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[856]"></a>touchgfx::GraphLabelsBase::formatLabel(unsigned short*, short, int, int, unsigned short, int) const</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, graphlabels.o(.text._ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = touchgfx::GraphLabelsBase::formatLabel(unsigned short*, short, int, int, unsigned short, int) const &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strlen(const unsigned short*)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsY::drawString(const touchgfx::Rect&, const touchgfx::Font*, const touchgfx::AbstractDataGraph*, int, int, unsigned char) const
</UL>

<P><STRONG><a name="[340]"></a>touchgfx::GraphLabelsBase::drawIndexRange(const touchgfx::Rect&, const touchgfx::Font*, const touchgfx::AbstractDataGraph*, int, int, int, int, unsigned char) const</STRONG> (Thumb, 272 bytes, Stack size 72 bytes, graphlabels.o(.text._ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::GraphLabelsBase::drawIndexRange(const touchgfx::Rect&, const touchgfx::Font*, const touchgfx::AbstractDataGraph*, int, int, int, int, unsigned char) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
</UL>
<P><STRONG><a name="[33f]"></a>touchgfx::GraphLabelsBase::getCorrectlyScaledMajorInterval(const touchgfx::AbstractDataGraph*) const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, graphlabels.o(.text._ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE))
<BR>[Address Reference Count : 2]<UL><LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
</UL>
<P><STRONG><a name="[338]"></a>touchgfx::GraphLabelsBase::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 212 bytes, Stack size 56 bytes, graphlabels.o(.text._ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphLabelsBase::draw(const touchgfx::Rect&) const &rArr; touchgfx::TypedText::getFont() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
</UL>
<P><STRONG><a name="[3a7]"></a>touchgfx::DynamicDataGraph::indexToXAxis(int, int) const</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DynamicDataGraph::indexToXAxis(int, int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2intX(int) const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3aa]"></a>touchgfx::DynamicDataGraph::indexToScreenXQ5(short) const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3ab]"></a>touchgfx::DynamicDataGraph::indexToScreenYQ5(short) const</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DynamicDataGraph::indexToScreenYQ5(short) const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3af]"></a>touchgfx::DynamicDataGraph::getGraphRangeXMax() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3ae]"></a>touchgfx::DynamicDataGraph::getGraphRangeXMin() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3b5]"></a>touchgfx::DynamicDataGraph::getXAxisScaleAsInt() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3c2]"></a>touchgfx::DynamicDataGraph::indexToGlobalIndex(short) const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs))
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
</UL>
<P><STRONG><a name="[3b6]"></a>touchgfx::DynamicDataGraph::getXAxisFactorAsInt() const</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DynamicDataGraph::getXAxisFactorAsInt() const
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2intX(int) const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3bd]"></a>touchgfx::DynamicDataGraph::getXAxisOffsetAsInt() const</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DynamicDataGraph::getXAxisOffsetAsInt() const
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2intX(int) const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3c4]"></a>touchgfx::DynamicDataGraph::getXAxisScaleScaled() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3b9]"></a>touchgfx::DynamicDataGraph::getXAxisFactorScaled() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3bf]"></a>touchgfx::DynamicDataGraph::getXAxisOffsetScaled() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3b7]"></a>touchgfx::DynamicDataGraph::getXAxisScaleAsFloat() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3b8]"></a>touchgfx::DynamicDataGraph::getXAxisFactorAsFloat() const</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DynamicDataGraph::getXAxisFactorAsFloat() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3be]"></a>touchgfx::DynamicDataGraph::getXAxisOffsetAsFloat() const</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DynamicDataGraph::getXAxisOffsetAsFloat() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3a5]"></a>touchgfx::DynamicDataGraph::indexToDataPointXScaled(short) const</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::DynamicDataGraph::indexToDataPointXScaled(short) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3a6]"></a>touchgfx::DynamicDataGraph::indexToDataPointYScaled(short) const</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::DynamicDataGraph::indexToDataPointYScaled(short) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3ac]"></a>touchgfx::DynamicDataGraph::xScreenRangeToIndexRange(short, short, short&, short&) const</STRONG> (Thumb, 296 bytes, Stack size 32 bytes, abstractdatagraph.o(.text._ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::DynamicDataGraph::xScreenRangeToIndexRange(short, short, short&, short&) const &rArr; OUTLINED_FUNCTION_3 &rArr; touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3ad]"></a>touchgfx::DynamicDataGraph::getScale() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph8getScaleEv))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3c1]"></a>touchgfx::DynamicDataGraph::dataIndex(short) const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph9dataIndexEs))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[386]"></a>touchgfx::DynamicDataGraph::getScaleX() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph9getScaleXEv))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[388]"></a>touchgfx::DynamicDataGraph::getScaleY() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx16DynamicDataGraph9getScaleYEv))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3c6]"></a>touchgfx::GraphElementArea::drawCanvasWidget(const touchgfx::Rect&) const</STRONG> (Thumb, 426 bytes, Stack size 168 bytes, graphelements.o(.text._ZNK8touchgfx16GraphElementArea16drawCanvasWidgetERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphElementArea::drawCanvasWidget(const touchgfx::Rect&) const &rArr; OUTLINED_FUNCTION_20 &rArr; touchgfx::Canvas::render(unsigned char) &rArr; touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char) &rArr; touchgfx::Outline::closeOutlineAndSortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::convertToGraphScaleY(const touchgfx::AbstractDataGraph*, int, int) const
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_14
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
</UL>
<P><STRONG><a name="[860]"></a>touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const</STRONG> (Thumb, 306 bytes, Stack size 72 bytes, graphelements.o(.text._ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const &rArr; touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Rasterizer::moveTo(int, int) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[3c9]"></a>touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const</STRONG> (Thumb, 218 bytes, Stack size 152 bytes, graphelements.o(.text._ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const &rArr; OUTLINED_FUNCTION_20 &rArr; touchgfx::Canvas::render(unsigned char) &rArr; touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char) &rArr; touchgfx::Outline::closeOutlineAndSortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[3cd]"></a>touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::getRadioButton(unsigned short) const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx16RadioButtonGroupILt2EE14getRadioButtonEt))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
</UL>
<P><STRONG><a name="[3d2]"></a>touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::getDeselectionEnabled() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx16RadioButtonGroupILt2EE21getDeselectionEnabledEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
</UL>
<P><STRONG><a name="[3cf]"></a>touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::getSelectedRadioButton() const</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, screenviewbase.o(.text._ZNK8touchgfx16RadioButtonGroupILt2EE22getSelectedRadioButtonEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::getSelectedRadioButton() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
</UL>
<P><STRONG><a name="[3ce]"></a>touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::getSelectedRadioButtonIndex() const</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx16RadioButtonGroupILt2EE27getSelectedRadioButtonIndexEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx16RadioButtonGroupILt2EEE)
</UL>
<P><STRONG><a name="[114]"></a>touchgfx::AbstractDataGraph::scaled2intX(int) const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph11scaled2intXEi))
<BR><BR>[Calls]<UL><LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2int(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphRangeXMinAsInt() const
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphRangeXMaxAsInt() const
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::getXAxisOffsetAsInt() const
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::getXAxisFactorAsInt() const
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::indexToXAxis(int, int) const
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::setGraphRangeXAutoScaled(bool, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.text._ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_)
</UL>
<P><STRONG><a name="[864]"></a>touchgfx::AbstractDataGraph::scaled2intY(int) const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph11scaled2intYEi))
<BR><BR>[Calls]<UL><LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2int(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphRangeYMinAsInt() const
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphRangeYMaxAsInt() const
</UL>

<P><STRONG><a name="[71a]"></a>touchgfx::AbstractDataGraph::float2scaledX(float) const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph13float2scaledXEf))
<BR><BR>[Calls]<UL><LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaled(float, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphRangeXAuto(bool, float)
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphRangeX(float, float)
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::setXAxisOffset(float)
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::setXAxisFactor(float)
</UL>

<P><STRONG><a name="[718]"></a>touchgfx::AbstractDataGraph::float2scaledY(float) const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenview.o(.text._ZNK8touchgfx17AbstractDataGraph13float2scaledYEf))
<BR><BR>[Calls]<UL><LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaled(float, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(float)
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphRangeYAuto(bool, float)
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphRangeY(float, float)
</UL>

<P><STRONG><a name="[731]"></a>touchgfx::AbstractDataGraph::indexToScreenX(short) const</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph14indexToScreenXEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraph::indexToScreenX(short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getNearestIndexForScreenXY(short, short, short&)
</UL>

<P><STRONG><a name="[732]"></a>touchgfx::AbstractDataGraph::indexToScreenY(short) const</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph14indexToScreenYEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraph::indexToScreenY(short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getNearestIndexForScreenXY(short, short, short&)
</UL>

<P><STRONG><a name="[3a8]"></a>touchgfx::AbstractDataGraph::valueToScreenXQ5(int) const</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::AbstractDataGraph::valueToScreenXQ5(int) const &rArr; touchgfx::CWRUtil::muldiv_toQ5(int, int, int) &rArr; touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldiv_toQ5(int, int, int)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3a9]"></a>touchgfx::AbstractDataGraph::valueToScreenYQ5(int) const</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::AbstractDataGraph::valueToScreenYQ5(int) const &rArr; touchgfx::CWRUtil::muldiv_toQ5(int, int, int) &rArr; touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldiv_toQ5(int, int, int)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[380]"></a>touchgfx::AbstractDataGraph::invalidateContent() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph17invalidateContentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraph::invalidateContent() const &rArr; touchgfx::Container::invalidateContent() const
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::invalidateContent() const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[399]"></a>touchgfx::AbstractDataGraph::getGraphRangeXMaxAsInt() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2intX(int) const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[396]"></a>touchgfx::AbstractDataGraph::getGraphRangeXMinAsInt() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2intX(int) const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[39f]"></a>touchgfx::AbstractDataGraph::getGraphRangeYMaxAsInt() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv))
<BR><BR>[Calls]<UL><LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2intY(int) const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[39c]"></a>touchgfx::AbstractDataGraph::getGraphRangeYMinAsInt() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv))
<BR><BR>[Calls]<UL><LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2intY(int) const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[39b]"></a>touchgfx::AbstractDataGraph::getGraphRangeXMaxScaled() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv))
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[398]"></a>touchgfx::AbstractDataGraph::getGraphRangeXMinScaled() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv))
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3a1]"></a>touchgfx::AbstractDataGraph::getGraphRangeYMaxScaled() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv))
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[39e]"></a>touchgfx::AbstractDataGraph::getGraphRangeYMinScaled() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv))
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[39a]"></a>touchgfx::AbstractDataGraph::getGraphRangeXMaxAsFloat() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv))
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[397]"></a>touchgfx::AbstractDataGraph::getGraphRangeXMinAsFloat() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv))
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3a0]"></a>touchgfx::AbstractDataGraph::getGraphRangeYMaxAsFloat() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv))
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[39d]"></a>touchgfx::AbstractDataGraph::getGraphRangeYMinAsFloat() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv))
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3a4]"></a>touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const &rArr; touchgfx::AbstractDataGraph::indexToScreenX(short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::indexToScreenX(short) const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[3d7]"></a>touchgfx::AbstractDataGraph::getScaleX() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph9getScaleXEv))
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
</UL>
<P><STRONG><a name="[3d9]"></a>touchgfx::AbstractDataGraph::getScaleY() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph9getScaleYEv))
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
</UL>
<P><STRONG><a name="[3dd]"></a>touchgfx::AbstractPartition::getAllocationCount() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[3e6]"></a>touchgfx::GraphElementGridY::enclosingArea(const touchgfx::AbstractDataGraph*) const</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
</UL>
<P><STRONG><a name="[3ee]"></a>touchgfx::GraphElementGridY::valueToScreenQ5(const touchgfx::AbstractDataGraph*, int) const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
</UL>
<P><STRONG><a name="[3ea]"></a>touchgfx::GraphElementGridY::getGraphAreaStart(const touchgfx::AbstractDataGraph*) const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
</UL>
<P><STRONG><a name="[3ed]"></a>touchgfx::GraphElementGridY::getGraphAreaEndPos(const touchgfx::AbstractDataGraph*) const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
</UL>
<P><STRONG><a name="[3eb]"></a>touchgfx::GraphElementGridY::getGraphAreaLength(const touchgfx::AbstractDataGraph*) const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
</UL>
<P><STRONG><a name="[3ec]"></a>touchgfx::GraphElementGridY::getGraphAreaStartPos(const touchgfx::AbstractDataGraph*) const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
</UL>
<P><STRONG><a name="[3e9]"></a>touchgfx::GraphElementGridY::getGraphRangeMaxScaled(const touchgfx::AbstractDataGraph*) const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
</UL>
<P><STRONG><a name="[3e8]"></a>touchgfx::GraphElementGridY::getGraphRangeMinScaled(const touchgfx::AbstractDataGraph*) const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
</UL>
<P><STRONG><a name="[3e3]"></a>touchgfx::GraphElementGridY::getCorrectlyScaledGridInterval(const touchgfx::AbstractDataGraph*) const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::GraphElementGridY::getCorrectlyScaledGridInterval(const touchgfx::AbstractDataGraph*) const &rArr; touchgfx::AbstractGraphElement::convertToGraphScaleY(const touchgfx::AbstractDataGraph*, int, int) const &rArr; touchgfx::AbstractDataGraph::convertToNewScale(int, int, int) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::convertToGraphScaleY(const touchgfx::AbstractDataGraph*, int, int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
</UL>
<P><STRONG><a name="[3e7]"></a>touchgfx::GraphElementGridY::lineRect(short, short, short, short) const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx17GraphElementGridY8lineRectEssss))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
</UL>
<P><STRONG><a name="[726]"></a>touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, graphelements.o(.text._ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Calls]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[71e]"></a>touchgfx::AbstractGraphElement::convertToGraphScaleY(const touchgfx::AbstractDataGraph*, int, int) const</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZNK8touchgfx20AbstractGraphElement20convertToGraphScaleYEPKNS_17AbstractDataGraphEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::AbstractGraphElement::convertToGraphScaleY(const touchgfx::AbstractDataGraph*, int, int) const &rArr; touchgfx::AbstractDataGraph::convertToNewScale(int, int, int) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::convertToNewScale(int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridY::getCorrectlyScaledGridInterval(const touchgfx::AbstractDataGraph*) const
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsY::getCorrectlyScaledLabelInterval(const touchgfx::AbstractDataGraph*) const
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[722]"></a>touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const</STRONG> (Thumb, 100 bytes, Stack size 20 bytes, graphelements.o(.text._ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Called By]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[3e4]"></a>touchgfx::GraphElementGridBase::getCorrectlyScaledMajorInterval(const touchgfx::AbstractDataGraph*) const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE))
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
</UL>
<P><STRONG><a name="[3e1]"></a>touchgfx::GraphElementGridBase::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 858 bytes, Stack size 120 bytes, graphelements.o(.text._ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = touchgfx::GraphElementGridBase::draw(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
</UL>
<P><STRONG><a name="[3e5]"></a>touchgfx::GraphElementGridBase::drawLine(const touchgfx::Rect&, short, short, short, short, unsigned char) const</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, graphelements.o(.text._ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::GraphElementGridBase::drawLine(const touchgfx::Rect&, short, short, short, short, unsigned char) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
</UL>
<P><STRONG><a name="[3f2]"></a>touchgfx::GraphWrapAndClearData::indexToGlobalIndex(short) const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx21GraphWrapAndClearData18indexToGlobalIndexEs))
<BR>[Address Reference Count : 3]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[406]"></a>touchgfx::TextAreaWithOneWildcard::getWildcard1() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[409]"></a>touchgfx::TextAreaWithTwoWildcards::getWildcard1() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
</UL>
<P><STRONG><a name="[40a]"></a>touchgfx::TextAreaWithTwoWildcards::getWildcard2() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard2Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
</UL>
<P><STRONG><a name="[405]"></a>touchgfx::TextAreaWithWildcardBase::invalidateContent() const</STRONG> (Thumb, 208 bytes, Stack size 160 bytes, textareawithwildcard.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithWildcardBase::invalidateContent() const &rArr; touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, const unsigned short*, const touchgfx::FontContextualFormsTable*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setColor(touchgfx::colortype)
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setTypedText(touchgfx::TypedText)
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[407]"></a>touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv))
<BR>[Address Reference Count : 3]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[404]"></a>touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 180 bytes, Stack size 88 bytes, textareawithwildcard.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getAlignment() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[2f2]"></a>touchgfx::AbstractDirectionProgress::getDirection() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdirectionprogress.o(.text._ZNK8touchgfx25AbstractDirectionProgress12getDirectionEv))
<BR>[Address Reference Count : 2]<UL><LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[339]"></a>touchgfx::AbstractGraphElementNoCWR::drawCanvasWidget(const touchgfx::Rect&) const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE))
<BR>[Address Reference Count : 6]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
</UL>
<P><STRONG><a name="[33c]"></a>touchgfx::AbstractGraphElementNoCWR::getColor() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv))
<BR>[Address Reference Count : 6]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
</UL>
<P><STRONG><a name="[2ef]"></a>touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator11getProgressEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::setValue(int)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[2ca]"></a>touchgfx::AbstractProgressIndicator::invalidateContent() const</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, abstractdirectionprogress.o(.text._ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractProgressIndicator::invalidateContent() const &rArr; touchgfx::Container::invalidateContent() const
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::invalidateContent() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[2e5]"></a>touchgfx::AbstractProgressIndicator::getProgressIndicatorX() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv))
<BR>[Address Reference Count : 3]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[2e6]"></a>touchgfx::AbstractProgressIndicator::getProgressIndicatorY() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv))
<BR>[Address Reference Count : 3]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[2e7]"></a>touchgfx::AbstractProgressIndicator::getProgressIndicatorWidth() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv))
<BR>[Address Reference Count : 3]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[2e8]"></a>touchgfx::AbstractProgressIndicator::getProgressIndicatorHeight() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv))
<BR>[Address Reference Count : 3]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[2f1]"></a>touchgfx::AbstractProgressIndicator::getAlpha() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv))
<BR>[Address Reference Count : 3]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[2eb]"></a>touchgfx::AbstractProgressIndicator::getRange(int&, int&) const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_))
<BR>[Address Reference Count : 3]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[2ea]"></a>touchgfx::AbstractProgressIndicator::getRange(int&, int&, unsigned short&) const</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractProgressIndicator::getRange(int&, int&, unsigned short&) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[2e9]"></a>touchgfx::AbstractProgressIndicator::getRange(int&, int&, unsigned short&, unsigned short&) const</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractProgressIndicator::getRange(int&, int&, unsigned short&, unsigned short&) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[2ee]"></a>touchgfx::AbstractProgressIndicator::getValue() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getValueEv))
<BR>[Address Reference Count : 3]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
</UL>
<P><STRONG><a name="[359]"></a>touchgfx::Box::getSolidRect() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, box.o(.text._ZNK8touchgfx3Box12getSolidRectEv))
<BR>[Address Reference Count : 2]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
</UL>
<P><STRONG><a name="[35a]"></a>touchgfx::Box::invalidateContent() const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, box.o(.text._ZNK8touchgfx3Box17invalidateContentEv))
<BR>[Address Reference Count : 2]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
</UL>
<P><STRONG><a name="[414]"></a>touchgfx::Box::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, box.o(.text._ZNK8touchgfx3Box4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Box::draw(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[86b]"></a>touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, hal.o(.text._ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>

<P><STRONG><a name="[741]"></a>touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, hal.o(.text._ZNK8touchgfx3HAL13getDstAddressEttPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFromTFTToClientBuffer(touchgfx::Rect)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned)
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
</UL>

<P><STRONG><a name="[751]"></a>touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, hal.o(.text._ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
</UL>

<P><STRONG><a name="[1dd]"></a>touchgfx::HAL::getFlashDataReader() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZNK8touchgfx3HAL18getFlashDataReaderEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[363]"></a>touchgfx::Font::getCharWidth(unsigned short) const</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, font.o(.text._ZNK8touchgfx4Font12getCharWidthEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Font::getCharWidth(unsigned short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[4a5]"></a>touchgfx::Font::getGSUBTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, texts.o(.text._ZNK8touchgfx4Font12getGSUBTableEv))
<BR>[Address Reference Count : 1]<UL><LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[366]"></a>touchgfx::Font::getFontHeight() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cachedfont.o(.text._ZNK8touchgfx4Font13getFontHeightEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[361]"></a>touchgfx::Font::getStringWidth(const unsigned short*, ...) const</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, texts.o(.text._ZNK8touchgfx4Font14getStringWidthEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getStringWidth(const unsigned short*, ...) const &rArr; touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const &rArr; touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[362]"></a>touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, texts.o(.text._ZNK8touchgfx4Font14getStringWidthEhPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const &rArr; touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const &rArr; touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[368]"></a>touchgfx::Font::getBitsPerPixel() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cachedfont.o(.text._ZNK8touchgfx4Font15getBitsPerPixelEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[369]"></a>touchgfx::Font::getByteAlignRow() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cachedfont.o(.text._ZNK8touchgfx4Font15getByteAlignRowEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[360]"></a>touchgfx::Font::getEllipsisChar() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cachedfont.o(.text._ZNK8touchgfx4Font15getEllipsisCharEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[35f]"></a>touchgfx::Font::getFallbackChar() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cachedfont.o(.text._ZNK8touchgfx4Font15getFallbackCharEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[364]"></a>touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const</STRONG> (Thumb, 102 bytes, Stack size 152 bytes, font.o(.text._ZNK8touchgfx4Font15getSpacingAboveEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[365]"></a>touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const</STRONG> (Thumb, 106 bytes, Stack size 152 bytes, font.o(.text._ZNK8touchgfx4Font16getMaxTextHeightEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const &rArr; OUTLINED_FUNCTION_1 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[36b]"></a>touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const</STRONG> (Thumb, 92 bytes, Stack size 144 bytes, font.o(.text._ZNK8touchgfx4Font16getNumberOfLinesEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const &rArr; touchgfx::TextProvider::TextProvider() &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[86c]"></a>touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const</STRONG> (Thumb, 98 bytes, Stack size 136 bytes, font.o(.text._ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getStringWidthRTL(unsigned char, const unsigned short*, std::__va_list) const &rArr; touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::endOfString()
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidth(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[367]"></a>touchgfx::Font::getMinimumTextHeight() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cachedfont.o(.text._ZNK8touchgfx4Font20getMinimumTextHeightEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[4a6]"></a>touchgfx::Font::getContextualFormsTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, texts.o(.text._ZNK8touchgfx4Font23getContextualFormsTableEv))
<BR>[Address Reference Count : 1]<UL><LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[35e]"></a>touchgfx::Font::getGlyph(unsigned short) const</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, cachedfont.o(.text._ZNK8touchgfx4Font8getGlyphEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Font::getGlyph(unsigned short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[420]"></a>touchgfx::Line::getMinimalRect() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, line.o(.text._ZNK8touchgfx4Line14getMinimalRectEv))
<BR>[Address Reference Count : 1]<UL><LI> line.o(.rodata._ZTVN8touchgfx4LineE)
</UL>
<P><STRONG><a name="[421]"></a>touchgfx::Line::drawCanvasWidget(const touchgfx::Rect&) const</STRONG> (Thumb, 312 bytes, Stack size 160 bytes, line.o(.text._ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = touchgfx::Line::drawCanvasWidget(const touchgfx::Rect&) const &rArr; touchgfx::Canvas::render(unsigned char) &rArr; touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char) &rArr; touchgfx::Outline::closeOutlineAndSortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas__sub_object()
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(int)
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::angle(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&)
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> line.o(.rodata._ZTVN8touchgfx4LineE)
</UL>
<P><STRONG><a name="[41f]"></a>touchgfx::Line::invalidateContent() const</STRONG> (Thumb, 494 bytes, Stack size 56 bytes, line.o(.text._ZNK8touchgfx4Line17invalidateContentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Line::invalidateContent() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> line.o(.rodata._ZTVN8touchgfx4LineE)
</UL>
<P><STRONG><a name="[870]"></a>touchgfx::Rect::isEqual(const touchgfx::Rect&) const</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, screen.o(.text._ZNK8touchgfx4Rect7isEqualERKS0_))
<BR><BR>[Called By]<UL><LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator !=(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[6be]"></a>touchgfx::Rect::includes(const touchgfx::Rect&) const</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, application.o(.text._ZNK8touchgfx4Rect8includesERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Rect::includes(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[6c0]"></a>touchgfx::Rect::intersect(const touchgfx::Rect&) const</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZNK8touchgfx4Rect9intersectERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[851]"></a>touchgfx::Rect::intersect(short, short) const</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, container.o(.text._ZNK8touchgfx4Rect9intersectEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>

<P><STRONG><a name="[6c5]"></a>touchgfx::Rect::operator &(const touchgfx::Rect&) const</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, application.o(.text._ZNK8touchgfx4RectanERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, const touchgfx::Rect&)
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[780]"></a>touchgfx::Rect::operator !=(const touchgfx::Rect&) const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, screen.o(.text._ZNK8touchgfx4RectneERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Rect::operator !=(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEqual(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[31b]"></a>touchgfx::Image::getSolidRect() const</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, image.o(.text._ZNK8touchgfx5Image12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[31c]"></a>touchgfx::Image::invalidateContent() const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx5Image17invalidateContentEv))
<BR><BR>[Called By]<UL><LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[31a]"></a>touchgfx::Image::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 98 bytes, Stack size 56 bytes, image.o(.text._ZNK8touchgfx5Image4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::draw(const touchgfx::Rect&) const &rArr; touchgfx::Bitmap::getRect() const &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getRect() const
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[887]"></a>touchgfx::Texts::getText(unsigned short) const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, texts.o(.text._ZNK8touchgfx5Texts7getTextEt))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
</UL>

<P><STRONG><a name="[7bc]"></a>touchgfx::Bitmap::getExtraData() const</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap12getExtraDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getExtraData() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[7be]"></a>touchgfx::Bitmap::getSolidRect() const</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getSolidRect() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::getSolidRect() const
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::getSolidRect() const
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::getSolidRect() const
</UL>

<P><STRONG><a name="[7bd]"></a>touchgfx::Bitmap::hasTransparentPixels() const</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap20hasTransparentPixelsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::hasTransparentPixels() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[705]"></a>touchgfx::Bitmap::getId() const</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, screenview.o(.text._ZNK8touchgfx6Bitmap5getIdEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getId() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::getState() const
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::forceState(bool)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[7bb]"></a>touchgfx::Bitmap::getData() const</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap7getDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getData() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned short)
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[854]"></a>touchgfx::Bitmap::getRect() const</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap7getRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getRect() const &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[748]"></a>touchgfx::Bitmap::getWidth() const</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap8getWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getWidth() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, const touchgfx::Rect&)
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(const touchgfx::Bitmap&)
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getRect() const
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned short)
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[74a]"></a>touchgfx::Bitmap::getFormat() const</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap9getFormatEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getFormat() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, const touchgfx::Rect&)
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned short)
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[749]"></a>touchgfx::Bitmap::getHeight() const</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap9getHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, const touchgfx::Rect&)
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(const touchgfx::Bitmap&)
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getRect() const
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned short)
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[352]"></a>touchgfx::Button::getSolidRect() const</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, button.o(.text._ZNK8touchgfx6Button12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[353]"></a>touchgfx::Button::invalidateContent() const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, button.o(.text._ZNK8touchgfx6Button17invalidateContentEv))
<BR>[Address Reference Count : 3]<UL><LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[351]"></a>touchgfx::Button::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 150 bytes, Stack size 56 bytes, button.o(.text._ZNK8touchgfx6Button4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::draw(const touchgfx::Rect&) const &rArr; touchgfx::Bitmap::getId() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getId() const
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[434]"></a>touchgfx::Slider::getMaxValue() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, slider.o(.text._ZNK8touchgfx6Slider11getMaxValueEv))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[433]"></a>touchgfx::Slider::getMinValue() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, slider.o(.text._ZNK8touchgfx6Slider11getMinValueEv))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[431]"></a>touchgfx::Slider::getIndicatorMax() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, slider.o(.text._ZNK8touchgfx6Slider15getIndicatorMaxEv))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[430]"></a>touchgfx::Slider::getIndicatorMin() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, slider.o(.text._ZNK8touchgfx6Slider15getIndicatorMinEv))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[439]"></a>touchgfx::Slider::positionToValue(short) const</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, slider.o(.text._ZNK8touchgfx6Slider15positionToValueEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Slider::positionToValue(short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[438]"></a>touchgfx::Slider::valueToPosition(int) const</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, slider.o(.text._ZNK8touchgfx6Slider15valueToPositionEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Slider::valueToPosition(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[43c]"></a>touchgfx::Slider::getValueRangeSize() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, slider.o(.text._ZNK8touchgfx6Slider17getValueRangeSizeEv))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[43a]"></a>touchgfx::Slider::getIndicatorRadius() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, slider.o(.text._ZNK8touchgfx6Slider18getIndicatorRadiusEv))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[43b]"></a>touchgfx::Slider::getIndicatorPositionRangeSize() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, slider.o(.text._ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[86f]"></a>touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, line.o(.text._ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[442]"></a>touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::isValid() const</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
</UL>
<P><STRONG><a name="[446]"></a>touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&, void, void&rang;::isValid() const</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_8TextAreaEEEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_12FadeAnimatorINS_8TextAreaEEEvvEE)
</UL>
<P><STRONG><a name="[44a]"></a>touchgfx::Callback&lang;screenViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[44e]"></a>touchgfx::Callback&lang;screenViewBase, const touchgfx::Slider&, int, void&rang;::isValid() const</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx8CallbackI14screenViewBaseRKNS_6SliderEivE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_6SliderEivEE)
</UL>
<P><STRONG><a name="[452]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[455]"></a>touchgfx::Callback&lang;touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx8CallbackINS_16RadioButtonGroupILt2EEERKNS_14AbstractButtonEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackINS_16RadioButtonGroupILt2EEERKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[a3]"></a>touchgfx::Drawable::invalidate() const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::showAlert()
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePIP()
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleDay()
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAge()
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_age()
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVT()
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTi()
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRR()
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleIE()
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VT()
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Ti()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RR()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IE()
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_backwardTestScreen()
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_forwardTestScreen()
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowSensor_continue_button()
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVentilationSettingScreen()
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePatientInfoSettingScreen()
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensor_forwardScreen()
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_testCalibration_button()
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowShapeBackupScreen()
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTimeBackupScreen()
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backBackupModeScreen()
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControlBackupScreen()
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTightnessTestScreen()
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBackupConfigScreen()
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose()
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableBackupModeChooses()
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleInitCircuitScreen()
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBackupChooseModes()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_previousPageAlarm()
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiMin_ventSetting()
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiMax_ventSetting()
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTiInspPause_CONF()
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePControlMax_CONF()
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensorScreen()
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensitivity_conf()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_obstructionAlarm()
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_brightnessSlider(int)
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backTrendsScreen()
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backBackupScreen()
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backActiveAlarms()
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiInspPause_conf()
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEPBackupScreen()
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControlMax_conf()
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVentStopedAlarm()
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTightnessScreen()
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleInterfaceScreen()
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowShapeBackup()
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCircuitDisAlarm()
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBackupApneaTime()
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_ventStopedAlarm()
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_circuitDisAlarm()
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backVentSetting()
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backPatientInfo()
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRiseTimeBackup()
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePControlBackup()
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowShape_CONF()
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleApneaDetection()
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::createAlarmTrendList()
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensors_button()
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowShape_conf()
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backInitialize()
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backDeviceInfo()
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backApneaAlarm()
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_apneaDetection()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VTBackupScreen()
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiBackupScreen()
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RRBackupScreen()
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSettingScreen()
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSafetyVT_CONF()
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRisetime_CONF()
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePControl_CONF()
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleInitAgeScreen()
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleDeviceSetting()
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarmNextPage()
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::createDataTrendList()
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_safetyVT_conf()
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTime_conf()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_pulsRateAlarm()
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_nonVentedMask()
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_nextPageAlarm()
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backupSetting()
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backupConfigs()
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControl_conf()
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2FakeAlarm()
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setCalibrationData()
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTrigger_CONF()
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleIPAPMax_CONF()
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCycling_CONF()
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarmShowing()
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_trigger_conf()
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_heightButton()
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_cycling_conf()
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_alarmRecords()
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_activeAlarms()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IPAPMax_conf()
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePressureMin()
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePressureMax()
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMasksScreen()
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleApneaAlaram()
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_toggleApnea()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensitivity()
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_dataRecords()
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_cancelAlert()
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backupModes()
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backupApnea()
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backSetting()
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backDeviceS()
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backAlarmSc()
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_audioSlider(int)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VtiAlarmbtn()
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VteAlarmbtn()
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_MViAlarmbtn()
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_MVeAlarmbtn()
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTiMin_CONF()
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTiMax_CONF()
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePsupp_CONF()
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePSMax_CONF()
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePEEPBackup()
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMainScreen()
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHRMinAlarm()
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleHRMaxAlarm()
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleDeviceInfo()
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleChooseMode()
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_ventedMask()
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_brightness()
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RRAlarmbtn()
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Psupp_conf()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PSMax_conf()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSens_CONF()
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePEEP_CONF()
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleIPAP_CONF()
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2_CONF()
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleEPAP_CONF()
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCPAP_CONF()
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_leakAlarm()
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_SPO2Alarm()
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEP_conf()
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PAlarmbtn()
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IPAP_conf()
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2_conf()
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2Alarm()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_EPAP_conf()
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_CPAP_conf()
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVTBackup()
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTiBackup()
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRisetime()
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRBackup()
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleLanguage()
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_yesAlert()
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTime()
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_language()
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControl()
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVT_CONF()
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTrigger()
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTi_CONF()
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSPO2Min()
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSPO2Max()
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRR_CONF()
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMinutes()
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleLowPEEP()
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleLeakMax()
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2Min()
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2Max()
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCycling()
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_trigger()
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_setting()
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_lowPEEP()
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_cycling()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_confirm()
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VT_conf()
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Ti_conf()
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RR_conf()
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleWeight()
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVtiMin()
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVtiMax()
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVteMin()
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVteMax()
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTrends()
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSilent()
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMViMin()
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMViMax()
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMVeMin()
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMVeMax()
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBackup()
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_trends()
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_device()
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setLanguage()
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRMin()
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleRRMax()
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePsupp()
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMonth()
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlert()
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarm()
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_audio()
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_alarm()
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Psupp()
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::updateDate()
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleYear()
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSens()
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePEEP()
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlow()
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFiO2()
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleCPAP()
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_time()
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_mode()
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flow()
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_date()
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEP()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2()
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_CPAP()
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDirectionProgress::setDirection(touchgfx::AbstractDirectionProgress::DirectionType)
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::clear()
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateAllXAxisPoints()
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::updateIndicatorPosition(short)
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
</UL>
<BR>[Address Reference Count : 125]<UL><LI> screenview.o(.text._ZN10screenView17click_backupApneaEv)
<LI> screenview.o(.text._ZN10screenView22click_PEEPBackupScreenEv)
<LI> screenview.o(.text._ZN10screenView20click_VTBackupScreenEv)
<LI> screenview.o(.text._ZN10screenView20click_TiBackupScreenEv)
<LI> screenview.o(.text._ZN10screenView26click_PControlBackupScreenEv)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> screenview.o(.text._ZN10screenView22updateConfigsWildCardsEv)
<LI> screenview.o(.text._ZN10screenView15handleTickEventEv)
<LI> screenview.o(.text._ZN10screenView9showAlertEv)
<LI> screenview.o(.text._ZN10screenView16handleMainScreenEv)
<LI> screenview.o(.text._ZN10screenView31handleInitTestCalibrationScreenEv)
<LI> screenview.o(.text._ZN10screenView25handleTightnessTestScreenEv)
<LI> screenview.o(.text._ZN10screenView35handleFlowSensor_backwardTestScreenEv)
<LI> screenview.o(.text._ZN10screenView30handleVentilationSettingScreenEv)
<LI> screenview.o(.text._ZN10screenView12handleTrendsEv)
<LI> screenview.o(.text._ZN10screenView19handleDeviceSettingEv)
<LI> screenview.o(.text._ZN10screenView11handleAlarmEv)
<LI> screenview.o(.text._ZN10screenView14handleLanguageEv)
<LI> screenview.o(.text._ZN10screenView8handleRREv)
<LI> screenview.o(.text._ZN10screenView8handleVTEv)
<LI> screenview.o(.text._ZN10screenView24handleBackupConfigScreenEv)
<LI> screenview.o(.text._ZN10screenView29click_adult_initScreen_buttonEv)
<LI> screenview.o(.text._ZN10screenView33click_pediatric_initScreen_buttonEv)
<LI> screenview.o(.text._ZN10screenView23click_singleLeak_buttonEv)
<LI> screenview.o(.text._ZN10screenView26click_singleCircuit_buttonEv)
<LI> screenview.o(.text._ZN10screenView22click_tightness_buttonEv)
<LI> screenview.o(.text._ZN10screenView26click_back_tightnessScreenEv)
<LI> screenview.o(.text._ZN10screenView27click_back_flowSensorScreenEv)
<LI> screenview.o(.text._ZN10screenView22click_CO2Sensor_buttonEv)
<LI> screenview.o(.text._ZN10screenView31click_tightness_continue_buttonEv)
<LI> screenview.o(.text._ZN10screenView32click_flowSensor_continue_buttonEv)
<LI> screenview.o(.text._ZN10screenView10click_maskEv)
<LI> screenview.o(.text._ZN10screenView20click_backInitializeEv)
<LI> screenview.o(.text._ZN10screenView19click_PControl_confEv)
<LI> screenview.o(.text._ZN10screenView22click_PControlMax_confEv)
<LI> screenview.o(.text._ZN10screenView8click_RREv)
<LI> screenview.o(.text._ZN10screenView8click_VTEv)
<LI> screenview.o(.text._ZN10screenView8click_IEEv)
<LI> screenview.o(.text._ZN10screenView10click_FiO2Ev)
<LI> screenview.o(.text._ZN10screenView15click_FiO2_confEv)
<LI> screenview.o(.text._ZN10screenView8click_TiEv)
<LI> screenview.o(.text._ZN10screenView22click_TiInspPause_confEv)
<LI> screenview.o(.text._ZN10screenView20click_flowShape_confEv)
<LI> screenview.o(.text._ZN10screenView16click_Psupp_confEv)
<LI> screenview.o(.text._ZN10screenView16click_PSMax_confEv)
<LI> screenview.o(.text._ZN10screenView10click_CPAPEv)
<LI> screenview.o(.text._ZN10screenView14click_riseTimeEv)
<LI> screenview.o(.text._ZN10screenView19click_riseTime_confEv)
<LI> screenview.o(.text._ZN10screenView18click_cycling_confEv)
<LI> screenview.o(.text._ZN10screenView13click_triggerEv)
<LI> screenview.o(.text._ZN10screenView18click_trigger_confEv)
<LI> screenview.o(.text._ZN10screenView17click_sensitivityEv)
<LI> screenview.o(.text._ZN10screenView17click_backSettingEv)
<LI> screenview.o(.text._ZN10screenView10click_modeEv)
<LI> screenview.o(.text._ZN10screenView24disableVentSettingChooseEv)
<LI> screenview.o(.text._ZN10screenView11click_adultEv)
<LI> screenview.o(.text._ZN10screenView15click_pediatricEv)
<LI> screenview.o(.text._ZN10screenView17click_ventSettingEv)
<LI> screenview.o(.text._ZN10screenView17click_patientInfoEv)
<LI> screenview.o(.text._ZN10screenView18click_alarmRecordsEv)
<LI> screenview.o(.text._ZN10screenView17click_dataButton1Ev)
<LI> screenview.o(.text._ZN10screenView17click_dataButton2Ev)
<LI> screenview.o(.text._ZN10screenView17click_dataButton3Ev)
<LI> screenview.o(.text._ZN10screenView17click_dataButton4Ev)
<LI> screenview.o(.text._ZN10screenView20click_backDataGraphsEv)
<LI> screenview.o(.text._ZN10screenView18click_heightButtonEv)
<LI> screenview.o(.text._ZN10screenView16click_deviceInfoEv)
<LI> screenview.o(.text._ZN10screenView19click_backupSettingEv)
<LI> screenview.o(.text._ZN10screenView17click_backupModesEv)
<LI> screenview.o(.text._ZN10screenView20click_apneaDetectionEv)
<LI> screenview.o(.text._ZN10screenView26click_riseTimeBackupScreenEv)
<LI> screenview.o(.text._ZN10screenView11click_alarmEv)
<LI> screenview.o(.text._ZN10screenView21click_backVentSettingEv)
<LI> screenview.o(.text._ZN10screenView21click_backPatientInfoEv)
<LI> screenview.o(.text._ZN10screenView17click_backDeviceSEv)
<LI> screenview.o(.text._ZN10screenView11click_audioEv)
<LI> screenview.o(.text._ZN10screenView17click_audioSliderEi)
<LI> screenview.o(.text._ZN10screenView22click_brightnessSliderEi)
<LI> screenview.o(.text._ZN10screenView10click_timeEv)
<LI> screenview.o(.text._ZN10screenView10click_dateEv)
<LI> screenview.o(.text._ZN10screenView14click_languageEv)
<LI> screenview.o(.text._ZN10screenView13click_englishEv)
<LI> screenview.o(.text._ZN10screenView11setLanguageEv)
<LI> screenview.o(.text._ZN10screenView12click_arabicEv)
<LI> screenview.o(.text._ZN10screenView17click_backAlarmScEv)
<LI> screenview.o(.text._ZN10screenView15click_PAlarmbtnEv)
<LI> screenview.o(.text._ZN10screenView17click_VtiAlarmbtnEv)
<LI> screenview.o(.text._ZN10screenView17click_VteAlarmbtnEv)
<LI> screenview.o(.text._ZN10screenView17click_MViAlarmbtnEv)
<LI> screenview.o(.text._ZN10screenView17click_MVeAlarmbtnEv)
<LI> screenview.o(.text._ZN10screenView15click_FiO2AlarmEv)
<LI> screenview.o(.text._ZN10screenView15click_leakAlarmEv)
<LI> screenview.o(.text._ZN10screenView13click_lowPEEPEv)
<LI> screenview.o(.text._ZN10screenView15click_SPO2AlarmEv)
<LI> screenview.o(.text._ZN10screenView22click_obstructionAlarmEv)
<LI> screenview.o(.text._ZN10screenView21click_ventStopedAlarmEv)
<LI> screenview.o(.text._ZN10screenView9startVentEv)
<LI> screenview.o(.text._ZN10screenView14click_yesAlertEv)
<LI> screenviewbase.o(.text._ZN14screenViewBase29logo_fadeEndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_5ImageEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[2ce]"></a>touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const &rArr; OUTLINED_FUNCTION_0 &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Address Reference Count : 37]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[2c9]"></a>touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::setValue(int)
</UL>
<BR>[Address Reference Count : 37]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[77a]"></a>touchgfx::Drawable::getAbsoluteRect() const</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, drawable.o(.text._ZNK8touchgfx8Drawable15getAbsoluteRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsY()
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsX()
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[303]"></a>touchgfx::Drawable::invalidateContent() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx8Drawable17invalidateContentEv))
<BR>[Address Reference Count : 10]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
</UL>
<P><STRONG><a name="[2cf]"></a>touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE))
<BR>[Address Reference Count : 37]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphElementGridYE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> boxwithborder.o(.rodata._ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.rodata._ZTVN8touchgfx6ButtonE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> radiobutton.o(.rodata._ZTVN8touchgfx11RadioButtonE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx12GraphLabelsYE)
<LI> line.o(.rodata._ZTVN8touchgfx4LineE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[602]"></a>touchgfx::Drawable::isVisible() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenview.o(.text._ZNK8touchgfx8Drawable9isVisibleEv))
<BR><BR>[Called By]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAge()
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_age()
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VT()
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Ti()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RR()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IE()
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleInitTestCalibrationScreen()
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleVentilationSettingScreen()
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handlePatientInfoSettingScreen()
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowShapeBackupScreen()
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTimeBackupScreen()
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backBackupModeScreen()
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControlBackupScreen()
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose2()
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBackupConfigScreen()
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableVentSettingChoose()
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableBackupModeChooses()
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleInitCircuitScreen()
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBackupChooseModes()
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiMin_ventSetting()
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiMax_ventSetting()
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleFlowSensorScreen()
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensitivity_conf()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_obstructionAlarm()
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_brightnessSlider(int)
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backTrendsScreen()
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backBackupScreen()
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backActiveAlarms()
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiInspPause_conf()
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEPBackupScreen()
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControlMax_conf()
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTightnessScreen()
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleInterfaceScreen()
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_ventStopedAlarm()
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_circuitDisAlarm()
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backVentSetting()
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backPatientInfo()
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleApneaDetection()
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flowShape_conf()
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backInitialize()
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backDeviceInfo()
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_apneaDetection()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VTBackupScreen()
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_TiBackupScreen()
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RRBackupScreen()
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSettingScreen()
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleInitAgeScreen()
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleDeviceSetting()
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarmNextPage()
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_safetyVT_conf()
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTime_conf()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_pulsRateAlarm()
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backupSetting()
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backupConfigs()
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControl_conf()
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTrigger_CONF()
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarmShowing()
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_trigger_conf()
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_heightButton()
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_cycling_conf()
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_alarmRecords()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IPAPMax_conf()
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMasksScreen()
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleApneaAlaram()
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::disableMainChoose()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_sensitivity()
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_dataRecords()
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backupModes()
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backupApnea()
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backDeviceS()
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_backAlarmSc()
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_audioSlider(int)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VtiAlarmbtn()
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VteAlarmbtn()
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_MViAlarmbtn()
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_MVeAlarmbtn()
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleMainScreen()
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleDeviceInfo()
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleChooseMode()
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_previous2x()
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_brightness()
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RRAlarmbtn()
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Psupp_conf()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PSMax_conf()
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Monitoring()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTickEvent()
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_leakAlarm()
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_SPO2Alarm()
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEP_conf()
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PAlarmbtn()
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_IPAP_conf()
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2_conf()
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2Alarm()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_EPAP_conf()
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_CPAP_conf()
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleLanguage()
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_yesAlert()
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_riseTime()
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_previous()
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_language()
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PControl()
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTrigger()
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_trigger()
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_setting()
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_lowPEEP()
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_cycling()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_confirm()
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_VT_conf()
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Ti_conf()
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_RR_conf()
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleTrends()
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleSilent()
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleBackup()
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_next2x()
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlert()
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::handleAlarm()
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_audio()
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_Psupp()
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_time()
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_next()
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_mode()
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_flow()
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_date()
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_PEEP()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_FiO2()
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::click_CPAP()
</UL>

<P><STRONG><a name="[49a]"></a>touchgfx::LCD16bpp::framebufferFormat() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp17framebufferFormatEv))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[49b]"></a>touchgfx::LCD16bpp::framebufferStride() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp17framebufferStrideEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::framebufferStride() const &rArr; touchgfx::LCD16bpp::getFramebufferStride() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getFramebufferStride()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[7c5]"></a>touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const</STRONG> (Thumb, 204 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKjRKNS_4RectES5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const &rArr; OUTLINED_FUNCTION_99 &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_99
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_56
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_34
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[7e8]"></a>touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const</STRONG> (Thumb, 146 bytes, Stack size 28 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp28DrawTextureMapScanLineBase1627overrunCheckNearestNeighborERPtRiS4_S4_iiss))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7fc]"></a>touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const</STRONG> (Thumb, 172 bytes, Stack size 36 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp28DrawTextureMapScanLineBase1633overrunCheckBilinearInterpolationERPtRiS4_S4_iiss))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7ec]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char, unsigned char) const</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA10writePixelEPthh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7f7]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char) const</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA10writePixelEPth))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7fd]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, unsigned, short, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 232 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA10writePixelEPtPKtjshhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, unsigned, short, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(const unsigned short*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7fe]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; OUTLINED_FUNCTION_70 &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_92
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_70
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_50
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_37
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_35
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(const unsigned short*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[802]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned short*, unsigned, short, unsigned char, unsigned char) const</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA10writePixelEPtPKtjshh))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned short*, unsigned, short, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(const unsigned short*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[803]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 276 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const &rArr; OUTLINED_FUNCTION_70 &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_92
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_70
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_50
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_37
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_35
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(const unsigned short*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[809]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned short*, short, int, int, unsigned char) const</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA10writePixelEPtPKtsiih))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned short*, short, int, int, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[812]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char) const</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA10writePixelEPtPKhPKtsiih))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[815]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char) const</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA10writePixelEPtPKhS4_siih))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[817]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char) const</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA10writePixelEPtPKtPKhsiih))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[818]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char) const</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA10writePixelEPtPKjsiih))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[81b]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int) const</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA10writePixelEPtPKhS4_sii))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[81d]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int) const</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA10writePixelEPtPKtPKhsii))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[821]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA10writePixelEPtPKtsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[822]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 256 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_84
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[824]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int) const</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA10writePixelEPtPKjsii))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[825]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char) const</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA10writePixelEPtPKhPKjsiih))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[828]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned short*, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA10writePixelEPtPKtsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned short*, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[829]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[82d]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA10writePixelEPtPKhPKtsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[82f]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 264 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_84
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[832]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 248 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA10writePixelEPtPKhS4_siihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[833]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 352 bytes, Stack size 72 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_81
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[834]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 320 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKtPKhsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned char)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char)
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[835]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 412 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; OUTLINED_FUNCTION_62 &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_97
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_91
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_62
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_58
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_48
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[836]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int) const</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA10writePixelEPtPKhPKjsii))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[837]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 280 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKjsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[838]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 296 bytes, Stack size 72 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKjssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; OUTLINED_FUNCTION_60 &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_85
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_77
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_63
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_61
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_60
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_52
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_100
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[83b]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKtsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[83d]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[83f]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA10writePixelEPtPKhS4_siihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[840]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 304 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[841]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 292 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKtsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned char)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char)
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[842]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 404 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const &rArr; OUTLINED_FUNCTION_62 &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_91
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_62
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_58
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_48
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[843]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 268 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKjsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[844]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 300 bytes, Stack size 72 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKjssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const &rArr; OUTLINED_FUNCTION_60 &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_85
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_60
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_52
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_100
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[845]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 304 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKhPKjsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[846]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 352 bytes, Stack size 72 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKjssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_77
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_63
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_61
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_100
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[847]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 276 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKjsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[848]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKjssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[499]"></a>touchgfx::LCD16bpp::bitDepth() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp8bitDepthEv))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[32b]"></a>touchgfx::TextArea::getAlignment() const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, textarea.o(.text._ZNK8touchgfx8TextArea12getAlignmentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getAlignment() const &rArr; touchgfx::TypedText::getAlignment() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getAlignment() const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[323]"></a>touchgfx::TextArea::getSolidRect() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx8TextArea12getSolidRectEv))
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[32d]"></a>touchgfx::TextArea::getTextWidth() const</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, textarea.o(.text._ZNK8touchgfx8TextArea12getTextWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getTextWidth() const &rArr; touchgfx::TypedText::getFont() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::getTextWidth() const
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[32f]"></a>touchgfx::TextArea::getWildcard1() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx8TextArea12getWildcard1Ev))
<BR>[Address Reference Count : 3]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[330]"></a>touchgfx::TextArea::getWildcard2() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx8TextArea12getWildcard2Ev))
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[32c]"></a>touchgfx::TextArea::getTextHeight() const</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, textarea.o(.text._ZNK8touchgfx8TextArea13getTextHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getTextHeight() const &rArr; touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[324]"></a>touchgfx::TextArea::invalidateContent() const</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, textarea.o(.text._ZNK8touchgfx8TextArea17invalidateContentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::invalidateContent() const &rArr; touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
</UL>
<BR>[Called By]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[32e]"></a>touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</STRONG> (Thumb, 192 bytes, Stack size 152 bytes, textarea.o(.text._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const &rArr; touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[331]"></a>touchgfx::TextArea::calculateBoundingArea() const</STRONG> (Thumb, 536 bytes, Stack size 192 bytes, textarea.o(.text._ZNK8touchgfx8TextArea21calculateBoundingAreaEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::endOfString()
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, const unsigned short*, const touchgfx::FontContextualFormsTable*, ...)
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct__sub_object(touchgfx::TextProvider&, unsigned short, unsigned char, const touchgfx::Font*, touchgfx::WideTextAction)
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::invalidateContent() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[322]"></a>touchgfx::TextArea::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 236 bytes, Stack size 96 bytes, textarea.o(.text._ZNK8touchgfx8TextArea4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1248 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::draw(const touchgfx::Rect&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[885]"></a>touchgfx::ConstFont::find(unsigned short) const</STRONG> (Thumb, 136 bytes, Stack size 20 bytes, constfont.o(.text._ZNK8touchgfx9ConstFont4findEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const
</UL>

<P><STRONG><a name="[35d]"></a>touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, constfont.o(.text._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const &rArr; touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[2c8]"></a>touchgfx::Container::getSolidRect() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, container.o(.text._ZNK8touchgfx9Container12getSolidRectEv))
<BR>[Address Reference Count : 13]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[2e3]"></a>touchgfx::Container::getContainedArea() const</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::Container::getContainedArea() const &rArr; touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 13]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[345]"></a>touchgfx::Container::invalidateContent() const</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, container.o(.text._ZNK8touchgfx9Container17invalidateContentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Container::invalidateContent() const
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateContent() const
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::invalidateContent() const
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::invalidateContent() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[2c7]"></a>touchgfx::Container::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::Container::draw(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 13]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs300EEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx17GraphWrapAndClearILs200EEE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> boxprogress.o(.rodata._ZTVN8touchgfx11BoxProgressE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.rodata._ZTVN8touchgfx12DigitalClockE)
<LI> abstractdirectionprogress.o(.rodata._ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphwrapandclear.o(.rodata._ZTVN8touchgfx21GraphWrapAndClearDataE)
</UL>
<P><STRONG><a name="[4a9]"></a>touchgfx::DragEvent::getEventType() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZNK8touchgfx9DragEvent12getEventTypeEv))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx9DragEventE)
</UL>
<P><STRONG><a name="[6f8]"></a>touchgfx::GlyphNode::top() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, font.o(.text._ZNK8touchgfx9GlyphNode3topEv))
<BR><BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
</UL>

<P><STRONG><a name="[4ae]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[4ab]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[4b3]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[4b0]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[4b8]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[4b5]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[858]"></a>touchgfx::TypedText::getAlignment() const</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, buttonwithlabel.o(.text._ZNK8touchgfx9TypedText12getAlignmentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getAlignment() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getAlignment() const
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsY::drawString(const touchgfx::Rect&, const touchgfx::Font*, const touchgfx::AbstractDataGraph*, int, int, unsigned char) const
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[859]"></a>touchgfx::TypedText::getTextDirection() const</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, fontcache.o(.text._ZNK8touchgfx9TypedText16getTextDirectionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getTextDirection() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsY::drawString(const touchgfx::Rect&, const touchgfx::Font*, const touchgfx::AbstractDataGraph*, int, int, unsigned char) const
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[6d7]"></a>touchgfx::TypedText::getFont() const</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, fontcache.o(.text._ZNK8touchgfx9TypedText7getFontEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getFont() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::invalidateContent() const
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setBaselineY(short)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::updateTextPosition()
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsBase::draw(const touchgfx::Rect&) const
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setBaselineY(short)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[100]"></a>touchgfx::TypedText::getText() const</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, screenviewbase.o(.text._ZNK8touchgfx9TypedText7getTextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::invalidateContent() const
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::updateTextPosition()
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::invalidateContent() const
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight() const
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsY::drawString(const touchgfx::Rect&, const touchgfx::Font*, const touchgfx::AbstractDataGraph*, int, int, unsigned char) const
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screenviewbase.o(.text._ZN14screenViewBaseC2Ev)
<LI> graphlabels.o(.text._ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih)
</UL>
<P><STRONG><a name="[284]"></a>thunk{-4} to screenPresenter::~screenPresenter__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screenpresenter.o(.text._ZThn4_N15screenPresenterD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = thunk{-4} to screenPresenter::~screenPresenter__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenpresenter.o(.rodata._ZTV15screenPresenter)
</UL>
<P><STRONG><a name="[283]"></a>thunk{-4} to screenPresenter::~screenPresenter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screenpresenter.o(.text._ZThn4_N15screenPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screenpresenter.o(.rodata._ZTV15screenPresenter)
</UL>
<P><STRONG><a name="[377]"></a>thunk{-8} to touchgfx::PainterRGB565::setColor(touchgfx::colortype)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, painterrgb565.o(.text._ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = thunk{-8} to touchgfx::PainterRGB565::setColor(touchgfx::colortype) &rArr; touchgfx::PainterRGB565::setColor(touchgfx::colortype)
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::setColor(touchgfx::colortype)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[376]"></a>thunk{-8} to touchgfx::PainterRGB565::~PainterRGB565__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, painterrgb565.o(.text._ZThn8_N8touchgfx13PainterRGB565D0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = thunk{-8} to touchgfx::PainterRGB565::~PainterRGB565__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[375]"></a>thunk{-8} to touchgfx::PainterRGB565::~PainterRGB565()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, painterrgb565.o(.text._ZThn8_N8touchgfx13PainterRGB565D1Ev))
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[68f]"></a>operator delete (void*)</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, new.cpp.o(.text._ZdlPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::~STM32TouchController__deallocating()
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::~TouchGFXHAL__deallocating()
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;screenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__deallocating()
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::~FrontendApplication__deallocating()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__deallocating()
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::~STM32DMA__deallocating()
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{-4} to screenPresenter::~screenPresenter__deallocating()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter::~screenPresenter__deallocating()
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::~TypedText__deallocating()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::~GeneratedFont__deallocating()
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating()
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::~MVPApplication__deallocating()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::~NoTransition__deallocating()
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase__deallocating()
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationFontProvider::~ApplicationFontProvider__deallocating()
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::~screenView__deallocating()
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;, const touchgfx::AbstractButton&, void, void&rang;::~Callback__deallocating()
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;screenViewBase, const touchgfx::Slider&, int, void&rang;::~Callback__deallocating()
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;screenViewBase, const touchgfx::AbstractButton&, void, void&rang;::~Callback__deallocating()
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;&, void, void&rang;::~Callback__deallocating()
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;screenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::~Callback__deallocating()
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;screenPresenter&rang;::~View__deallocating()
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards__deallocating()
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__deallocating()
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphWrapAndClear&lang;(short)300&rang;::~GraphWrapAndClear__deallocating()
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphWrapAndClear&lang;(short)200&rang;::~GraphWrapAndClear__deallocating()
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridY::~GraphElementGridY__deallocating()
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButtonGroup&lang;(unsigned short)2&rang;::~RadioButtonGroup__deallocating()
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::~MoveAnimator__deallocating()
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::~FadeAnimator__deallocating()
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::~FadeAnimator__deallocating()
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::~screenViewBase__deallocating()
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphWrapAndClearData::~GraphWrapAndClearData__deallocating()
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsY::~GraphLabelsY__deallocating()
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas__deallocating()
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::~GraphElementLine__deallocating()
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::~GraphElementArea__deallocating()
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__deallocating()
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::~DigitalClock__deallocating()
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::~Container__deallocating()
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::~ButtonWithLabel__deallocating()
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::~Button__deallocating()
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorder::~BoxWithBorder__deallocating()
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxProgress::~BoxProgress__deallocating()
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box__deallocating()
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::~Application__deallocating()
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::~AbstractProgressIndicator__deallocating()
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDirectionProgress::~AbstractDirectionProgress__deallocating()
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::~LCD16bpp__deallocating()
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA__deallocating()
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA__deallocating()
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::~ToggleButton__deallocating()
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase__deallocating()
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea__deallocating()
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::~Slider__deallocating()
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DragEvent::~DragEvent__deallocating()
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::~Screen__deallocating()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GestureEvent::~GestureEvent__deallocating()
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickEvent::~ClickEvent__deallocating()
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RadioButton::~RadioButton__deallocating()
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{-8} to touchgfx::PainterRGB565::~PainterRGB565__deallocating()
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::~PainterRGB565__deallocating()
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Line::~Line__deallocating()
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::~Image__deallocating()
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::~Outline__deallocating()
</UL>

<P><STRONG><a name="[5ad]"></a>__cxa_guard_acquire</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, cxa_guard.cpp.o(.text.__cxa_guard_acquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
</UL>
<BR>[Called By]<UL><LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::getInstance()
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_30_4bpp()
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_25_4bpp()
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_20_4bpp()
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_16_4bpp()
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_12_4bpp()
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanai_20_4bpp()
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_40_4bpp()
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_36_4bpp()
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_34_4bpp()
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_DUBAI_LIGHT_TTF_20_4bpp()
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_DUBAI_BOLD_TTF_30_4bpp()
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_DUBAI_BOLD_TTF_26_4bpp()
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_DUBAI_BOLD_TTF_20_4bpp()
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_AGENCYR_TTF_20_4bpp()
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_AGENCYR_TTF_16_4bpp()
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
</UL>

<P><STRONG><a name="[5af]"></a>__cxa_guard_release</STRONG> (Thumb, 8 bytes, Stack size unknown bytes, cxa_guard.cpp.o(.text.__cxa_guard_release))
<BR><BR>[Called By]<UL><LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::getInstance()
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_30_4bpp()
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_25_4bpp()
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_20_4bpp()
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_16_4bpp()
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_12_4bpp()
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanai_20_4bpp()
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_40_4bpp()
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_36_4bpp()
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_34_4bpp()
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_DUBAI_LIGHT_TTF_20_4bpp()
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_DUBAI_BOLD_TTF_30_4bpp()
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_DUBAI_BOLD_TTF_26_4bpp()
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_DUBAI_BOLD_TTF_20_4bpp()
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_AGENCYR_TTF_20_4bpp()
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_AGENCYR_TTF_16_4bpp()
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
</UL>

<P><STRONG><a name="[307]"></a>__cxa_pure_virtual</STRONG> (Thumb, 40 bytes, Stack size unknown bytes, cxa_virtual.cpp.o(.text.__cxa_pure_virtual))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = __cxa_pure_virtual &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
</UL>
<BR>[Address Reference Count : 13]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx23AbstractGraphDecorationE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
<LI> abstractclock.o(.rodata._ZTVN8touchgfx13AbstractClockE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx16DynamicDataGraphE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20GraphElementGridBaseE)
<LI> graphlabels.o(.rodata._ZTVN8touchgfx15GraphLabelsBaseE)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[888]"></a>abort_message</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, abort_message.cpp.o(.text.abort_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
</UL>

<P><STRONG><a name="[4cd]"></a>main</STRONG> (Thumb, 444 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = main &rArr; MX_FMC_Init &rArr; HAL_SDRAM_Init &rArr; HAL_SDRAM_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphCommonClock_Config
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Process
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM15_Init
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI2_Init
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_QUADSPI_Init
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_Start_IT
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive_IT
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWT_Delay_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[58d]"></a>touchgfx_init</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text.touchgfx_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx_init &rArr; touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned) &rArr; touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstanceSize()
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstance()
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
</UL>

<P><STRONG><a name="[58f]"></a>touchgfx_taskEntry</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text.touchgfx_taskEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx_taskEntry &rArr; touchgfx::HAL::backPorchExited() &rArr; touchgfx::HAL::swapFrameBuffers() &rArr; OUTLINED_FUNCTION_4 &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::backPorchExited()
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::isVSyncAvailable()
</UL>
<BR>[Called By]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Process
</UL>

<P><STRONG><a name="[4c2]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[8dc]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[8dd]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4bb]"></a>_GLOBAL__sub_I_TouchGFXConfiguration.cpp</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, touchgfxconfiguration.o(.text._GLOBAL__sub_I_TouchGFXConfiguration.cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _GLOBAL__sub_I_TouchGFXConfiguration.cpp &rArr; __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::LCD16bpp()
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.init_array)
</UL>
<P><STRONG><a name="[10e]"></a>_ZL22DMA2D_XferCpltCallbackP21__DMA2D_HandleTypeDef</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32dma.o(.text._ZL22DMA2D_XferCpltCallbackP21__DMA2D_HandleTypeDef))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.text._ZN8STM32DMA10initializeEv)
</UL>
<P><STRONG><a name="[4bc]"></a>_GLOBAL__sub_I_typedtextdatabase.cpp</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, typedtextdatabase.o(.text._GLOBAL__sub_I_typedtextdatabase.cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _GLOBAL__sub_I_typedtextdatabase.cpp &rArr; getFont_verdanab_30_4bpp() &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_30_4bpp()
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_25_4bpp()
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_20_4bpp()
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_16_4bpp()
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_12_4bpp()
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanai_20_4bpp()
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_40_4bpp()
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_36_4bpp()
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_34_4bpp()
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_DUBAI_LIGHT_TTF_20_4bpp()
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_DUBAI_BOLD_TTF_30_4bpp()
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_DUBAI_BOLD_TTF_26_4bpp()
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_DUBAI_BOLD_TTF_20_4bpp()
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_AGENCYR_TTF_20_4bpp()
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_AGENCYR_TTF_16_4bpp()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> typedtextdatabase.o(.init_array)
</UL>
<P><STRONG><a name="[51f]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[530]"></a>RCCEx_PLL2_Config</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, stm32h7xx_hal_rcc_ex.o(.text.RCCEx_PLL2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[531]"></a>RCCEx_PLL3_Config</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, stm32h7xx_hal_rcc_ex.o(.text.RCCEx_PLL3_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[50f]"></a>LTDC_SetConfig</STRONG> (Thumb, 292 bytes, Stack size 20 bytes, stm32h7xx_hal_ltdc.o(.text.LTDC_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
</UL>

<P><STRONG><a name="[523]"></a>QSPI_Config</STRONG> (Thumb, 346 bytes, Stack size 24 bytes, stm32h7xx_hal_qspi.o(.text.QSPI_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = QSPI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MemoryMapped
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
</UL>

<P><STRONG><a name="[522]"></a>QSPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, stm32h7xx_hal_qspi.o(.text.QSPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MemoryMapped
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
</UL>

<P><STRONG><a name="[549]"></a>SPI_CloseTransfer</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, stm32h7xx_hal_spi.o(.text.SPI_CloseTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_CloseTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>

<P><STRONG><a name="[9b]"></a>SPI_DMAAbortOnError</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32h7xx_hal_spi.o(.text.SPI_DMAAbortOnError))
<BR><BR>[Calls]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_spi.o(.text.HAL_SPI_IRQHandler)
</UL>
<P><STRONG><a name="[9d]"></a>SPI_RxISR_16BIT</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32h7xx_hal_spi.o(.text.SPI_RxISR_16BIT))
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_spi.o(.text.HAL_SPI_Receive_IT)
</UL>
<P><STRONG><a name="[9e]"></a>SPI_RxISR_32BIT</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32h7xx_hal_spi.o(.text.SPI_RxISR_32BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_RxISR_32BIT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_spi.o(.text.HAL_SPI_Receive_IT)
</UL>
<P><STRONG><a name="[9c]"></a>SPI_RxISR_8BIT</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32h7xx_hal_spi.o(.text.SPI_RxISR_8BIT))
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_spi.o(.text.HAL_SPI_Receive_IT)
</UL>
<P><STRONG><a name="[554]"></a>SPI_WaitOnFlagUntilTimeout</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, stm32h7xx_hal_spi.o(.text.SPI_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
</UL>

<P><STRONG><a name="[569]"></a>TIM_OC1_SetConfig</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text.TIM_OC1_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[56b]"></a>TIM_OC3_SetConfig</STRONG> (Thumb, 124 bytes, Stack size 20 bytes, stm32h7xx_hal_tim.o(.text.TIM_OC3_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC3_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[56c]"></a>TIM_OC4_SetConfig</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text.TIM_OC4_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC4_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[56d]"></a>TIM_OC5_SetConfig</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text.TIM_OC5_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC5_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[56e]"></a>TIM_OC6_SetConfig</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text.TIM_OC6_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC6_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[558]"></a>TIM_TI1_ConfigInputStage</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32h7xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[559]"></a>TIM_TI2_ConfigInputStage</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage))
<BR><BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[5e1]"></a>UART_EndRxTransfer</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32h7xx_hal_uart.o(.text.UART_EndRxTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_EndRxTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[574]"></a>UARTEx_SetNbDataToProcess</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32h7xx_hal_uart_ex.o(.text.UARTEx_SetNbDataToProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTEx_SetNbDataToProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetTxFifoThreshold
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetRxFifoThreshold
</UL>

<P><STRONG><a name="[7ee]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7ef]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[804]"></a>OUTLINED_FUNCTION_10</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_10))
<BR><BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7c6]"></a>OUTLINED_FUNCTION_100</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_100))
<BR><BR>[Called By]<UL><LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[83e]"></a>OUTLINED_FUNCTION_101</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_101))
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[808]"></a>OUTLINED_FUNCTION_102</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_102))
<BR><BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[827]"></a>OUTLINED_FUNCTION_103</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_103))
<BR><BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[807]"></a>OUTLINED_FUNCTION_104</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_104))
<BR><BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[806]"></a>OUTLINED_FUNCTION_105</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_105))
<BR><BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7f4]"></a>OUTLINED_FUNCTION_11</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_11))
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[80f]"></a>OUTLINED_FUNCTION_12</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_12))
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7f8]"></a>OUTLINED_FUNCTION_13</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_13))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[819]"></a>OUTLINED_FUNCTION_14</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_14))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[826]"></a>OUTLINED_FUNCTION_15</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_15))
<BR><BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7e9]"></a>OUTLINED_FUNCTION_16</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_16))
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[82c]"></a>OUTLINED_FUNCTION_17</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_17))
<BR><BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[816]"></a>OUTLINED_FUNCTION_18</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_18))
<BR><BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7ed]"></a>OUTLINED_FUNCTION_19</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_19))
<BR><BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[80e]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7fa]"></a>OUTLINED_FUNCTION_20</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_20), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>

<P><STRONG><a name="[81f]"></a>OUTLINED_FUNCTION_21</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_21))
<BR><BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7e7]"></a>OUTLINED_FUNCTION_22</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_22))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[5ac]"></a>OUTLINED_FUNCTION_23</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_23), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>

<P><STRONG><a name="[5ae]"></a>OUTLINED_FUNCTION_24</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_24), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
</UL>
<BR>[Called By]<UL><LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>

<P><STRONG><a name="[7e6]"></a>OUTLINED_FUNCTION_25</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_25))
<BR><BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7f2]"></a>OUTLINED_FUNCTION_26</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_26))
<BR><BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[80b]"></a>OUTLINED_FUNCTION_27</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_27))
<BR><BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[800]"></a>OUTLINED_FUNCTION_28</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_28))
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7f3]"></a>OUTLINED_FUNCTION_29</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_29))
<BR><BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[839]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7b0]"></a>OUTLINED_FUNCTION_30</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_30))
<BR><BR>[Called By]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[7e5]"></a>OUTLINED_FUNCTION_31</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_31))
<BR><BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[83a]"></a>OUTLINED_FUNCTION_32</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_32))
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7e4]"></a>OUTLINED_FUNCTION_33</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_33))
<BR><BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7b4]"></a>OUTLINED_FUNCTION_34</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_34))
<BR><BR>[Called By]<UL><LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[875]"></a>OUTLINED_FUNCTION_35</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_35))
<BR><BR>[Called By]<UL><LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[813]"></a>OUTLINED_FUNCTION_36</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_36))
<BR><BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[84c]"></a>OUTLINED_FUNCTION_37</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_37))
<BR><BR>[Called By]<UL><LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[7c1]"></a>OUTLINED_FUNCTION_38</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_38))
<BR><BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[7bf]"></a>OUTLINED_FUNCTION_39</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_39))
<BR><BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[7f1]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7f5]"></a>OUTLINED_FUNCTION_40</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_40))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[5ba]"></a>OUTLINED_FUNCTION_41</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_41))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OUTLINED_FUNCTION_41 &rArr; touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[82e]"></a>OUTLINED_FUNCTION_42</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_42))
<BR><BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[811]"></a>OUTLINED_FUNCTION_43</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_43))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[810]"></a>OUTLINED_FUNCTION_44</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_44))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[814]"></a>OUTLINED_FUNCTION_45</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_45))
<BR><BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[831]"></a>OUTLINED_FUNCTION_46</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_46))
<BR><BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[823]"></a>OUTLINED_FUNCTION_47</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_47))
<BR><BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[5bc]"></a>OUTLINED_FUNCTION_48</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_48))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_48 &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[7c2]"></a>OUTLINED_FUNCTION_49</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_49))
<BR><BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[82b]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[874]"></a>OUTLINED_FUNCTION_50</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_50))
<BR><BR>[Called By]<UL><LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[801]"></a>OUTLINED_FUNCTION_51</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_51))
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[87a]"></a>OUTLINED_FUNCTION_52</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_52))
<BR><BR>[Called By]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[82a]"></a>OUTLINED_FUNCTION_53</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_53))
<BR><BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7b7]"></a>OUTLINED_FUNCTION_54</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_54))
<BR><BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[81c]"></a>OUTLINED_FUNCTION_55</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_55))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7b2]"></a>OUTLINED_FUNCTION_56</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_56))
<BR><BR>[Called By]<UL><LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyAreaFromTFTToClientBuffer(const touchgfx::Rect&)
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[7b1]"></a>OUTLINED_FUNCTION_57</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_57))
<BR><BR>[Called By]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned char*, short, short)
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyAreaFromTFTToClientBuffer(const touchgfx::Rect&)
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[878]"></a>OUTLINED_FUNCTION_58</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_58))
<BR><BR>[Called By]<UL><LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[80a]"></a>OUTLINED_FUNCTION_59</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_59))
<BR><BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7fb]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[5c2]"></a>OUTLINED_FUNCTION_60</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_60))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_60 &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[87c]"></a>OUTLINED_FUNCTION_61</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_61))
<BR><BR>[Called By]<UL><LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[5c4]"></a>OUTLINED_FUNCTION_62</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_62))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_62 &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[87d]"></a>OUTLINED_FUNCTION_63</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_63))
<BR><BR>[Called By]<UL><LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[81a]"></a>OUTLINED_FUNCTION_64</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_64))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[80d]"></a>OUTLINED_FUNCTION_65</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_65))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[805]"></a>OUTLINED_FUNCTION_66</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_66))
<BR><BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7af]"></a>OUTLINED_FUNCTION_67</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_67))
<BR><BR>[Called By]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[5c5]"></a>OUTLINED_FUNCTION_68</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_68))
<BR><BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>

<P><STRONG><a name="[7ff]"></a>OUTLINED_FUNCTION_69</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_69))
<BR><BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[830]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[5c7]"></a>OUTLINED_FUNCTION_70</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_70))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_70 &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[7b8]"></a>OUTLINED_FUNCTION_71</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_71))
<BR><BR>[Called By]<UL><LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[7f6]"></a>OUTLINED_FUNCTION_72</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_72))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7f0]"></a>OUTLINED_FUNCTION_73</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_73))
<BR><BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[5c8]"></a>OUTLINED_FUNCTION_74</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_74))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OUTLINED_FUNCTION_74 &rArr; touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[5c9]"></a>OUTLINED_FUNCTION_75</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_75))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OUTLINED_FUNCTION_75 &rArr; touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[820]"></a>OUTLINED_FUNCTION_76</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_76))
<BR><BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[87b]"></a>OUTLINED_FUNCTION_77</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_77))
<BR><BR>[Called By]<UL><LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[7cd]"></a>OUTLINED_FUNCTION_78</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_78))
<BR><BR>[Called By]<UL><LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[7cc]"></a>OUTLINED_FUNCTION_79</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_79))
<BR><BR>[Called By]<UL><LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[7f9]"></a>OUTLINED_FUNCTION_8</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_8))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[80c]"></a>OUTLINED_FUNCTION_80</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_80))
<BR><BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[877]"></a>OUTLINED_FUNCTION_81</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_81))
<BR><BR>[Called By]<UL><LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[7b9]"></a>OUTLINED_FUNCTION_82</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_82))
<BR><BR>[Called By]<UL><LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[7c8]"></a>OUTLINED_FUNCTION_83</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_83))
<BR><BR>[Called By]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[876]"></a>OUTLINED_FUNCTION_84</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_84))
<BR><BR>[Called By]<UL><LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[5ca]"></a>OUTLINED_FUNCTION_85</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_85))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_85 &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[7c4]"></a>OUTLINED_FUNCTION_86</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_86))
<BR><BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[7c3]"></a>OUTLINED_FUNCTION_87</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_87))
<BR><BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[7b3]"></a>OUTLINED_FUNCTION_88</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_88))
<BR><BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[7ba]"></a>OUTLINED_FUNCTION_89</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_89))
<BR><BR>[Called By]<UL><LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[81e]"></a>OUTLINED_FUNCTION_9</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_9))
<BR><BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[5cc]"></a>OUTLINED_FUNCTION_90</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_90))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OUTLINED_FUNCTION_90 &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[5ce]"></a>OUTLINED_FUNCTION_91</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_91))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OUTLINED_FUNCTION_91 &rArr; touchgfx::LCD16bpp::div255_565(unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[5d0]"></a>OUTLINED_FUNCTION_92</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_92))
<BR><BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[83c]"></a>OUTLINED_FUNCTION_93</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_93))
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7ea]"></a>OUTLINED_FUNCTION_94</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_94))
<BR><BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7cb]"></a>OUTLINED_FUNCTION_95</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_95))
<BR><BR>[Called By]<UL><LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[7e3]"></a>OUTLINED_FUNCTION_96</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_96))
<BR><BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[879]"></a>OUTLINED_FUNCTION_97</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_97))
<BR><BR>[Called By]<UL><LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[7b6]"></a>OUTLINED_FUNCTION_98</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_98))
<BR><BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[5d1]"></a>OUTLINED_FUNCTION_99</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd16bpp.o(.text.OUTLINED_FUNCTION_99))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OUTLINED_FUNCTION_99 &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned char*, short, short)
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[592]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, abstractdatagraph.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OUTLINED_FUNCTION_0 &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>

<P><STRONG><a name="[5a3]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, abstractdatagraph.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OUTLINED_FUNCTION_1 &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&)
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::addLeftElement(touchgfx::AbstractGraphDecoration&)
</UL>

<P><STRONG><a name="[5a7]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, abstractdatagraph.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_2 &rArr; touchgfx::AbstractDataGraph::convertToNewScale(int, int, int) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::convertToNewScale(int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::setScaleY(int, bool)
</UL>

<P><STRONG><a name="[5b0]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, abstractdatagraph.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_3 &rArr; touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::xScreenRangeToIndexRange(short, short, short&, short&) const
</UL>

<P><STRONG><a name="[72a]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, abstractdatagraph.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)
</UL>

<P><STRONG><a name="[5be]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_5 &rArr; touchgfx::Container::add(touchgfx::Drawable&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&)
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::addLeftElement(touchgfx::AbstractGraphDecoration&)
</UL>

<P><STRONG><a name="[72e]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, abstractdatagraph.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateXAxisPointAt(short)
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[71b]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, abstractdatagraph.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::setScaleY(int, bool)
</UL>

<P><STRONG><a name="[6c8]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, application.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[871]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bitmap.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
</UL>

<P><STRONG><a name="[5b2]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bitmap.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_4 &rArr; touchgfx::Bitmap::isDynamicBitmap(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::isDynamicBitmap(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::dynamicBitmapGetAddress(unsigned short)
</UL>

<P><STRONG><a name="[855]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, canvaswidget.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[886]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, constfont.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::find(unsigned short) const
</UL>

<P><STRONG><a name="[593]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, digitalclock.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Calls]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentMinute() const
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>

<P><STRONG><a name="[6d8]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, digitalclock.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setHeight(short)
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setWidth(short)
</UL>

<P><STRONG><a name="[709]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dma.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::start()
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::executeCompleted()
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::isDmaQueueEmpty()
</UL>

<P><STRONG><a name="[70d]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dma.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::execute()
</UL>

<P><STRONG><a name="[595]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, drawable.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OUTLINED_FUNCTION_0 &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[716]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, easingequations.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)
</UL>

<P><STRONG><a name="[597]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, font.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_0 &rArr; touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[5a4]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, font.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_1 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[5a8]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, font.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_2 &rArr; touchgfx::TextProvider::TextProvider() &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[86e]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, font.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[86d]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, font.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[721]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, graphelements.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[866]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, graphelements.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridBase::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[868]"></a>OUTLINED_FUNCTION_10</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, graphelements.o(.text.OUTLINED_FUNCTION_10))
<BR><BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridBase::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[71f]"></a>OUTLINED_FUNCTION_11</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, graphelements.o(.text.OUTLINED_FUNCTION_11))
<BR><BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[85f]"></a>OUTLINED_FUNCTION_12</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, graphelements.o(.text.OUTLINED_FUNCTION_12))
<BR><BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[867]"></a>OUTLINED_FUNCTION_13</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, graphelements.o(.text.OUTLINED_FUNCTION_13))
<BR><BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridBase::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[85e]"></a>OUTLINED_FUNCTION_14</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, graphelements.o(.text.OUTLINED_FUNCTION_14))
<BR><BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[725]"></a>OUTLINED_FUNCTION_18</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, graphelements.o(.text.OUTLINED_FUNCTION_18))
<BR><BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridBase::draw(const touchgfx::Rect&) const
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[727]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, graphelements.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[5aa]"></a>OUTLINED_FUNCTION_20</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, graphelements.o(.text.OUTLINED_FUNCTION_20))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_20 &rArr; touchgfx::Canvas::render(unsigned char) &rArr; touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char) &rArr; touchgfx::Outline::closeOutlineAndSortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[720]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, graphelements.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[861]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, graphelements.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Called By]<UL><LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
</UL>

<P><STRONG><a name="[862]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, graphelements.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Called By]<UL><LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
</UL>

<P><STRONG><a name="[869]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, graphelements.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridBase::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[723]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, graphelements.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[86a]"></a>OUTLINED_FUNCTION_8</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, graphelements.o(.text.OUTLINED_FUNCTION_8))
<BR><BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementGridBase::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[5cb]"></a>OUTLINED_FUNCTION_9</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, graphelements.o(.text.OUTLINED_FUNCTION_9))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_9 &rArr; touchgfx::Canvas::~Canvas__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementArea::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[599]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, graphlabels.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_0 &rArr; touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsY::drawString(const touchgfx::Rect&, const touchgfx::Font*, const touchgfx::AbstractDataGraph*, int, int, unsigned char) const
</UL>

<P><STRONG><a name="[85a]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, graphlabels.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsY::drawString(const touchgfx::Rect&, const touchgfx::Font*, const touchgfx::AbstractDataGraph*, int, int, unsigned char) const
</UL>

<P><STRONG><a name="[85d]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, graphlabels.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsBase::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[857]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, graphlabels.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsY::drawString(const touchgfx::Rect&, const touchgfx::Font*, const touchgfx::AbstractDataGraph*, int, int, unsigned char) const
</UL>

<P><STRONG><a name="[5b4]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, graphlabels.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_4 &rArr; touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphLabelsY::drawString(const touchgfx::Rect&, const touchgfx::Font*, const touchgfx::AbstractDataGraph*, int, int, unsigned char) const
</UL>

<P><STRONG><a name="[59a]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, hal.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_0
</UL>
<BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned)
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
</UL>

<P><STRONG><a name="[744]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned)
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)
</UL>

<P><STRONG><a name="[73f]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyWord(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[742]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer()
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[5b6]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_4 &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyWord(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[747]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, const touchgfx::Rect&)
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBufferForRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>

<P><STRONG><a name="[740]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyWord(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[59c]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lcd.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_0 &rArr; touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*)
</UL>
<BR>[Called By]<UL><LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*)
</UL>

<P><STRONG><a name="[5a6]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcd.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_1 &rArr; touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLInternal(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, unsigned short, const touchgfx::LCD::DrawStringInternalStruct*)
</UL>
<BR>[Called By]<UL><LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*)
</UL>

<P><STRONG><a name="[75b]"></a>OUTLINED_FUNCTION_11</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd.o(.text.OUTLINED_FUNCTION_11))
<BR><BR>[Called By]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[759]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[75a]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTL(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[75e]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Called By]<UL><LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*)
</UL>

<P><STRONG><a name="[75f]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Called By]<UL><LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*)
</UL>

<P><STRONG><a name="[75d]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Called By]<UL><LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringRTLLine(short&, const touchgfx::Font*, unsigned char, touchgfx::TextProvider&, int, bool, const touchgfx::LCD::DrawStringInternalStruct*)
</UL>

<P><STRONG><a name="[765]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[762]"></a>OUTLINED_FUNCTION_9</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd.o(.text.OUTLINED_FUNCTION_9))
<BR><BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[781]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, screen.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[782]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, screen.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[784]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, slider.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::updateIndicatorPosition(short)
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::handleDragEvent(const touchgfx::DragEvent&)
</UL>

<P><STRONG><a name="[872]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, slider.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::valueToPosition(int) const
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::positionToValue(short) const
</UL>

<P><STRONG><a name="[786]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, slider.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::updateIndicatorPosition(short)
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::handleClickEvent(const touchgfx::ClickEvent&)
</UL>

<P><STRONG><a name="[787]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, slider.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setupHorizontalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[785]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, slider.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValue(int)
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::handleDragEvent(const touchgfx::DragEvent&)
</UL>

<P><STRONG><a name="[873]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, slider.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::valueToPosition(int) const
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::positionToValue(short) const
</UL>

<P><STRONG><a name="[5bf]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, slider.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OUTLINED_FUNCTION_6 &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::updateIndicatorPosition(short)
</UL>

<P><STRONG><a name="[84f]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, textarea.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentTextWithAlignment()
</UL>

<P><STRONG><a name="[850]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, textarea.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentTextWithAlignment()
</UL>

<P><STRONG><a name="[880]"></a>OUTLINED_FUNCTION_10</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, textarea.o(.text.OUTLINED_FUNCTION_10))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[87f]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, textarea.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight() const
</UL>

<P><STRONG><a name="[84e]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, textarea.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentTextWithAlignment()
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
</UL>

<P><STRONG><a name="[87e]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, textarea.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight() const
</UL>

<P><STRONG><a name="[884]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, textarea.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[883]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, textarea.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[84d]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, textarea.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Called By]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentTextWithAlignment()
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight() const
</UL>

<P><STRONG><a name="[882]"></a>OUTLINED_FUNCTION_8</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, textarea.o(.text.OUTLINED_FUNCTION_8))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[881]"></a>OUTLINED_FUNCTION_9</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, textarea.o(.text.OUTLINED_FUNCTION_9))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[59e]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, textprovider.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Calls]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[703]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, textprovider.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
</UL>

<P><STRONG><a name="[702]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, textprovider.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
</UL>

<P><STRONG><a name="[6f9]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, textprovider.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[5b8]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, textprovider.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_4 &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::unicodeConverter(unsigned char)
</UL>

<P><STRONG><a name="[701]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, textprovider.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Called By]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
</UL>

<P><STRONG><a name="[5c0]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, textprovider.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_6 &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)2&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
</UL>

<P><STRONG><a name="[59f]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, unicode.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_0
</UL>
<BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::nextChar(const unsigned short*&, const char*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>

<P><STRONG><a name="[7a0]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, unicode.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*)
</UL>

<P><STRONG><a name="[7a2]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, unicode.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>

<P><STRONG><a name="[5a1]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, canvas.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_0 &rArr; touchgfx::Rasterizer::lineTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::lineTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::close()
</UL>

<P><STRONG><a name="[7a7]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gestures.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[794]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, outline.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>

<P><STRONG><a name="[795]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, outline.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
